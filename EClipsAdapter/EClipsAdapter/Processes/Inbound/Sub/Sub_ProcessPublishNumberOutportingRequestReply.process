<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx="http://xmlns.example.com/unique/default/namespace/1137414045923" xmlns:ns1="http://xmlns.kpn.com/common/cdm/Base.xsd" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx2="http://xmlns.kpn.com/eai/common/errors" xmlns:pfx3="http://xmlns.kpn.com/fixed/common/test/publish/TestPublicationService" xmlns:pfx4="http://xmlns.kpn.com/fixed/portingserviceswf/publish/NotifyNumberInPortingComplete" xmlns:pfx5="urn:NotifyNumberInportingComplete" xmlns:ns12="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:pfx6="urn:StartNumberInporting" xmlns:eai="java://com.kpn.eai.component.common.CommonXPathFunctions" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx7="http://xmlns.kpn.com/fixed/coinadapter/publish/ReceivePlannedNumberDeactivation.xsd" xmlns:pfx8="urn:ReceivePlannedNumberDeactivation" xmlns:pfx9="http://xmlns.kpn.com/fixed/portingserviceswf/publish/NotifyPlannedNumberDeactivation.xsd" xmlns:pfx10="EcPsXsd_V0.2" xmlns:pfx11="http://webservices.kpn-lls.com/V0.2/EcnsPortingServices.wsdl" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx12="http://xmlns.kpn.com/fixed/portingserviceswf/publish/NotifyNumberDeactivation.xsd" xmlns:ns5="http://xmlns.kpn.com/fixed/portingserviceswf/common/NumberSerie.xsd" xmlns:pfx13="http://xmlns.kpn.com/fixed/portingserviceswf/publish/NotifyNumberInPortingComplete.xsd" xmlns:pfx14="http://xmlns.kpn.com/fixed/servicescanneradapter/request/PerformQualityOfServiceScan_SOAPRequest.xsd" xmlns:pfx15="http://webservices.kpn-lls.com/V0.2/MmspOrdering.wsdl" xmlns:pfx16="MmspXsd_V0.2" xmlns:pfx17="http://xmlns.kpn.com/fixed/annetadapter/request/PerformQualityOfServiceScan_SOAPRequest.xsd" xmlns:pfx18="http://xmlns.kpn.com/EAI/fixed/0292_CreateSubscriber/1.0/Request" xmlns:pfx19="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/GetAvailabilityLogicalResourceResponse.xsd" xmlns:pfx20="urn:GetLogicalPortServiceInformation" xmlns:pfx21="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/CreateSubscriberRequest.xsd" xmlns:pfx22="http://engine.servicescanner.edgetech.nl" xmlns:pfx23="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/DeleteSubscribersRequest.xsd" xmlns:ns6="http://xmlns.kpn.com/EAI/fixed/0298_DeleteSubscribers/1.0/Request" xmlns:pfx24="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/ReleaseNumbersRequest.xsd" xmlns:pfx25="EcnsXsd_V0.2" xmlns:ns7="http://xmlns.kpn.com/EAI/fixed/0303_ReleaseNumbers/1.0/Request" xmlns:pfx26="http://webservices.kpn-lls.com/V0.2/EcnsOrdering.wsdl" xmlns:pfx27="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/PublishNumberOutportingResponse.xsd" xmlns:ns8="http://xmlns.kpn.com/EAI/fixed/0323_PublishNumberOutportingRequest/1.0/Response" xmlns:pfx28="http://xmlns.kpn.com/Outbound/Publish/SubmitOrder.xsd" xmlns:ns9="http://xmlns.kpn.com/imported/ordermessage.xsd" xmlns:ns10="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/UpdateSubscriptionResponse.xsd" xmlns:ns11="http://xmlns.kpn.com/Inbound/Subscribe/UpdateOrderStatus.xsd" xmlns:pfx29="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/AssignNumbersRequest.xsd">
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1137414045923" schemaLocation="/Processes/Test Resources/TestPublish.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/common/test/publish/TestPublicationService" schemaLocation="/Common/Test Resources/XSDSchemas/TestComponent1/Publish/TestPublicationService.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/publish/NotifyNumberInPortingComplete" schemaLocation="/XSDSchemas/PortingServicesWF/Publish/NotifyNumberInPortingComplete.xsd"/>
    <xsd:import namespace="urn:NotifyNumberInportingComplete" schemaLocation="/WSDL/NotifyNumberInportingComplete.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/coinadapter/publish/ReceivePlannedNumberDeactivation.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Publish/ReceivePlannedNumberDeactivation.xsd"/>
    <xsd:import namespace="urn:ReceivePlannedNumberDeactivation" schemaLocation="/WSDL/ReceivePlannedNumberDeactivation.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/publish/NotifyPlannedNumberDeactivation.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Publish/NotifyPlannedNumberDeactivation.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/publish/NotifyNumberDeactivation.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Publish/NotifyNumberDeactivation.xsd"/>
    <xsd:import namespace="EcPsXsd_V0.2" schemaLocation="/WSDL/EcnsPortingServices.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0292_CreateSubscriber/1.0/Request" schemaLocation="/XSDSchemas/EClipsAdapter/Imported/0292_CreateSubscriber_1.0_Request_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/CreateSubscriberRequest.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Request/CreateSubscriber.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/DeleteSubscribersRequest.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Request/DeleteSubscribers.xsd"/>
    <xsd:import namespace="MmspXsd_V0.2" schemaLocation="/WSDL/MmspOrdering.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/ReleaseNumbersRequest.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Request/ReleaseNumbers.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/PublishNumberOutportingResponse.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Response/PublishNumberOutportingResponse.xsd"/>
    <xsd:import namespace="EcnsXsd_V0.2" schemaLocation="/WSDL/EcnsOrdering.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/Outbound/Publish/SubmitOrder.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Request/SubmitOrder.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/UpdateSubscriptionResponse.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Response/UpdateSubscription.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/Inbound/Subscribe/UpdateOrderStatus.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Response/UpdateOrderStatus.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/eai/common/errors" schemaLocation="/Common/Shared Resources/Errors.xsd"/>
    <wsdl:import namespace="http://webservices.kpn-lls.com/V0.2/EcnsPortingServices.wsdl" location="/WSDL/EcnsPortingServices.wsdl"/>
    <wsdl:import namespace="http://webservices.kpn-lls.com/V0.2/MmspOrdering.wsdl" location="/WSDL/MmspOrdering.wsdl"/>
    <wsdl:import namespace="http://webservices.kpn-lls.com/V0.2/EcnsOrdering.wsdl" location="/WSDL/EcnsOrdering.wsdl"/>
    <pd:name>EClipsAdapter/Processes/Inbound/Sub/Sub_ProcessPublishNumberOutportingRequestReply.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="ServiceIn">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="Body" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>39</pd:startX>
    <pd:startY>199</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>974</pd:endX>
    <pd:endY>205</pd:endY>
    <pd:errorSchemas>
        <Exception ref="pfx2:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:activity name="Parse Publication">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>158</pd:x>
        <pd:y>200</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx28:SubmitOrder"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/ServiceIn/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>252</pd:x>
        <pd:y>41</pd:y>
        <pd:width>657</pd:width>
        <pd:height>308</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>SOAPData</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogSOAPResponse</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SOAPRequestReply</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogSOAPRequest</pd:from>
            <pd:to>SOAPRequestReply</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SOAPData</pd:from>
            <pd:to>LogSOAPRequest</pd:to>
            <pd:xpathDescription>Trace</pd:xpathDescription>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>eai:isTraceOn("EClips-04001")</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>SOAPData</pd:from>
            <pd:to>SOAPRequestReply</pd:to>
            <pd:xpathDescription>NoTrace</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SOAPRequestReply</pd:from>
            <pd:to>LogSOAPResponse</pd:to>
            <pd:xpathDescription>Trace</pd:xpathDescription>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>eai:isTraceOn("EClips-04002")</pd:xpath>
        </pd:transition>
        <pd:activity name="LogSOAPRequest">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>424</pd:x>
            <pd:y>96</pd:y>
            <config>
                <processName>/Common/Sub Processes/Sub_Trace.process</processName>
            </config>
            <pd:inputBindings>
                <TraceIn>
                    <MsgCode>
                        <xsl:value-of select="&quot;EClips-04001&quot;"/>
                    </MsgCode>
                    <xsl:if test="$Parse-Publication/pfx28:SubmitOrder/ns1:CMH/ns1:TRACKING/ns1:MESSAGE_ID">
                        <MsgId>
                            <xsl:value-of select="$Parse-Publication/pfx28:SubmitOrder/ns1:CMH/ns1:TRACKING/ns1:MESSAGE_ID"/>
                        </MsgId>
                    </xsl:if>
                    <Parameter>
                        <xsl:value-of select="tib:render-xml($SOAPData/pfx25:EcnsResponseAgreeToOutport, false(), true())"/>
                    </Parameter>
                </TraceIn>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="SOAPData">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>326</pd:x>
            <pd:y>204</pd:y>
            <config>
                <element ref="pfx25:EcnsResponseAgreeToOutport"/>
            </config>
            <pd:inputBindings>
                <pfx25:EcnsResponseAgreeToOutport>
                    <pfx25:EcnsHeaderStruct>
                        <pfx25:Sender>
                            <xsl:value-of select="$Parse-Publication/pfx28:SubmitOrder/ns1:CMH/ns1:ATTRIBUTE[@ns1:NAME ='SENDER']/@ns1:VALUE"/>
                        </pfx25:Sender>
                        <pfx25:Receiver>
                            <xsl:value-of select="$Parse-Publication/pfx28:SubmitOrder/ns1:CMH/ns1:ATTRIBUTE[@ns1:NAME ='RECEIVER']/@ns1:VALUE"/>
                        </pfx25:Receiver>
                    </pfx25:EcnsHeaderStruct>
                    <pfx25:ResponseAgreeToOutportReqStruct>
                        <pfx25:OrderId>
                            <xsl:value-of select="number($Parse-Publication/pfx28:SubmitOrder/ns9:BODY/ORDER/ORDER_HEADER/ORDER_ID)"/>
                        </pfx25:OrderId>
                        <pfx25:PackagerCode>
                            <xsl:value-of select="$Parse-Publication/pfx28:SubmitOrder/ns9:BODY/ORDER/ORDER_HEADER/CUSTOMER_ID/ID_PACKAGER/EXTERNAL"/>
                        </pfx25:PackagerCode>
                        <pfx25:PortingId>
                            <xsl:value-of select="$Parse-Publication/pfx28:SubmitOrder/ns9:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/PORTING_PRODUCT/PORTING_ID"/>
                        </pfx25:PortingId>
                        <xsl:choose>
                            <xsl:when test="$Parse-Publication/pfx28:SubmitOrder/ns9:BODY/ORDER/ORDER_ITEM/PRODUCT/PORTING_PRODUCT/IS_BLOCKING =&quot;true&quot; or &#xA;$Parse-Publication/pfx28:SubmitOrder/ns9:BODY/ORDER/ORDER_ITEM/PRODUCT/PORTING_PRODUCT/IS_BLOCKING =1">
                                <pfx25:BlockingYN>
                                    <xsl:value-of select="'Y'"/>
                                </pfx25:BlockingYN>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx25:BlockingYN>
                                    <xsl:value-of select="'N'"/>
                                </pfx25:BlockingYN>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:if test="$Parse-Publication/pfx28:SubmitOrder/ns9:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/PORTING_PRODUCT/BLOCKING_CODE">
                            <pfx25:BlockingCode>
                                <xsl:value-of select="$Parse-Publication/pfx28:SubmitOrder/ns9:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/PORTING_PRODUCT/BLOCKING_CODE"/>
                            </pfx25:BlockingCode>
                        </xsl:if>
                        <xsl:if test="$Parse-Publication/pfx28:SubmitOrder/ns9:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/PORTING_PRODUCT/NOTES">
                            <pfx25:Note>
                                <xsl:value-of select="$Parse-Publication/pfx28:SubmitOrder/ns9:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/PORTING_PRODUCT/NOTES"/>
                            </pfx25:Note>
                        </xsl:if>
                        <xsl:if test="exists($Parse-Publication/pfx28:SubmitOrder/ns9:BODY/ORDER/ORDER_ITEM/PRODUCT/PORTING_PRODUCT/PORTING_PROPOSED_DATE_TIME)">
                            <pfx25:ProposedDateTime>
                                <xsl:value-of select="$Parse-Publication/pfx28:SubmitOrder/ns9:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/PORTING_PRODUCT/PORTING_PROPOSED_DATE_TIME"/>
                            </pfx25:ProposedDateTime>
                        </xsl:if>
                    </pfx25:ResponseAgreeToOutportReqStruct>
                </pfx25:EcnsResponseAgreeToOutport>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogSOAPResponse">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>726</pd:x>
            <pd:y>102</pd:y>
            <config>
                <processName>/Common/Sub Processes/Sub_Trace.process</processName>
            </config>
            <pd:inputBindings>
                <TraceIn>
                    <MsgCode>
                        <xsl:value-of select="&quot;EClips-04002&quot;"/>
                    </MsgCode>
                    <xsl:if test="$Parse-Publication/pfx28:SubmitOrder/ns1:CMH/ns1:TRACKING/ns1:MESSAGE_ID">
                        <MsgId>
                            <xsl:value-of select="$Parse-Publication/pfx28:SubmitOrder/ns1:CMH/ns1:TRACKING/ns1:MESSAGE_ID"/>
                        </MsgId>
                    </xsl:if>
                    <Parameter>
                        <xsl:value-of select="tib:render-xml($SOAPRequestReply/outputMessage, false(), true())"/>
                    </Parameter>
                </TraceIn>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="SOAPRequestReply">
            <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
            <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
            <pd:x>576</pd:x>
            <pd:y>202</pd:y>
            <config>
                <timeout>%%EClipsAdapter/Inbound/SOAP/Timeout%%</timeout>
                <service>pfx26:EcnsOrderingService</service>
                <servicePort>ReleaseNumberSeriesHttpPort</servicePort>
                <operation>ResponseAgreeToOutportOperation</operation>
                <endpointURL>%%EClipsAdapter/Inbound/SOAP/EndPointURL/EcnsOrderingService/PNORREndPoint%%</endpointURL>
                <requireBasicAuth>false</requireBasicAuth>
                <basicHttpAuthIdentity/>
                <soapAction>/ProcessDefinitions/V0.2/ResponseAgreeToOutportServer</soapAction>
                <ns0:ssl xmlns:ns0="http://www.tibco.com/xmlns/aemeta/services/2002">
                    <ns0:strongCipherSuitesOnly>true</ns0:strongCipherSuitesOnly>
                    <ns0:cert isRef="true">/EClipsAdapter/Shared Resources/Trusted Certificates/.folder</ns0:cert>
                </ns0:ssl>
                <useProxy>false</useProxy>
            </config>
            <pd:inputBindings>
                <inputMessage>
                    <xsl:copy-of select="$SOAPData/pfx25:EcnsResponseAgreeToOutport"/>
                </inputMessage>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Throw-Exception">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>263</pd:x>
        <pd:y>450</pd:y>
        <config>
            <faultName>Exception</faultName>
        </config>
        <pd:inputBindings>
            <ns4:ActivityInput>
                <xsl:choose>
                    <xsl:when test="exists($_error_SOAPRequestReply)">
                        <messageCode>
                            <xsl:value-of select="&quot;EClips-03001&quot;"/>
                        </messageCode>
                    </xsl:when>
                    <xsl:when test="exists($_error_Parse-Publication)">
                        <messageCode>
                            <xsl:value-of select="&quot;EClips-03006&quot;"/>
                        </messageCode>
                    </xsl:when>
                    <xsl:otherwise>
                        <messageCode>
                            <xsl:value-of select="&quot;EClips-03002&quot;"/>
                        </messageCode>
                    </xsl:otherwise>
                </xsl:choose>
                <data>
                    <xsl:choose>
                        <xsl:when test="exists($_error_SOAPRequestReply)">
                            <pfx2:Error>
                                <pfx2:MsgCode>
                                    <xsl:value-of select="&quot;EClips-03001&quot;"/>
                                </pfx2:MsgCode>
                                <ns3:ErrorReport>
                                    <xsl:copy-of select="$_error/ns3:ErrorReport/ancestor-or-self::*/namespace::node()"/>
                                    <xsl:copy-of select="$_error/ns3:ErrorReport/@*"/>
                                    <xsl:copy-of select="$_error/ns3:ErrorReport/node()"/>
                                </ns3:ErrorReport>
                            </pfx2:Error>
                        </xsl:when>
                        <xsl:when test="exists($_error_Parse-Publication)">
                            <pfx2:Error>
                                <pfx2:MsgCode>
                                    <xsl:value-of select="&quot;EClips-03006&quot;"/>
                                </pfx2:MsgCode>
                                <ns3:ErrorReport>
                                    <xsl:copy-of select="$_error/ns3:ErrorReport/ancestor-or-self::*/namespace::node()"/>
                                    <xsl:copy-of select="$_error/ns3:ErrorReport/@*"/>
                                    <xsl:copy-of select="$_error/ns3:ErrorReport/node()"/>
                                </ns3:ErrorReport>
                            </pfx2:Error>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx2:Error>
                                <pfx2:MsgCode>
                                    <xsl:value-of select="&quot;EClips-03002&quot;"/>
                                </pfx2:MsgCode>
                                <pfx2:Params>
                                    <xsl:value-of select="&quot;: Incorrect data supplied in message&quot;"/>
                                </pfx2:Params>
                                <ns3:ErrorReport>
                                    <xsl:copy-of select="$_error/ns3:ErrorReport/ancestor-or-self::*/namespace::node()"/>
                                    <xsl:copy-of select="$_error/ns3:ErrorReport/@*"/>
                                    <xsl:copy-of select="$_error/ns3:ErrorReport/node()"/>
                                </ns3:ErrorReport>
                            </pfx2:Error>
                        </xsl:otherwise>
                    </xsl:choose>
                </data>
            </ns4:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse Publication</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Publication</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Publication</pd:from>
        <pd:to>Throw-Exception</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Throw-Exception</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>