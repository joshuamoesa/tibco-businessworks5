<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/GenericSOAPGateway/Response/0001_FindCustomer_2.2_Response_EAI_BUS_SIDE.xsd" xmlns:ns="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" xmlns:ns1="http://xmlns.kpn.com/fixed/ckradapter/common/CKRResponse.xsd" xmlns:ns2="http://xmlns.kpn.com/common/cdm/Base.xsd" xmlns:ns3="http://xmlns.kpn.com/fixed/ckradapter/common/Customer.xsd" xmlns:ns4="http://xmlns.kpn.com/fixed/ckradapter/common/PropertyAddress.xsd" xmlns:ns5="http://xmlns.kpn.com/fixed/ckradapter/common/CustomerReference.xsd" xmlns:ns6="http://xmlns.kpn.com/fixed/ckradapter/common/ExternalCustomerReference.xsd" xmlns:ns7="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx3="http://xmlns.kpn.com/eai/common/errors" xmlns:pfx4="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns8="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns10="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/GenericSOAPGateway/Request/0001_FindCustomer_2.2_Response_EAI_BUS_SIDE.xsd" xmlns:ns11="http://xmlns.kpn.com/fixed/GenericSOAPGateway/XSDSchemas/GenericSOAPGateway/Response/0001_FindCustomer_2.2_Response_EAI_BUS_SIDE.xsd" xmlns:pfx5="http://xmlns.kpn.com/EAI/fixed/0001_FindCustomer/2.2/Response" xmlns:pfx6="http://xmlns.kpn.com/EAI/fixed/0130_ChangeDateOfBirth/1.0/Response" xmlns:ns12="http://xmlns.kpn.com/fixed/ckradapter/response/ChangeDateOfBirth.xsd" xmlns:pfx7="http://xmlns.kpn.com/EAI/fixed/0048_GetLeasedLineDetails/1.0/Response" xmlns:ns13="http://xmlns.example.com/unique/default/namespace/1113223861421" xmlns:ns14="http://xmlns.kpn.com/fixed/kanvascontractadapter/common/KanvasResponse.xsd" xmlns:ns15="http://xmlns.example.com/unique/default/namespace/1111411714437" xmlns:ns16="http://xmlns.example.com/unique/default/namespace/1113227710953" xmlns:ns17="http://xmlns.kpn.com/fixed/common/PropertyAddress.xsd" xmlns:pfx8="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_OutputMap_input.xsd" xmlns:pfx9="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_OutputMap_output.xsd">
    <xsd:import namespace="http://xmlns.kpn.com/eai/common/errors" schemaLocation="/Common/Shared Resources/Errors.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" schemaLocation="/XSDSchemas/Common/ResultStatus.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0001_FindCustomer/2.2/Response" schemaLocation="/XSDSchemas/GenericSOAPGateway/Response/0001_FindCustomer_2.2_Response_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/FindCustomer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0130_ChangeDateOfBirth/1.0/Response" schemaLocation="/XSDSchemas/GenericSOAPGateway/Response/0130_ChangeDateOfBirth_1.0_Response_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/response/ChangeDateOfBirth.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/ChangeDateOfBirth.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0048_GetLeasedLineDetails/1.0/Response" schemaLocation="/XSDSchemas/GenericSOAPGateway/Response/0048_GetLeasedLineDetails_1.0_Response_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1113223861421" schemaLocation="/XSDSchemas/KanvasContractAdapter/Response/GetLeasedLineDetails.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_OutputMap_input.xsd" schemaLocation="/XSDSchemas/GenericSOAPGateway/Common/EAI_OutputMap_input.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_OutputMap_output.xsd" schemaLocation="/XSDSchemas/GenericSOAPGateway/Common/EAI_OutputMap_output.xsd"/>
    <pd:name>GenericSOAPGateway/Processes/Sub_Processes/S0048.GetLeasedLineDetails.1.OutputMap.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx8:BodyContainer"/>
    <pd:startX>106</pd:startX>
    <pd:startY>111</pd:startY>
    <pd:returnBindings>
        <pfx9:BodyContainer>
            <xsl:copy-of select="$MapData/Output/pfx7:BODY"/>
        </pfx9:BodyContainer>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx9:BodyContainer"/>
    <pd:endX>425</pd:endX>
    <pd:endY>108</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:activity name="MapData">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>262</pd:x>
        <pd:y>111</pd:y>
        <config>
            <element>
                <xsd:element name="Output">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx7:BODY" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/pfx8:BodyContainer/*" element="ns13:GetLeasedLineDetails"/>
        </pd:coercions>
        <pd:inputBindings>
            <Output>
                <pfx7:BODY>
                    <xsl:for-each select="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:LINE">
                        <LINE>
                            <PROPERTYADDRESS>
                                <xsl:if test="ns16:PROPERTY_ADDRESS/ns17:DUTCH_POSTCODE_NUMBERS">
                                    <DUTCH_POSTCODE_NUMBERS>
                                        <xsl:value-of select="ns16:PROPERTY_ADDRESS/ns17:DUTCH_POSTCODE_NUMBERS"/>
                                    </DUTCH_POSTCODE_NUMBERS>
                                </xsl:if>
                                <xsl:if test="ns16:PROPERTY_ADDRESS/ns17:DUTCH_POSTCODE_LETTERS">
                                    <DUTCH_POSTCODE_LETTERS>
                                        <xsl:value-of select="ns16:PROPERTY_ADDRESS/ns17:DUTCH_POSTCODE_LETTERS"/>
                                    </DUTCH_POSTCODE_LETTERS>
                                </xsl:if>
                                <xsl:if test="ns16:PROPERTY_ADDRESS/ns17:HOUSE_NUMBER">
                                    <HOUSE_NUMBER>
                                        <xsl:value-of select="ns16:PROPERTY_ADDRESS/ns17:HOUSE_NUMBER"/>
                                    </HOUSE_NUMBER>
                                </xsl:if>
                                <xsl:if test="ns16:PROPERTY_ADDRESS/ns17:HOUSE_NUMBER_EXTENSION">
                                    <HOUSE_NUMBER_EXTENSION>
                                        <xsl:value-of select="ns16:PROPERTY_ADDRESS/ns17:HOUSE_NUMBER_EXTENSION"/>
                                    </HOUSE_NUMBER_EXTENSION>
                                </xsl:if>
                            </PROPERTYADDRESS>
                            <xsl:if test="ns16:LINE_STATUS">
                                <LINE_STATUS>
                                    <xsl:value-of select="ns16:LINE_STATUS"/>
                                </LINE_STATUS>
                            </xsl:if>
                            <xsl:if test="ns16:INVOERKABEL_SEQUENCE_NUMBER">
                                <INVOERKABEL_SEQUENCE_NUMBER>
                                    <xsl:value-of select="ns16:INVOERKABEL_SEQUENCE_NUMBER"/>
                                </INVOERKABEL_SEQUENCE_NUMBER>
                            </xsl:if>
                            <xsl:if test="ns16:DIKADER_NUMBER">
                                <DIKADER_NUMBER>
                                    <xsl:value-of select="ns16:DIKADER_NUMBER"/>
                                </DIKADER_NUMBER>
                            </xsl:if>
                            <xsl:if test="ns16:INFRA_PROVIDER_SHORT_NAME">
                                <INFRA_PROVIDER_SHORT_NAME>
                                    <xsl:value-of select="ns16:INFRA_PROVIDER_SHORT_NAME"/>
                                </INFRA_PROVIDER_SHORT_NAME>
                            </xsl:if>
                        </LINE>
                    </xsl:for-each>
                    <PORT>
                        <xsl:if test="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:PORT/ns15:PORT_EQUIPMENT_CODE">
                            <PORT_EQUIPMENT_CODE>
                                <xsl:value-of select="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:PORT/ns15:PORT_EQUIPMENT_CODE"/>
                            </PORT_EQUIPMENT_CODE>
                        </xsl:if>
                        <xsl:if test="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:PORT/ns15:PORT_EQUIPMENT_TYPE">
                            <PORT_EQUIPMENT_TYPE>
                                <xsl:value-of select="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:PORT/ns15:PORT_EQUIPMENT_TYPE"/>
                            </PORT_EQUIPMENT_TYPE>
                        </xsl:if>
                        <xsl:if test="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:PORT/ns15:PORT_ID">
                            <PORT_ID>
                                <xsl:value-of select="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:PORT/ns15:PORT_ID"/>
                            </PORT_ID>
                        </xsl:if>
                    </PORT>
                    <TTP_A_SIDE>
                        <xsl:if test="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:TTP_A_SIDE/ns13:NAME">
                            <NAME>
                                <xsl:value-of select="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:TTP_A_SIDE/ns13:NAME"/>
                            </NAME>
                        </xsl:if>
                        <xsl:if test="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:TTP_A_SIDE/ns13:NAME_EXTENSION">
                            <NAME_EXTENSION>
                                <xsl:value-of select="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:TTP_A_SIDE/ns13:NAME_EXTENSION"/>
                            </NAME_EXTENSION>
                        </xsl:if>
                    </TTP_A_SIDE>
                    <TTP_B_SIDE>
                        <xsl:if test="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:TTP_B_SIDE/ns13:NAME">
                            <NAME>
                                <xsl:value-of select="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:TTP_B_SIDE/ns13:NAME"/>
                            </NAME>
                        </xsl:if>
                        <xsl:if test="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:TTP_B_SIDE/ns13:NAME_EXTENSION">
                            <NAME_EXTENSION>
                                <xsl:value-of select="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:TTP_B_SIDE/ns13:NAME_EXTENSION"/>
                            </NAME_EXTENSION>
                        </xsl:if>
                    </TTP_B_SIDE>
                    <xsl:if test="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:FUNCTION">
                        <FUNCTION>
                            <xsl:value-of select="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:FUNCTION"/>
                        </FUNCTION>
                    </xsl:if>
                    <xsl:if test="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:LINE_NAME_EXTENSION">
                        <LINE_NAME_EXTENSION>
                            <xsl:value-of select="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:LINE_NAME_EXTENSION"/>
                        </LINE_NAME_EXTENSION>
                    </xsl:if>
                    <xsl:if test="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:LINE_QUALITY">
                        <LINE_QUALITY>
                            <xsl:value-of select="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:LINE_QUALITY"/>
                        </LINE_QUALITY>
                    </xsl:if>
                    <xsl:if test="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:SEQUENCE_NUMBER">
                        <SEQUENCE_NUMBER>
                            <xsl:value-of select="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:SEQUENCE_NUMBER"/>
                        </SEQUENCE_NUMBER>
                    </xsl:if>
                    <xsl:if test="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:NUMBER_OF_LINES">
                        <NUMBER_OF_LINES>
                            <xsl:value-of select="$Start/pfx8:BodyContainer/ns13:GetLeasedLineDetails/ns13:NUMBER_OF_LINES"/>
                        </NUMBER_OF_LINES>
                    </xsl:if>
                </pfx7:BODY>
            </Output>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>MapData</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>MapData</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>