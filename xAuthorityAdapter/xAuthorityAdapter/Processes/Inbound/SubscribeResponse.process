<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns="http://java.sun.com/products/oss/xml/ServiceActivation" xmlns:pfx2="http://java.sun.com/products/oss/xml/Common" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx3="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/xAuthorityAdapter/AllTypes.xsd" xmlns:eai="java://com.kpn.eai.component.common.CommonXPathFunctions" xmlns:ns12="http://xmlns.kpn.com/eai/common/errors" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType">
    <xsd:import namespace="http://java.sun.com/products/oss/xml/ServiceActivation" schemaLocation="/XSDSchemas/xAuthority/AllTypes.xsd"/>
    <pd:name>xAuthorityAdapter/Processes/Inbound/SubscribeResponse.process</pd:name>
    <pd:startName>JMS Queue Receiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="JMS Queue Receiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>98</pd:x>
        <pd:y>406</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>ResponseMessageQueue11<destination>%%xAuthorityAdapter/XAuthorityQueuesTopicNames/XAuthorityResponseQueue%%</destination>
                <acknowledgeMode>2</acknowledgeMode>
                <maxSessions>%%Common/JMSPublic/JmsMaxSessions%%</maxSessions>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/xAuthorityAdapter/Shared Resources/JMS Connection.sharedjmscon</ConnectionReference>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1032</pd:endX>
    <pd:endY>416</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <processSchema>
            <xsd:element name="Msg">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="Type" type="xsd:string" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </processSchema>
    </pd:processVariables>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>237</pd:x>
        <pd:y>407</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term>
                <xsd:any processContents="skip"/>
            </term>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>348</pd:x>
        <pd:y>405</pd:y>
        <config>
            <variableName>processSchema</variableName>
        </config>
        <pd:inputBindings>
            <Msg>
                <Type>
                    <xsl:value-of select="local-name($Parse-XML/*)"/>
                </Type>
            </Msg>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>1146</pd:x>
        <pd:y>418</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
            <fault>localname=ValidationException namespace=http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions</fault>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="createOrderByValueResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>515</pd:x>
        <pd:y>132</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="ns:createOrderByValueResponse"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Notify createOrderByValue">
        <pd:type>com.tibco.plugin.waitnotify.NotifyActivity</pd:type>
        <pd:resourceType>ae.activities.notifyActivity</pd:resourceType>
        <pd:x>643</pd:x>
        <pd:y>196</pd:y>
        <config>
            <sharedConfig>/xAuthorityAdapter/Shared Resources/Inbound/Responses.sharednotify</sharedConfig>
        </config>
        <pd:inputBindings>
            <input>
                <xsl:if test="$JMS-Queue-Receiver/pfx:ActivityOutput/JMSHeaders/pfx:JMSCorrelationID">
                    <key>
                        <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/JMSHeaders/pfx:JMSCorrelationID"/>
                    </key>
                </xsl:if>
                <Group>
                    <xsl:choose>
                        <xsl:when test="$processSchema/Msg/Type=&quot;createOrderByValueResponse&quot;">
                            <xsl:for-each select="$createOrderByValueResponse/ns:createOrderByValueResponse">
                                <ns:createOrderByValueResponse>
                                    <xsl:for-each select="ns:orderKey">
                                        <ns:orderKey>
                                            <xsl:for-each select="pfx2:applicationContext">
                                                <pfx2:applicationContext>
                                                    <pfx2:factoryClass>
                                                        <xsl:value-of select="pfx2:factoryClass"/>
                                                    </pfx2:factoryClass>
                                                    <pfx2:url>
                                                        <xsl:value-of select="pfx2:url"/>
                                                    </pfx2:url>
                                                    <xsl:for-each select="pfx2:systemProperties">
                                                        <pfx2:systemProperties>
                                                            <xsl:for-each select="pfx2:property">
                                                                <pfx2:property>
                                                                    <pfx2:name>
                                                                        <xsl:value-of select="pfx2:name"/>
                                                                    </pfx2:name>
                                                                    <pfx2:value>
                                                                        <xsl:value-of select="pfx2:value"/>
                                                                    </pfx2:value>
                                                                </pfx2:property>
                                                            </xsl:for-each>
                                                        </pfx2:systemProperties>
                                                    </xsl:for-each>
                                                </pfx2:applicationContext>
                                            </xsl:for-each>
                                            <pfx2:applicationDN>
                                                <xsl:value-of select="pfx2:applicationDN"/>
                                            </pfx2:applicationDN>
                                            <pfx2:type>
                                                <xsl:value-of select="pfx2:type"/>
                                            </pfx2:type>
                                            <ns:primaryKey>
                                                <xsl:value-of select="ns:primaryKey"/>
                                            </ns:primaryKey>
                                        </ns:orderKey>
                                    </xsl:for-each>
                                </ns:createOrderByValueResponse>
                            </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="$processSchema/Msg/Type=&quot;startOrderByKeyResponse&quot;">
                            <xsl:for-each select="$startOrderByKeyResponse/ns:startOrderByKeyResponse">
                                <ns:startOrderByKeyResponse/>
                            </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="$processSchema/Msg/Type=&quot;getOrdeByKeyrResponse&quot;">
                            <xsl:for-each select="$getOrderByKeyResponse/ns:getOrdeByKeyrResponse">
                                <ns:getOrdeByKeyrResponse>
                                    <xsl:for-each select="ns:orderValue">
                                        <ns:orderValue xsi:type="ns:CreateOrderValue">
                                            <xsl:if test="exists(pfx2:lastUpdateVersionNumber)">
                                                <pfx2:lastUpdateVersionNumber>
                                                    <xsl:value-of select="pfx2:lastUpdateVersionNumber"/>
                                                </pfx2:lastUpdateVersionNumber>
                                            </xsl:if>
                                            <ns:actualCompletionDate>
                                                <xsl:choose>
                                                    <xsl:when test="exists(ns:actualCompletionDate)">
                                                        <xsl:value-of select="ns:actualCompletionDate"/>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </ns:actualCompletionDate>
                                            <ns:apiClientId>
                                                <xsl:copy-of select="ns:apiClientId/@xsi:nil"/>
                                                <xsl:value-of select="ns:apiClientId"/>
                                            </ns:apiClientId>
                                            <ns:description>
                                                <xsl:copy-of select="ns:description/@xsi:nil"/>
                                                <xsl:value-of select="ns:description"/>
                                            </ns:description>
                                            <xsl:for-each select="ns:failedServices">
                                                <ns:failedServices>
                                                    <xsl:for-each select="ns:item">
                                                        <ns:item>
                                                            <pfx2:success>
                                                                <xsl:value-of select="pfx2:success"/>
                                                            </pfx2:success>
                                                            <xsl:copy-of select="pfx2:exception"/>
                                                            <xsl:for-each select="ns:serviceKey">
                                                                <ns:serviceKey>
                                                                    <xsl:for-each select="pfx2:applicationContext">
                                                                        <pfx2:applicationContext>
                                                                            <pfx2:factoryClass>
                                                                                <xsl:value-of select="pfx2:factoryClass"/>
                                                                            </pfx2:factoryClass>
                                                                            <pfx2:url>
                                                                                <xsl:value-of select="pfx2:url"/>
                                                                            </pfx2:url>
                                                                            <xsl:for-each select="pfx2:systemProperties">
                                                                                <pfx2:systemProperties>
                                                                                    <xsl:for-each select="pfx2:property">
                                                                                        <pfx2:property>
                                                                                            <pfx2:name>
                                                                                                <xsl:value-of select="pfx2:name"/>
                                                                                            </pfx2:name>
                                                                                            <pfx2:value>
                                                                                                <xsl:value-of select="pfx2:value"/>
                                                                                            </pfx2:value>
                                                                                        </pfx2:property>
                                                                                    </xsl:for-each>
                                                                                </pfx2:systemProperties>
                                                                            </xsl:for-each>
                                                                        </pfx2:applicationContext>
                                                                    </xsl:for-each>
                                                                    <pfx2:applicationDN>
                                                                        <xsl:value-of select="pfx2:applicationDN"/>
                                                                    </pfx2:applicationDN>
                                                                    <pfx2:type>
                                                                        <xsl:value-of select="pfx2:type"/>
                                                                    </pfx2:type>
                                                                    <ns:primaryKey>
                                                                        <xsl:value-of select="ns:primaryKey"/>
                                                                    </ns:primaryKey>
                                                                </ns:serviceKey>
                                                            </xsl:for-each>
                                                        </ns:item>
                                                    </xsl:for-each>
                                                </ns:failedServices>
                                            </xsl:for-each>
                                            <ns:orderDate>
                                                <xsl:choose>
                                                    <xsl:when test="exists(ns:orderDate)">
                                                        <xsl:value-of select="ns:orderDate"/>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </ns:orderDate>
                                            <xsl:for-each select="ns:orderKey">
                                                <ns:orderKey>
                                                    <xsl:for-each select="pfx2:applicationContext">
                                                        <pfx2:applicationContext>
                                                            <pfx2:factoryClass>
                                                                <xsl:value-of select="pfx2:factoryClass"/>
                                                            </pfx2:factoryClass>
                                                            <pfx2:url>
                                                                <xsl:value-of select="pfx2:url"/>
                                                            </pfx2:url>
                                                            <xsl:for-each select="pfx2:systemProperties">
                                                                <pfx2:systemProperties>
                                                                    <xsl:for-each select="pfx2:property">
                                                                        <pfx2:property>
                                                                            <pfx2:name>
                                                                                <xsl:value-of select="pfx2:name"/>
                                                                            </pfx2:name>
                                                                            <pfx2:value>
                                                                                <xsl:value-of select="pfx2:value"/>
                                                                            </pfx2:value>
                                                                        </pfx2:property>
                                                                    </xsl:for-each>
                                                                </pfx2:systemProperties>
                                                            </xsl:for-each>
                                                        </pfx2:applicationContext>
                                                    </xsl:for-each>
                                                    <pfx2:applicationDN>
                                                        <xsl:value-of select="pfx2:applicationDN"/>
                                                    </pfx2:applicationDN>
                                                    <pfx2:type>
                                                        <xsl:value-of select="pfx2:type"/>
                                                    </pfx2:type>
                                                    <ns:primaryKey>
                                                        <xsl:value-of select="ns:primaryKey"/>
                                                    </ns:primaryKey>
                                                </ns:orderKey>
                                            </xsl:for-each>
                                            <xsl:if test="exists(ns:priority)">
                                                <ns:priority>
                                                    <xsl:copy-of select="ns:priority/@xsi:nil"/>
                                                    <xsl:value-of select="ns:priority"/>
                                                </ns:priority>
                                            </xsl:if>
                                            <ns:purchaseOrder>
                                                <xsl:copy-of select="ns:purchaseOrder/@xsi:nil"/>
                                                <xsl:value-of select="ns:purchaseOrder"/>
                                            </ns:purchaseOrder>
                                            <ns:requestedCompletionDate>
                                                <xsl:choose>
                                                    <xsl:when test="exists(ns:requestedCompletionDate)">
                                                        <xsl:value-of select="ns:requestedCompletionDate"/>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </ns:requestedCompletionDate>
                                            <xsl:for-each select="ns:services">
                                                <ns:services>
                                                    <xsl:copy-of select="ns:item"/>
                                                </ns:services>
                                            </xsl:for-each>
                                            <ns:orderState>
                                                <xsl:choose>
                                                    <xsl:when test="exists(ns:orderState)">
                                                        <xsl:value-of select="ns:orderState"/>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </ns:orderState>
                                        </ns:orderValue>
                                    </xsl:for-each>
                                </ns:getOrdeByKeyrResponse>
                            </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="$processSchema/Msg/Type=&quot;queryServicesResponse&quot;">
                            <xsl:copy-of select="$queryServicesResponse/ns:queryServicesResponse"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <unknownResponse>
                                <xsl:value-of select="$processSchema/Msg/Type"/>
                            </unknownResponse>
                        </xsl:otherwise>
                    </xsl:choose>
                </Group>
            </input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="startOrderByKeyResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>508</pd:x>
        <pd:y>203</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="ns:startOrderByKeyResponse"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="getOrderByKeyResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>524</pd:x>
        <pd:y>277</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="ns:getOrdeByKeyrResponse"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>966</pd:x>
        <pd:y>567</pd:y>
        <config>
            <faultName/>
        </config>
        <pd:inputBindings>
            <pfx3:ActivityInput>
                <message>
                    <xsl:value-of select="tib:render-xml($_error/ns1:ErrorReport, false(), true())"/>
                </message>
            </pfx3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="getOrderByKeyException">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>537</pd:x>
        <pd:y>467</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="ns:getOrderByKeyException"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Notify Get Order">
        <pd:type>com.tibco.plugin.waitnotify.NotifyActivity</pd:type>
        <pd:resourceType>ae.activities.notifyActivity</pd:resourceType>
        <pd:x>670</pd:x>
        <pd:y>468</pd:y>
        <config>
            <sharedConfig>/xAuthorityAdapter/Shared Resources/Inbound/Responses.sharednotify</sharedConfig>
        </config>
        <pd:inputBindings>
            <input>
                <key>
                    <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/JMSHeaders/pfx:JMSCorrelationID"/>
                </key>
                <Group>
                    <ns:getOrderByKeyException>
                        <xsl:choose>
                            <xsl:when test="exists($getOrderByKeyException/ns:getOrderByKeyException/ns:illegalArgumentException)">
                                <xsl:for-each select="$getOrderByKeyException/ns:getOrderByKeyException/ns:illegalArgumentException">
                                    <ns:illegalArgumentException>
                                        <pfx2:message>
                                            <xsl:value-of select="pfx2:message"/>
                                        </pfx2:message>
                                    </ns:illegalArgumentException>
                                </xsl:for-each>
                            </xsl:when>
                            <xsl:when test="exists($getOrderByKeyException/ns:getOrderByKeyException/ns:objectNotFoundException)">
                                <xsl:for-each select="$getOrderByKeyException/ns:getOrderByKeyException/ns:objectNotFoundException">
                                    <ns:objectNotFoundException>
                                        <pfx2:message>
                                            <xsl:value-of select="pfx2:message"/>
                                        </pfx2:message>
                                    </ns:objectNotFoundException>
                                </xsl:for-each>
                            </xsl:when>
                            <xsl:when test="exists($getOrderByKeyException/ns:getOrderByKeyException/ns:remoteException)">
                                <xsl:for-each select="$getOrderByKeyException/ns:getOrderByKeyException/ns:remoteException">
                                    <ns:remoteException>
                                        <pfx2:message>
                                            <xsl:value-of select="pfx2:message"/>
                                        </pfx2:message>
                                    </ns:remoteException>
                                </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:for-each select="$getOrderByKeyException/ns:getOrderByKeyException/ns:illegalArgumentException">
                                    <ns:illegalArgumentException>
                                        <pfx2:message>
                                            <xsl:value-of select="pfx2:message"/>
                                        </pfx2:message>
                                    </ns:illegalArgumentException>
                                </xsl:for-each>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ns:getOrderByKeyException>
                </Group>
            </input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="queryServicesResponse">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>529</pd:x>
        <pd:y>345</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="ns:queryServicesResponse"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Confirm">
        <pd:type>com.tibco.pe.core.ConfirmActivity</pd:type>
        <pd:resourceType>activity.confirm</pd:resourceType>
        <pd:x>938</pd:x>
        <pd:y>412</pd:y>
        <config>
            <ConfirmEvent>JMS Queue Receiver</ConfirmEvent>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="queryServicesException">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>538</pd:x>
        <pd:y>542</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="ns:queryServicesException"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="startOrderByKeyException">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>544</pd:x>
        <pd:y>625</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="ns:startOrderByKeyException"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="createOrderByValueException">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>542</pd:x>
        <pd:y>705</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="ns:createOrderByValueException"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Notify Start Order">
        <pd:type>com.tibco.plugin.waitnotify.NotifyActivity</pd:type>
        <pd:resourceType>ae.activities.notifyActivity</pd:resourceType>
        <pd:x>675</pd:x>
        <pd:y>624</pd:y>
        <config>
            <sharedConfig>/xAuthorityAdapter/Shared Resources/Inbound/Responses.sharednotify</sharedConfig>
        </config>
        <pd:inputBindings>
            <input>
                <key>
                    <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/JMSHeaders/pfx:JMSCorrelationID"/>
                </key>
                <Group>
                    <ns:startOrderByKeyException>
                        <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:when test="exists($startOrderByKeyException/ns:startOrderByKeyException/ns:illegalStateException)">
                                <xsl:for-each select="$startOrderByKeyException/ns:startOrderByKeyException/ns:illegalStateException">
                                    <ns:illegalStateException>
                                        <pfx2:message>
                                            <xsl:value-of select="pfx2:message"/>
                                        </pfx2:message>
                                    </ns:illegalStateException>
                                </xsl:for-each>
                            </xsl:when>
                            <xsl:when test="exists($startOrderByKeyException/ns:startOrderByKeyException/ns:objectNotFoundException)">
                                <xsl:for-each select="$startOrderByKeyException/ns:startOrderByKeyException/ns:objectNotFoundException">
                                    <ns:objectNotFoundException>
                                        <pfx2:message>
                                            <xsl:value-of select="pfx2:message"/>
                                        </pfx2:message>
                                    </ns:objectNotFoundException>
                                </xsl:for-each>
                            </xsl:when>
                            <xsl:when test="exists($startOrderByKeyException/ns:startOrderByKeyException/ns:illegalArgumentException)">
                                <xsl:for-each select="$startOrderByKeyException/ns:startOrderByKeyException/ns:illegalArgumentException">
                                    <ns:illegalArgumentException>
                                        <pfx2:message>
                                            <xsl:value-of select="pfx2:message"/>
                                        </pfx2:message>
                                    </ns:illegalArgumentException>
                                </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:for-each select="$startOrderByKeyException/ns:startOrderByKeyException/ns:remoteException">
                                    <ns:remoteException>
                                        <pfx2:message>
                                            <xsl:value-of select="pfx2:message"/>
                                        </pfx2:message>
                                    </ns:remoteException>
                                </xsl:for-each>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ns:startOrderByKeyException>
                </Group>
            </input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Notify Create Order">
        <pd:type>com.tibco.plugin.waitnotify.NotifyActivity</pd:type>
        <pd:resourceType>ae.activities.notifyActivity</pd:resourceType>
        <pd:x>675</pd:x>
        <pd:y>719</pd:y>
        <config>
            <sharedConfig>/xAuthorityAdapter/Shared Resources/Inbound/Responses.sharednotify</sharedConfig>
        </config>
        <pd:inputBindings>
            <input>
                <key>
                    <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/JMSHeaders/pfx:JMSCorrelationID"/>
                </key>
                <Group>
                    <ns:createOrderByValueException>
                        <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:when test="exists($createOrderByValueException/ns:createOrderByValueException/ns:createException)">
                                <xsl:for-each select="$createOrderByValueException/ns:createOrderByValueException/ns:createException">
                                    <ns:createException>
                                        <pfx2:message>
                                            <xsl:value-of select="pfx2:message"/>
                                        </pfx2:message>
                                    </ns:createException>
                                </xsl:for-each>
                            </xsl:when>
                            <xsl:when test="exists($createOrderByValueException/ns:createOrderByValueException/ns:illegalArgumentException)">
                                <xsl:for-each select="$createOrderByValueException/ns:createOrderByValueException/ns:illegalArgumentException">
                                    <ns:illegalArgumentException>
                                        <pfx2:message>
                                            <xsl:value-of select="pfx2:message"/>
                                        </pfx2:message>
                                    </ns:illegalArgumentException>
                                </xsl:for-each>
                            </xsl:when>
                            <xsl:when test="exists($createOrderByValueException/ns:createOrderByValueException/ns:remoteException)">
                                <xsl:for-each select="$createOrderByValueException/ns:createOrderByValueException/ns:remoteException">
                                    <ns:remoteException>
                                        <pfx2:message>
                                            <xsl:value-of select="pfx2:message"/>
                                        </pfx2:message>
                                    </ns:remoteException>
                                </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:for-each select="$createOrderByValueException/ns:createOrderByValueException/ns:illegalAttributeValueException">
                                    <ns:illegalAttributeValueException>
                                        <pfx2:message>
                                            <xsl:value-of select="pfx2:message"/>
                                        </pfx2:message>
                                        <pfx2:illegalAttributeName>
                                            <xsl:value-of select="pfx2:illegalAttributeName"/>
                                        </pfx2:illegalAttributeName>
                                    </ns:illegalAttributeValueException>
                                </xsl:for-each>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ns:createOrderByValueException>
                </Group>
            </input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Notify-Query Services">
        <pd:type>com.tibco.plugin.waitnotify.NotifyActivity</pd:type>
        <pd:resourceType>ae.activities.notifyActivity</pd:resourceType>
        <pd:x>670</pd:x>
        <pd:y>550</pd:y>
        <config>
            <sharedConfig>/xAuthorityAdapter/Shared Resources/Inbound/Responses.sharednotify</sharedConfig>
        </config>
        <pd:inputBindings>
            <input>
                <key>
                    <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/JMSHeaders/pfx:JMSCorrelationID"/>
                </key>
                <Group>
                    <ns:queryServicesException>
                        <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:when test="exists($queryServicesException/ns:queryServicesException/ns:illegalArgumentException)">
                                <xsl:for-each select="$queryServicesException/ns:queryServicesException/ns:illegalArgumentException">
                                    <ns:illegalArgumentException>
                                        <pfx2:message>
                                            <xsl:value-of select="pfx2:message"/>
                                        </pfx2:message>
                                    </ns:illegalArgumentException>
                                </xsl:for-each>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:for-each select="$queryServicesException/ns:queryServicesException/ns:remoteException">
                                    <ns:illegalArgumentException>
                                        <pfx2:message>
                                            <xsl:value-of select="pfx2:message"/>
                                        </pfx2:message>
                                    </ns:illegalArgumentException>
                                </xsl:for-each>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ns:queryServicesException>
                </Group>
            </input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogJMSQueue">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>166</pd:x>
        <pd:y>231</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_Trace.process</processName>
        </config>
        <pd:inputBindings>
            <TraceIn>
                <MsgCode>
                    <xsl:value-of select="&quot;XAuth-03018&quot;"/>
                </MsgCode>
                <MsgId>
                    <xsl:value-of select="eai:getMessageId($JMS-Queue-Receiver/pfx:ActivityOutput/Body)"/>
                </MsgId>
                <Parameter>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/xAuthorityAdapter/XAuthorityQueuesTopicNames/XAuthorityResponseQueue"/>
                </Parameter>
                <Parameter>
                    <xsl:value-of select="concat(tib:render-xml($JMS-Queue-Receiver/pfx:ActivityOutput/JMSHeaders, true(), true()),'&#xA;', tib:render-xml($JMS-Queue-Receiver/pfx:ActivityOutput/JMSProperties, true(), true()),'&#xA;')"/>
                </Parameter>
                <Parameter>
                    <xsl:value-of select="$JMS-Queue-Receiver/pfx:ActivityOutput/Body"/>
                </Parameter>
            </TraceIn>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log error">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1143</pd:x>
        <pd:y>260</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_ErrorTrace.process</processName>
        </config>
        <pd:inputBindings>
            <ErrorTraceIn>
                <ns12:Errors>
                    <ns12:Error>
                        <ns12:MsgCode>
                            <xsl:value-of select="&quot;1&quot;"/>
                        </ns12:MsgCode>
                        <ns12:ActivityError>
                            <xsl:value-of select="$Catch/exceptiondata/*"/>
                        </ns12:ActivityError>
                    </ns12:Error>
                </ns12:Errors>
            </ErrorTraceIn>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>823</pd:x>
        <pd:y>190</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Assign</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>Confirm</pd:to>
        <pd:xpathDescription>OTHER</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:xpathDescription>Otherwise</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>createOrderByValueResponse</pd:to>
        <pd:xpathDescription>CREATEORDERBYVALUE</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$processSchema/Msg/Type="createOrderByValueResponse"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>createOrderByValueResponse</pd:from>
        <pd:to>Notify createOrderByValue</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Notify createOrderByValue</pd:from>
        <pd:to>Confirm</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>startOrderByKeyResponse</pd:to>
        <pd:xpathDescription>STARTORDERBYKEY</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$processSchema/Msg/Type="startOrderByKeyResponse"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>startOrderByKeyResponse</pd:from>
        <pd:to>Notify createOrderByValue</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>getOrderByKeyResponse</pd:to>
        <pd:xpathDescription>GETORDERBYKEY</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$processSchema/Msg/Type="getOrdeByKeyrResponse"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>getOrderByKeyResponse</pd:from>
        <pd:to>Notify createOrderByValue</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Notify createOrderByValue</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:xpathDescription>ERROR</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>getOrderByKeyException</pd:to>
        <pd:xpathDescription>GETORDERBYKEYEXCEPTION</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$processSchema/Msg/Type="getOrderByKeyException"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>getOrderByKeyException</pd:from>
        <pd:to>Notify Get Order</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Notify Get Order</pd:from>
        <pd:to>Confirm</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Notify Get Order</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>queryServicesResponse</pd:to>
        <pd:xpathDescription>QUERYSERVICES</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$processSchema/Msg/Type="queryServicesResponse"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>queryServicesResponse</pd:from>
        <pd:to>Notify createOrderByValue</pd:to>
        <pd:xpathDescription>Otherwise</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Confirm</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>queryServicesResponse</pd:from>
        <pd:to>Null</pd:to>
        <pd:xpathDescription>EndOfReply = TRUE &amp; Sequence=0</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>contains($queryServicesResponse/ns:queryServicesResponse/pfx2:endOfReply, true()) and contains($queryServicesResponse/ns:queryServicesResponse/pfx2:sequence, 0)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>queryServicesException</pd:to>
        <pd:xpathDescription>QUERYSERVICESEXCEPTION</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$processSchema/Msg/Type="queryServicesException"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>startOrderByKeyException</pd:to>
        <pd:xpathDescription>STARTORDERBYKEYEXCEPTION</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$processSchema/Msg/Type="startOrderByKeyException"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>createOrderByValueException</pd:to>
        <pd:xpathDescription>CREATEORDERBYVALUEEXCEPTION</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$processSchema/Msg/Type="createOrderByValueException"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>queryServicesException</pd:from>
        <pd:to>Notify-Query Services</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>startOrderByKeyException</pd:from>
        <pd:to>Notify Start Order</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>createOrderByValueException</pd:from>
        <pd:to>Notify Create Order</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Notify Start Order</pd:from>
        <pd:to>Confirm</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Notify Create Order</pd:from>
        <pd:to>Confirm</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Notify-Query Services</pd:from>
        <pd:to>Confirm</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Notify-Query Services</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Notify Start Order</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Notify Create Order</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Receiver</pd:from>
        <pd:to>LogJMSQueue</pd:to>
        <pd:xpathDescription>Trace</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>eai:isTraceOn("XAuth-03018")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>LogJMSQueue</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Log error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log error</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Notify createOrderByValue</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>queryServicesResponse</pd:from>
        <pd:to>Confirm</pd:to>
        <pd:xpathDescription>EndOfReply = TRUE</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>contains($queryServicesResponse/ns:queryServicesResponse/pfx2:endOfReply, true()) and $queryServicesResponse/ns:queryServicesResponse/pfx2:sequence!=0</pd:xpath>
    </pd:transition>
</pd:ProcessDefinition>