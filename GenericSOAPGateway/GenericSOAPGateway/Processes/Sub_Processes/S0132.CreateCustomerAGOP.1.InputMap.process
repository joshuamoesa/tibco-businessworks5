<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx="http://xmlns.kpn.com/fixed/ckradapter/request/FindCustomer.xsd" xmlns:ns="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/GenericSOAPGateway/Request/0001_FindCustomer_2.2_Request_EAI_BUS_SIDE.xsd" xmlns:ns2="http://xmlns.kpn.com/common/cdm/Base.xsd" xmlns:pfx2="http://xmlns.kpn.com/fixed/ckradapter/common/CustomerReference.xsd" xmlns:pfx3="http://xmlns.kpn.com/fixed/ckradapter/common/ExternalCustomerReference.xsd" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns3="http://xmlns.kpn.com/fixed/GenericSOAPGateway/XSDSchemas/GenericSOAPGateway/Request/0001_FindCustomer_2.2_Request_EAI_BUS_SIDE.xsd" xmlns:ns4="http://xmlns.kpn.com/fixed/ckradapter/common/PropertyAddress.xsd" xmlns:pfx4="http://xmlns.example.com/unique/default/namespace/1115623618609" xmlns:ns5="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/GenericSOAPGateway/Request/0062_RequestMaintenanceReport_1.0_Request_EAI_BUS_SIDE.xsd" xmlns:ns6="http://xmlns.example.com/unique/default/namespace/1115622015640" xmlns:pfx5="http://xmlns.example.com/unique/default/namespace/1111409998750" xmlns:ns7="http://xmlns.kpn.com/EAI/fixed/0062_RequestMaintenanceReport/1.0/Request" xmlns:pfx6="http://xmlns.kpn.com/fixed/PMAdapter/Request/GetCustomerPaymentStatus.xsd" xmlns:ns8="http://xmlns.kpn.com/EAI/fixed/0073_GetCustomerPaymentStatus/1.0/Request" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx7="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_InputMap_input.xsd" xmlns:pfx8="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_InputMap_output.xsd" xmlns:pfx9="http://xmlns.kpn.com/fixed/PMAdapter/request/GetCustomerPaymentDetails.xsd" xmlns:ns9="http://xmlns.kpn.com/EAI/fixed/0074_GetCustomerPaymentDetails/1.0/Request" xmlns:pfx10="http://xmlns.kpn.com/fixed/PMAdapter/request/GetCustomerPaymentBehaviour.xsd" xmlns:pfx11="http://xmlns.kpn.com/EAI/fixed/0407_HoldCollections/1.0/Request" xmlns:pfx12="http://xmlns.kpn.com/fixed/PMAdapter/request/HoldCollections.xsd" xmlns:pfx13="http://xmlns.kpn.com/fixed/CustomerServices/Request/CreateCustomerAGOP.xsd" xmlns:ns10="http://xmlns.kpn.com/EAI/fixed/0132_ CreateCustomerAGOP/1.0/Request" xmlns:ns51="http://xmlns.kpn.com/EAI/fixed/0001_FindCustomer/2.2/Request">
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/request/FindCustomer.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Request/FindCustomer.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/GenericSOAPGateway/Request/0001_FindCustomer_2.2_Request_EAI_BUS_SIDE.xsd" schemaLocation="/XSDSchemas/GenericSOAPGateway/Request/0001_FindCustomer_2.2_Request_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1115623618609" schemaLocation="/XSDSchemas/KanvasContractAdapter/Request/RequestMaintenanceReport.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0062_RequestMaintenanceReport/1.0/Request" schemaLocation="/XSDSchemas/GenericSOAPGateway/Request/0062_RequestMaintenanceReport_1.0_Request_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0073_GetCustomerPaymentStatus/1.0/Request" schemaLocation="/XSDSchemas/GenericSOAPGateway/Request/0073_GetCustomerPaymentStatus_1.0_Request_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/PMAdapter/Request/GetCustomerPaymentStatus.xsd" schemaLocation="/XSDSchemas/PMAdapter/Request/GetCustomerPaymentStatus.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_InputMap_output.xsd" schemaLocation="/XSDSchemas/GenericSOAPGateway/Common/EAI_InputMap_output.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/PMAdapter/request/GetCustomerPaymentDetails.xsd" schemaLocation="/XSDSchemas/PMAdapter/Request/GetCustomerPaymentDetails.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0074_GetCustomerPaymentDetails/1.0/Request" schemaLocation="/XSDSchemas/GenericSOAPGateway/Request/0074_GetCustomerPaymentDetails_1.0_Request_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/PMAdapter/request/GetCustomerPaymentBehaviour.xsd" schemaLocation="/XSDSchemas/PMAdapter/Request/GetCustomerPaymentBehaviour.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0407_HoldCollections/1.0/Request" schemaLocation="/XSDSchemas/GenericSOAPGateway/Request/0407_HoldCollections_1.0_Request_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/PMAdapter/request/HoldCollections.xsd" schemaLocation="/XSDSchemas/PMAdapter/Request/HoldCollections.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_InputMap_input.xsd" schemaLocation="/XSDSchemas/GenericSOAPGateway/Common/EAI_InputMap_input.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/CustomerServices/Request/CreateCustomerAGOP.xsd" schemaLocation="/XSDSchemas/CustomerServices/Request/CreateCustomerAGOP.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0132_ CreateCustomerAGOP/1.0/Request" schemaLocation="/XSDSchemas/CustomerServices/Imported/0132_ CreateCustomerAGOP_1.0_Request_EAI_BUS_SIDE.xsd"/>
    <pd:name>GenericSOAPGateway/Processes/Sub_Processes/S0132.CreateCustomerAGOP.1.InputMap.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx7:Input"/>
    <pd:startX>155</pd:startX>
    <pd:startY>175</pd:startY>
    <pd:returnBindings>
        <pfx8:Output>
            <pfx8:Destination>
                <xsl:value-of select="$Map-Data/pfx13:CreateCustomerAGOP/ns2:CMH/ns2:TO/@ns2:DESTINATION"/>
            </pfx8:Destination>
            <pfx8:BodyContainer>
                <xsl:copy-of select="$Map-Data/pfx13:CreateCustomerAGOP"/>
            </pfx8:BodyContainer>
        </pfx8:Output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx8:Output"/>
    <pd:endX>519</pd:endX>
    <pd:endY>175</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>326</pd:x>
        <pd:y>176</pd:y>
        <config>
            <element ref="pfx13:CreateCustomerAGOP"/>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/pfx7:Input/pfx7:BodyContainer/*" element="ns10:BODY"/>
        </pd:coercions>
        <pd:inputBindings>
            <pfx13:CreateCustomerAGOP>
                <ns2:CMH>
                    <ns2:ID>
                        <xsl:value-of select="&quot;288&quot;"/>
                    </ns2:ID>
                    <ns2:NAME>
                        <xsl:value-of select="&quot;CreateCustomerAGOP&quot;"/>
                    </ns2:NAME>
                    <ns2:FID>
                        <xsl:value-of select="concat($Start/pfx7:Input/pfx7:UserId,&quot;,&quot;,$Start/pfx7:Input/pfx7:ApplicationId,&quot;,&quot;,$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/INITIAL_ROLE)"/>
                    </ns2:FID>
                    <ns2:MID>
                        <xsl:value-of select="&quot;1069.10&quot;"/>
                    </ns2:MID>
                    <ns2:PARADIGM>
                        <xsl:value-of select="&quot;REQUEST&quot;"/>
                    </ns2:PARADIGM>
                    <ns2:OBJECT>
                        <xsl:value-of select="&quot;PARTY&quot;"/>
                    </ns2:OBJECT>
                    <ns2:VERSION>
                        <xsl:value-of select="&quot;1.0&quot;"/>
                    </ns2:VERSION>
                    <ns2:FROM>
                        <xsl:attribute name="ns2:COMPONENT_ID">
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/GenericSOAPGateway/ComponentId"/>
                        </xsl:attribute>
                        <xsl:attribute name="ns2:COMPONENT_VERSION">
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/GenericSOAPGateway/ComponentVersion"/>
                        </xsl:attribute>
                    </ns2:FROM>
                    <ns2:TO>
                        <xsl:attribute name="ns2:DESTINATION">
                            <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/Env ,&quot;.FIXED.Order.CustomerServices.Request.CreateCustomerAGOP.1&quot;)"/>
                        </xsl:attribute>
                    </ns2:TO>
                    <ns2:TRACKING>
                        <ns2:MESSAGE_ID>
                            <xsl:value-of select="$Start/pfx7:Input/pfx7:TrackingId"/>
                        </ns2:MESSAGE_ID>
                        <ns2:ITEM>
                            <xsl:attribute name="ns2:APPINFO">
                                <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/GenericSOAPGateway/ComponentId"/>
                            </xsl:attribute>
                            <xsl:attribute name="ns2:EVENT">
                                <xsl:value-of select="&quot;CreateCustomerAGOP&quot;"/>
                            </xsl:attribute>
                            <xsl:attribute name="ns2:TIMESTAMP">
                                <xsl:value-of select="2008-09-25"/>
                            </xsl:attribute>
                        </ns2:ITEM>
                    </ns2:TRACKING>
                    <ns2:ATTRIBUTE>
                        <xsl:attribute name="ns2:NAME">
                            <xsl:value-of select="&quot;APPLICATION_ID&quot;"/>
                        </xsl:attribute>
                        <xsl:attribute name="ns2:VALUE">
                            <xsl:value-of select="$Start/pfx7:Input/pfx7:ApplicationId"/>
                        </xsl:attribute>
                    </ns2:ATTRIBUTE>
                    <ns2:ATTRIBUTE>
                        <xsl:attribute name="ns2:NAME">
                            <xsl:value-of select="&quot;USER_ID&quot;"/>
                        </xsl:attribute>
                        <xsl:attribute name="ns2:VALUE">
                            <xsl:value-of select="$Start/pfx7:Input/pfx7:UserId"/>
                        </xsl:attribute>
                    </ns2:ATTRIBUTE>
                    <ns2:ATTRIBUTE>
                        <xsl:attribute name="ns2:NAME">
                            <xsl:value-of select="&quot;CKR_TEST_ENVIRONMENT&quot;"/>
                        </xsl:attribute>
                        <xsl:attribute name="ns2:VALUE">
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/CKRAdapter/CKR_TEST_ENVIRONMENT"/>
                        </xsl:attribute>
                    </ns2:ATTRIBUTE>
                </ns2:CMH>
                <pfx13:INITIAL_ROLE>
                    <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/INITIAL_ROLE"/>
                </pfx13:INITIAL_ROLE>
                <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/ADDRESS_CHECK_DATE)">
                    <pfx13:ADDRESS_CHECK_DATE>
                        <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/ADDRESS_CHECK_DATE"/>
                    </pfx13:ADDRESS_CHECK_DATE>
                </xsl:if>
                <pfx13:ADDRESS_CHECK>
                    <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/ADDRESS_CHECK"/>
                </pfx13:ADDRESS_CHECK>
                <pfx13:IS_DOUBLE>
                    <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/IS_DOUBLE"/>
                </pfx13:IS_DOUBLE>
                <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/IS_MOVE)">
                    <pfx13:IS_MOVE>
                        <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/IS_MOVE"/>
                    </pfx13:IS_MOVE>
                </xsl:if>
                <pfx13:KVK_NUMBER_CHECK>
                    <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/KVK_NUMBER_CHECK"/>
                </pfx13:KVK_NUMBER_CHECK>
                <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/IS_UNLISTED)">
                    <pfx13:IS_UNLISTED>
                        <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/IS_UNLISTED"/>
                    </pfx13:IS_UNLISTED>
                </xsl:if>
                <pfx13:NAME_CHECK>
                    <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/NAME_CHECK"/>
                </pfx13:NAME_CHECK>
                <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/DATE_OF_BIRTH_CHECK)">
                    <pfx13:DATE_OF_BIRTH_CHECK>
                        <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/DATE_OF_BIRTH_CHECK"/>
                    </pfx13:DATE_OF_BIRTH_CHECK>
                </xsl:if>
                <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/LEGAL_FORM_CHECK)">
                    <pfx13:LEGAL_FORM_CHECK>
                        <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/LEGAL_FORM_CHECK"/>
                    </pfx13:LEGAL_FORM_CHECK>
                </xsl:if>
                <pfx13:CUSTOMER>
                    <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/CUSTOMER/CENTRAL_CUSTOMER_ID)">
                        <pfx13:CENTRAL_CUSTOMER_ID>
                            <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/CUSTOMER/CENTRAL_CUSTOMER_ID"/>
                        </pfx13:CENTRAL_CUSTOMER_ID>
                    </xsl:if>
                    <pfx13:PARTY>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/CUSTOMER/PARTY/BRANCHE_NAME_DIACRITICS)">
                            <pfx13:BRANCHE_NAME_DIACRITICS>
                                <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/CUSTOMER/PARTY/BRANCHE_NAME_DIACRITICS"/>
                            </pfx13:BRANCHE_NAME_DIACRITICS>
                        </xsl:if>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/CUSTOMER/PARTY/BRANCHE_NAME)">
                            <pfx13:BRANCHE_NAME>
                                <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/CUSTOMER/PARTY/BRANCHE_NAME"/>
                            </pfx13:BRANCHE_NAME>
                        </xsl:if>
                    </pfx13:PARTY>
                </pfx13:CUSTOMER>
                <pfx13:PARTY>
                    <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/LEGAL_FORM_CODE)">
                        <pfx13:LEGAL_FORM_CODE>
                            <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/LEGAL_FORM_CODE"/>
                        </pfx13:LEGAL_FORM_CODE>
                    </xsl:if>
                    <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/DATE_OF_BIRTH)">
                        <pfx13:DATE_OF_BIRTH>
                            <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/DATE_OF_BIRTH"/>
                        </pfx13:DATE_OF_BIRTH>
                    </xsl:if>
                    <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/KVK_NUMBER)">
                        <pfx13:KVK_NUMBER>
                            <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/KVK_NUMBER"/>
                        </pfx13:KVK_NUMBER>
                    </xsl:if>
                    <pfx13:VALID_FROM_DATE>
                        <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/VALID_FROM_DATE"/>
                    </pfx13:VALID_FROM_DATE>
                    <pfx13:PROPERTY_ADDRESS>
                        <pfx13:STREET_NAME>
                            <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/STREET_NAME"/>
                        </pfx13:STREET_NAME>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/HOUSE_NUMBER)">
                            <pfx13:HOUSE_NUMBER>
                                <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/HOUSE_NUMBER"/>
                            </pfx13:HOUSE_NUMBER>
                        </xsl:if>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/HOUSE_NUMBER_EXTENSION)">
                            <pfx13:HOUSE_NUMBER_EXTENSION>
                                <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/HOUSE_NUMBER_EXTENSION"/>
                            </pfx13:HOUSE_NUMBER_EXTENSION>
                        </xsl:if>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/CITY_NAME)">
                            <pfx13:CITY_NAME>
                                <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/CITY_NAME"/>
                            </pfx13:CITY_NAME>
                        </xsl:if>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/CITY_CODE)">
                            <pfx13:CITY_CODE>
                                <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/CITY_CODE"/>
                            </pfx13:CITY_CODE>
                        </xsl:if>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/COUNTRY)">
                            <pfx13:COUNTRY>
                                <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/COUNTRY"/>
                            </pfx13:COUNTRY>
                        </xsl:if>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/DUTCH_POSTCODE_LETTERS)">
                            <pfx13:DUTCH_POSTCODE_LETTERS>
                                <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/DUTCH_POSTCODE_LETTERS"/>
                            </pfx13:DUTCH_POSTCODE_LETTERS>
                        </xsl:if>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/DUTCH_POSTCODE_NUMBERS)">
                            <pfx13:DUTCH_POSTCODE_NUMBERS>
                                <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/DUTCH_POSTCODE_NUMBERS"/>
                            </pfx13:DUTCH_POSTCODE_NUMBERS>
                        </xsl:if>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/ZIPCODE_BEFORE)">
                            <pfx13:ZIPCODE_BEFORE>
                                <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/ZIPCODE_BEFORE"/>
                            </pfx13:ZIPCODE_BEFORE>
                        </xsl:if>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/ZIPCODE_AFTER)">
                            <pfx13:ZIPCODE_AFTER>
                                <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY/PROPERTY_ADDRESS/ZIPCODE_AFTER"/>
                            </pfx13:ZIPCODE_AFTER>
                        </xsl:if>
                    </pfx13:PROPERTY_ADDRESS>
                </pfx13:PARTY>
                <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY_NAME)">
                    <pfx13:PARTY_NAME>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY_NAME/PARTY_NAME_DIACRITICS)">
                            <pfx13:PARTY_NAME_DIACRITICS>
                                <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY_NAME/PARTY_NAME_DIACRITICS"/>
                            </pfx13:PARTY_NAME_DIACRITICS>
                        </xsl:if>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY_NAME/PARTY_NAME)">
                            <pfx13:PARTY_NAME>
                                <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/PARTY_NAME/PARTY_NAME"/>
                            </pfx13:PARTY_NAME>
                        </xsl:if>
                    </pfx13:PARTY_NAME>
                </xsl:if>
                <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/CUSTOMER_REFERENCE)">
                    <pfx13:CUSTOMER_REFERENCE>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/CUSTOMER_REFERENCE/ROLE)">
                            <pfx13:ROLE>
                                <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/CUSTOMER_REFERENCE/ROLE"/>
                            </pfx13:ROLE>
                        </xsl:if>
                        <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/CUSTOMER_REFERENCE/EXTERNAL_CUSTOMER_REFERENCE)">
                            <pfx13:EXTERNAL_CUSTOMER_REFERENCE>
                                <xsl:if test="exists($Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/CUSTOMER_REFERENCE/EXTERNAL_CUSTOMER_REFERENCE/REF_NAME)">
                                    <pfx13:REF_NAME>
                                        <xsl:value-of select="$Start/pfx7:Input/pfx7:BodyContainer/ns10:BODY/CUSTOMER_REFERENCE/EXTERNAL_CUSTOMER_REFERENCE/REF_NAME"/>
                                    </pfx13:REF_NAME>
                                </xsl:if>
                            </pfx13:EXTERNAL_CUSTOMER_REFERENCE>
                        </xsl:if>
                    </pfx13:CUSTOMER_REFERENCE>
                </xsl:if>
            </pfx13:CreateCustomerAGOP>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:label>
        <pd:name>Label</pd:name>
        <pd:description>Import the build xsd here in InputEditor and design xsd after clicking the coersion button in Input tab</pd:description>
        <pd:x>302</pd:x>
        <pd:y>86</pd:y>
        <pd:width>155</pd:width>
        <pd:height>76</pd:height>
        <pd:fontColor>-16777216</pd:fontColor>
        <pd:color>-1</pd:color>
        <pd:type>solid</pd:type>
        <pd:thickness>0</pd:thickness>
        <pd:fade>true</pd:fade>
    </pd:label>
</pd:ProcessDefinition>