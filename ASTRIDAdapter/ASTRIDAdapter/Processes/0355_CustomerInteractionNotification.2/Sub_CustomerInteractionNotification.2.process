<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://xmlns.kpn.com/fixed/portingservices/publish/NotifyNumberInportingComplete" xmlns:pfx2="urn:NotifyNumberInportingComplete" xmlns:ns="http://xmlns.kpn.com/common/cdm/Base.xsd" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx3="http://xmlns.kpn.com/common/cdm/ErrorMessage.xsd" xmlns:pfx4="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:pfx5="urn:StartNumberInporting" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx6="http://xmlns.kpn.com/fixed/portingservices/publish/NotifyNumberInPortingComplete" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns3="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns4="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:ns0="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns5="http://xmlns.kpn.com/fixed/common/AnyXMLMessage.xsd" xmlns:pfx7="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Publish/UpdateStatusTroubleReport.xsd" xmlns:pfx8="http://tempuri.org" xmlns:pfx9="urn:GenericMessageRequest" xmlns:ns6="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/TroubleReport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx10="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Publish/UpsertTroubleReport.xsd" xmlns:ns7="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/CustomerOrganization.xsd" xmlns:ns8="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/ManagedObjectInTrouble.xsd" xmlns:ns9="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/SupportedService.xsd" xmlns:ns10="http://xmlns.kpn.com/fixed/common/PropertyAddress.xsd" xmlns:pfx11="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Publish/UpdateTroubleReportProgress.xsd" xmlns:pfx12="http://xmlns.kpn.com/fixed/EDTAdapter/Publish/UpdateManagedObjectReport.xsd" xmlns:pfx13="http://xmlns.kpn.com/fixed/EDTAdapter/Publish/UpdateManagedObjectAttribute.xsd" xmlns:pfx14="http://xmlns.kpn.com/fixed/EDTAdapter/Publish/UpdateStatusCustomerIncidentReport.xsd" xmlns:ns11="http://xmlns.kpn.com/fixed/EDTAdapter/common/CustomerIncidentReport.xsd" xmlns:ns13="http://xmlns.kpn.com/fixed/EDTAdapter/common/CustomerOrganization.xsd" xmlns:pfx15="http://xmlns.kpn.com/fixed/EDTAdapter/Publish/CustomerIncidentStatusUpdateReport.xsd" xmlns:ns14="http://xmlns.tibco.com/encodings/mime" xmlns:pfx16="http://xmlns.kpn.com/eai/common/errors" xmlns:pfx17="http://xmlns.kpn.com/fixed/Order/Publish/CustomerIncidentStatusUpdateReport.xsd" xmlns:ns15="http://xmlns.kpn.com/fixed/Order/Common/CustomerOrganization.xsd" xmlns:ns16="http://xmlns.kpn.com/fixed/Order/Common/CustomerIncidentReport.xsd" xmlns:ns17="http://xmlns.kpn.com/fixed/Order/common/CustomerIncidentReport.xsd" xmlns:ns18="http://xmlns.kpn.com/fixed/Order/common/CustomerOrganization.xsd" xmlns:pfx18="http://xmlns.kpn.com/fixed/Order/Publish/CustomerIncidentReport.xsd" xmlns:pfx19="http://www.tibco.com/schemas/AstridAdapter/XSDSchemas/B2BRFAdapter/Publish/CustomerInteractionNotification.2.xsd" xmlns:ns19="http://xmlns.kpn.com/EAI/fixed/0355_CustomerInteractionNotification/2.0/Publish" xmlns:pfx20="http://www.tibco.com/schemas/Publish/CustomerInteractionNotification.2.xsd" xmlns:pfx21="http://www.tibco.com/schemas/Subscribe/CustomerInteractionNotification.2.xsd" xmlns:pfx22="http://xmlns.kpn.com/fixed/Generic/CustomerInteractionNotification.2.xsd">
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingservices/publish/NotifyNumberInportingComplete" schemaLocation="/XSDSchemas/OFMAdapter/Publish/NotifyNumberInportingComplete.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ErrorMessage.xsd" schemaLocation="/XSDSchemas/Common/ErrorMessage.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingservices/publish/NotifyNumberInPortingComplete" schemaLocation="/XSDSchemas/PortingServices/Publish/NotifyNumberInPortingComplete.xsd"/>
    <xsd:import namespace="urn:NotifyNumberInportingComplete" schemaLocation="/WSDL/NotifyNumberInportingComplete.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" schemaLocation="/XSDSchemas/Common/ResultStatus.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Publish/UpdateStatusTroubleReport.xsd" schemaLocation="/XSDSchemas/ASTRIDAdapter/Publish/UpdateStatusTroubleReport.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Publish/UpsertTroubleReport.xsd" schemaLocation="/XSDSchemas/ASTRIDAdapter/Publish/UpsertTroubleReport.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Publish/UpdateTroubleReportProgress.xsd" schemaLocation="/XSDSchemas/ASTRIDAdapter/Publish/UpdateTroubleReportProgress.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EDTAdapter/Publish/UpdateManagedObjectReport.xsd" schemaLocation="/XSDSchemas/EDTAdapter/Publish/UpdateManagedObjectReport.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EDTAdapter/Publish/UpdateManagedObjectAttribute.xsd" schemaLocation="/XSDSchemas/EDTAdapter/Publish/UpdateManagedObjectAttribute.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EDTAdapter/Publish/UpdateStatusCustomerIncidentReport.xsd" schemaLocation="/XSDSchemas/EDTAdapter/Publish/UpdateStatusCustomerIncidentReport.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EDTAdapter/Publish/CustomerIncidentStatusUpdateReport.xsd" schemaLocation="/XSDSchemas/EDTAdapter/Publish/CustomerIncidentStatusUpdateReport.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/eai/common/errors" schemaLocation="/Common/Shared Resources/Errors.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/Order/Publish/CustomerIncidentStatusUpdateReport.xsd" schemaLocation="/XSDSchemas/Order/Publish/CustomerIncidentStatusUpdateReport.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/Publish/CustomerInteractionNotification.2.xsd" schemaLocation="/XSDSchemas/ASTRIDAdapter/Publish/CustomerInteractionNotification.2.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/Subscribe/CustomerInteractionNotification.2.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/Subscribe/CustomerInteractionNotification.2.xsd" schemaLocation="/XSDSchemas/ASTRIDAdapter/Subscribe/CustomerInteractionNotification.2.xsd"/>
    <xsd:import namespace="urn:GenericMessageRequest" schemaLocation="/WSDL/ASTRIDAdapter/GenericMessageRequest.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/Generic/CustomerInteractionNotification.2.xsd" schemaLocation="/XSDSchemas/Generic/CustomerInteractionNotification.2.xsd"/>
    <wsdl:import namespace="urn:NotifyNumberInportingComplete" location="/WSDL/NotifyNumberInportingComplete.wsdl"/>
    <wsdl:import namespace="urn:GenericMessageRequest" location="/WSDL/ASTRIDAdapter/GenericMessageRequest.wsdl"/>
    <pd:name>ASTRIDAdapter/Processes/0355_CustomerInteractionNotification.2/Sub_CustomerInteractionNotification.2.process</pd:name>
    <pd:description>0355 CustomerInteractionNotification</pd:description>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="ServiceIn">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="Body" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>56</pd:startX>
    <pd:startY>109</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>863</pd:endX>
    <pd:endY>257</pd:endY>
    <pd:errorSchemas>
        <Exception ref="pfx16:Errors"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:activity name="SOAPRequestReply">
        <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
        <pd:x>699</pd:x>
        <pd:y>109</pd:y>
        <config>
            <timeout>%%ASTRIDAdapter/Inbound/SOAP/Timeout%%</timeout>
            <service>pfx9:GenericMessageRequestService</service>
            <servicePort>GenericMessageRequestSoap</servicePort>
            <operation>GenericMessage</operation>
            <soapAction>urn:GenericMessageRequest/GenericMessage</soapAction>
            <endpointURL>%%ASTRIDAdapter/Inbound/SOAP/EndpointUrls/CustomerInteractionNotification%%</endpointURL>
            <requireBasicAuth>false</requireBasicAuth>
            <basicHttpAuthIdentity>/ASTRIDAdapter/Shared Resources/Soap User Identity.id</basicHttpAuthIdentity>
            <ns0:ssl xmlns:ns0="http://www.tibco.com/xmlns/aemeta/services/2002">
                <ns0:strongCipherSuitesOnly>true</ns0:strongCipherSuitesOnly>
                <ns0:cert isRef="true">/ASTRIDAdapter/Shared Resources/Trusted Certificates/.folder</ns0:cert>
            </ns0:ssl>
        </config>
        <pd:inputBindings>
            <inputMessage>
                <headers>
                    <Header.parameters>
                        <xsl:attribute name="mustUnderstand">
                            <xsl:value-of select="&quot;false&quot;"/>
                        </xsl:attribute>
                    </Header.parameters>
                </headers>
                <xsl:for-each select="$Map-SOAP-Input/inputMessage/pfx9:GenericMessage">
                    <pfx9:GenericMessage>
                        <xsl:copy-of select="pfx8:Header"/>
                        <xsl:copy-of select="pfx8:General"/>
                        <xsl:copy-of select="pfx8:Customer_info"/>
                        <xsl:copy-of select="pfx8:Managed_Object_Info"/>
                        <xsl:copy-of select="pfx8:Managed_object_in_trouble_info"/>
                        <xsl:for-each select="pfx8:Attachments">
                            <pfx8:Attachments>
                                <xsl:if test="pfx8:attachment_1_attachmentName">
                                    <pfx8:attachment_1_attachmentName>
                                        <xsl:copy-of select="pfx8:attachment_1_attachmentName/@xsi:nil"/>
                                        <xsl:value-of select="pfx8:attachment_1_attachmentName"/>
                                    </pfx8:attachment_1_attachmentName>
                                </xsl:if>
                                <xsl:if test="pfx8:attachment_1_attachmentData">
                                    <pfx8:attachment_1_attachmentData>
                                        <xsl:copy-of select="pfx8:attachment_1_attachmentData/@xsi:nil"/>
                                        <xsl:value-of select="pfx8:attachment_1_attachmentData"/>
                                    </pfx8:attachment_1_attachmentData>
                                </xsl:if>
                                <xsl:if test="pfx8:attachment_1_attachmentOrigSize">
                                    <pfx8:attachment_1_attachmentOrigSize>
                                        <xsl:copy-of select="pfx8:attachment_1_attachmentOrigSize/@xsi:nil"/>
                                        <xsl:value-of select="pfx8:attachment_1_attachmentOrigSize"/>
                                    </pfx8:attachment_1_attachmentOrigSize>
                                </xsl:if>
                                <xsl:if test="pfx8:attachment_2_attachmentName">
                                    <pfx8:attachment_2_attachmentName>
                                        <xsl:copy-of select="pfx8:attachment_2_attachmentName/@xsi:nil"/>
                                        <xsl:value-of select="pfx8:attachment_2_attachmentName"/>
                                    </pfx8:attachment_2_attachmentName>
                                </xsl:if>
                                <xsl:if test="pfx8:attachment_2_attachmentData">
                                    <pfx8:attachment_2_attachmentData>
                                        <xsl:copy-of select="pfx8:attachment_2_attachmentData/@xsi:nil"/>
                                        <xsl:value-of select="pfx8:attachment_2_attachmentData"/>
                                    </pfx8:attachment_2_attachmentData>
                                </xsl:if>
                                <xsl:if test="pfx8:attachment_2_attachmentOrigSize">
                                    <pfx8:attachment_2_attachmentOrigSize>
                                        <xsl:copy-of select="pfx8:attachment_2_attachmentOrigSize/@xsi:nil"/>
                                        <xsl:value-of select="pfx8:attachment_2_attachmentOrigSize"/>
                                    </pfx8:attachment_2_attachmentOrigSize>
                                </xsl:if>
                                <xsl:if test="pfx8:attachment_3_attachmentName">
                                    <pfx8:attachment_3_attachmentName>
                                        <xsl:copy-of select="pfx8:attachment_3_attachmentName/@xsi:nil"/>
                                        <xsl:value-of select="pfx8:attachment_3_attachmentName"/>
                                    </pfx8:attachment_3_attachmentName>
                                </xsl:if>
                                <xsl:if test="pfx8:attachment_3_attachmentData">
                                    <pfx8:attachment_3_attachmentData>
                                        <xsl:copy-of select="pfx8:attachment_3_attachmentData/@xsi:nil"/>
                                        <xsl:value-of select="pfx8:attachment_3_attachmentData"/>
                                    </pfx8:attachment_3_attachmentData>
                                </xsl:if>
                                <xsl:if test="pfx8:attachment_3_attachmentOrigSize">
                                    <pfx8:attachment_3_attachmentOrigSize>
                                        <xsl:copy-of select="pfx8:attachment_3_attachmentOrigSize/@xsi:nil"/>
                                        <xsl:value-of select="pfx8:attachment_3_attachmentOrigSize"/>
                                    </pfx8:attachment_3_attachmentOrigSize>
                                </xsl:if>
                            </pfx8:Attachments>
                        </xsl:for-each>
                    </pfx9:GenericMessage>
                </xsl:for-each>
            </inputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogSOAPRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>543</pd:x>
        <pd:y>111</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_LogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns5:AnyXMLMessage>
                    <xsl:copy-of select="$Map-SOAP-Input/inputMessage"/>
                </ns5:AnyXMLMessage>
                <msgCode>
                    <xsl:value-of select="&quot;ASTRID-BW-01501&quot;"/>
                </msgCode>
                <message>
                    <xsl:value-of select="&quot;ASTRID inbound SOAP request for service [CustomerInteractionNotification]&quot;"/>
                </message>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogSOAPAcknowlege">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>829</pd:x>
        <pd:y>110</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_LogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns5:AnyXMLMessage>
                    <xsl:copy-of select="$SOAPRequestReply/outputMessage"/>
                </ns5:AnyXMLMessage>
                <msgCode>
                    <xsl:value-of select="&quot;ASTRID-BW-01502&quot;"/>
                </msgCode>
                <message>
                    <xsl:value-of select="&quot;ASTRID SOAP acknowledge message for service [CustomerIncidentStatusUpdateReport]&quot;"/>
                </message>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogWarn">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>989</pd:x>
        <pd:y>110</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_LogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <msgCode>
                    <xsl:value-of select="&quot;ASTRID-BW-02500&quot;"/>
                </msgCode>
                <message>
                    <xsl:value-of select="concat( &quot;Warning ASTRID returned a wrong or empty GUID: [&quot;, $SOAPRequestReply/outputMessage/pfx9:GenericMessageResponse/pfx9:GUID,&quot;]&quot;)"/>
                </message>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Ign log REQ">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>614</pd:x>
        <pd:y>35</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Ignore Log RESP">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>717</pd:x>
        <pd:y>260</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Ignore-Log-WARN">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>998</pd:x>
        <pd:y>258</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Get MOC">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>243</pd:x>
        <pd:y>111</pd:y>
        <config>
            <processName>/ASTRIDAdapter/Processes/0355_CustomerInteractionNotification.2/Sub_Data_Inbound.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ORIGINATOR>
                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns:CMH/ns:ATTRIBUTE[@ns:NAME=&quot;MESSAGE_ORIGINATION_IT_DOMAIN&quot;][1]/@ns:VALUE"/>
                </ORIGINATOR>
                <INTERACTION_TYPE>
                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/INTERACTION_CLASS/INTERACTION_TYPE"/>
                </INTERACTION_TYPE>
                <xsl:if test="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/INTERACTION_CLASS/INTERACTION_SUBTYPE">
                    <INTERACTION_SUBTYPE>
                        <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/INTERACTION_CLASS/INTERACTION_SUBTYPE"/>
                    </INTERACTION_SUBTYPE>
                </xsl:if>
                <xsl:if test="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/INTERACTION_INITIATION">
                    <INTERACTION_INITIATION>
                        <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/INTERACTION_INITIATION"/>
                    </INTERACTION_INITIATION>
                </xsl:if>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Throw-Exception">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>303</pd:x>
        <pd:y>347</pd:y>
        <config>
            <faultName>Exception</faultName>
        </config>
        <pd:inputBindings>
            <ns0:ActivityInput>
                <data>
                    <pfx16:Errors>
                        <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:when test="exists($_error_SOAPRequestReply/ActivityErrors)">
                                <pfx16:Error>
                                    <pfx16:ErrorReport>
                                        <xsl:copy-of select="$_error/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$_error/@*"/>
                                        <xsl:copy-of select="$_error/node()"/>
                                    </pfx16:ErrorReport>
                                    <xsl:choose>
                                        <xsl:when test="exists($_error_SOAPRequestReply/ActivityErrors)">
                                            <pfx16:ActivityError>
                                                <xsl:copy-of select="$_error_SOAPRequestReply/ActivityErrors/ancestor-or-self::*/namespace::node()"/>
                                                <xsl:copy-of select="$_error_SOAPRequestReply/ActivityErrors/@*"/>
                                                <xsl:copy-of select="$_error_SOAPRequestReply/ActivityErrors/node()"/>
                                            </pfx16:ActivityError>
                                        </xsl:when>
                                    </xsl:choose>
                                </pfx16:Error>
                            </xsl:when>
                            <xsl:when test="exists($_error_Get-MOC)">
                                <pfx16:Error>
                                    <pfx16:ErrorReport>
                                        <xsl:copy-of select="$_error_Get-MOC/pfx16:Error/pfx16:ErrorReport/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$_error_Get-MOC/pfx16:Error/pfx16:ErrorReport/@*"/>
                                        <xsl:copy-of select="$_error_Get-MOC/pfx16:Error/pfx16:ErrorReport/node()"/>
                                    </pfx16:ErrorReport>
                                    <xsl:choose>
                                        <xsl:when test="exists($_error_Get-MOC/pfx16:Error/pfx16:ActivityError)">
                                            <pfx16:ActivityError>
                                                <xsl:copy-of select="$_error_Get-MOC/pfx16:Error/pfx16:ActivityError/ancestor-or-self::*/namespace::node()"/>
                                                <xsl:copy-of select="$_error_Get-MOC/pfx16:Error/pfx16:ActivityError/@*"/>
                                                <xsl:copy-of select="$_error_Get-MOC/pfx16:Error/pfx16:ActivityError/node()"/>
                                            </pfx16:ActivityError>
                                        </xsl:when>
                                    </xsl:choose>
                                </pfx16:Error>
                            </xsl:when>
                            <xsl:when test="exists($_error_Parse-XML/ActivityErrors)">
                                <pfx16:Error>
                                    <pfx16:ErrorReport>
                                        <xsl:copy-of select="$_error/ns2:ErrorReport/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$_error/ns2:ErrorReport/@*"/>
                                        <xsl:copy-of select="$_error/ns2:ErrorReport/node()"/>
                                    </pfx16:ErrorReport>
                                    <pfx16:ActivityError>
                                        <xsl:copy-of select="$_error_Parse-XML/ActivityErrors/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$_error_Parse-XML/ActivityErrors/@*"/>
                                        <xsl:copy-of select="$_error_Parse-XML/ActivityErrors/node()"/>
                                    </pfx16:ActivityError>
                                </pfx16:Error>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx16:Error>
                                    <pfx16:Message>
                                        <xsl:value-of select="'General Error'"/>
                                    </pfx16:Message>
                                    <pfx16:ErrorReport>
                                        <xsl:copy-of select="$_error/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$_error/@*"/>
                                        <xsl:copy-of select="$_error/node()"/>
                                    </pfx16:ErrorReport>
                                </pfx16:Error>
                            </xsl:otherwise>
                        </xsl:choose>
                    </pfx16:Errors>
                </data>
            </ns0:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-SOAP-Input">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>427</pd:x>
        <pd:y>111</pd:y>
        <config>
            <element>
                <xsd:element name="inputMessage">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx9:GenericMessage"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <inputMessage>
                <pfx9:GenericMessage>
                    <pfx8:Header>
                        <pfx8:GUID>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns:CMH/ns:TRACKING/ns:MESSAGE_ID)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns:CMH/ns:TRACKING/ns:MESSAGE_ID"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:GUID>
                        <xsl:choose>
                            <xsl:when test="string-length($Get-MOC/root/MOC)!=0">
                                <pfx8:managed_object_class>
                                    <xsl:choose>
                                        <xsl:when test="exists($Get-MOC/root/MOC)">
                                            <xsl:value-of select="$Get-MOC/root/MOC"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </pfx8:managed_object_class>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx8:managed_object_class>
                                    <xsl:choose>
                                        <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/INTERACTION_CLASS/INTERACTION_TYPE)">
                                            <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/INTERACTION_CLASS/INTERACTION_TYPE"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </pfx8:managed_object_class>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:choose>
                            <xsl:when test="string-length($Get-MOC/root/MOCE)!=0">
                                <xsl:if test="$Get-MOC/root/MOCE">
                                    <pfx8:managed_object_class_extension>
                                        <xsl:value-of select="$Get-MOC/root/MOCE"/>
                                    </pfx8:managed_object_class_extension>
                                </xsl:if>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx8:managed_object_class_extension>
                                    <xsl:choose>
                                        <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/INTERACTION_CLASS/INTERACTION_SUBTYPE)">
                                            <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/INTERACTION_CLASS/INTERACTION_SUBTYPE"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </pfx8:managed_object_class_extension>
                            </xsl:otherwise>
                        </xsl:choose>
                        <pfx8:message_origination_it_domain>
                            <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns:CMH/ns:ATTRIBUTE[@ns:NAME='MESSAGE_ORIGINATION_IT_DOMAIN'][1]/@ns:VALUE"/>
                        </pfx8:message_origination_it_domain>
                        <pfx8:message_creation_time>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/INTERACTION_DATETIME)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/INTERACTION_DATETIME"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:message_creation_time>
                        <pfx8:message_destination_it_domain>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns:CMH/ns:ATTRIBUTE[@ns:NAME='MESSAGE_DESTINATION_IT_DOMAIN']/@ns:VALUE)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns:CMH/ns:ATTRIBUTE[@ns:NAME='MESSAGE_DESTINATION_IT_DOMAIN']/@ns:VALUE"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:message_destination_it_domain>
                    </pfx8:Header>
                    <pfx8:General>
                        <pfx8:customer_service_incident_report_identifier>
                            <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/EXTERNAL_REFERENCE"/>
                        </pfx8:customer_service_incident_report_identifier>
                        <xsl:if test="string-length($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/EAI_IDENTIFICATION)=0">
                            <pfx8:trouble_report_identifier>
                                <xsl:choose>
                                    <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/B2B_IDENTIFICATION/CUSTOMER_INTERACTION_SUPPLIER_REFERENCE_ID)">
                                        <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/B2B_IDENTIFICATION/CUSTOMER_INTERACTION_SUPPLIER_REFERENCE_ID"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </pfx8:trouble_report_identifier>
                        </xsl:if>
                        <xsl:if test="string-length($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/EAI_IDENTIFICATION)=0">
                            <pfx8:service_provider_trouble_report_identifier>
                                <xsl:choose>
                                    <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/B2B_IDENTIFICATION/CUSTOMER_INTERACTION_CONSUMER_ID)">
                                        <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/B2B_IDENTIFICATION/CUSTOMER_INTERACTION_CONSUMER_ID"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </pfx8:service_provider_trouble_report_identifier>
                        </xsl:if>
                        <pfx8:impact>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/IMPACT)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/IMPACT"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:impact>
                        <pfx8:urgency>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/URGENCY)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/URGENCY"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:urgency>
                        <pfx8:priority>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/PRIORITY)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/PRIORITY"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:priority>
                        <pfx8:perceived_trouble_severity>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/PERCEIVED_TROUBLE_SEVERITY)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/PERCEIVED_TROUBLE_SEVERITY"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:perceived_trouble_severity>
                        <pfx8:activity_information>
                            <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_CONTRACT_ITEM/INTERACTION_ACTIVITY/ACTIVITY"/>
                        </pfx8:activity_information>
                        <pfx8:analysis_information>
                            <xsl:value-of select="if(string-length($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CUSTOMER_ID/ID_CKR)!=0)&#xA; then (concat($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CUSTOMER_ID/ID_CKR,&#xA;&quot; &quot;,$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/EXTENDED_INFORMATION))&#xA;else&#xA;($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/EXTENDED_INFORMATION)"/>
                        </pfx8:analysis_information>
                        <pfx8:Non_Generic_Field_List>
                            <xsl:for-each select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/ADDITIONAL_INFORMATION">
                                <pfx8:Non_Generic_Field>
                                    <pfx8:non_Generic_Field_name>
                                        <xsl:value-of select="SOURCE"/>
                                    </pfx8:non_Generic_Field_name>
                                    <pfx8:non_Generic_Field_value>
                                        <xsl:value-of select="ADDITIONAL_INFORMATION"/>
                                    </pfx8:non_Generic_Field_value>
                                    <pfx8:non_Generic_Field_order>
                                        <xsl:value-of select="position()"/>
                                    </pfx8:non_Generic_Field_order>
                                </pfx8:Non_Generic_Field>
                            </xsl:for-each>
                            <pfx8:Non_Generic_Field>
                                <pfx8:non_Generic_Field_name>
                                    <xsl:value-of select="'OwningGroup'"/>
                                </pfx8:non_Generic_Field_name>
                                <pfx8:non_Generic_Field_value>
                                    <xsl:choose>
                                        <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/REPORT_OWNER/OWNING_GROUP)">
                                            <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/REPORT_OWNER/OWNING_GROUP"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </pfx8:non_Generic_Field_value>
                                <pfx8:non_Generic_Field_order>
                                    <xsl:value-of select="count($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/ADDITIONAL_INFORMATION)+1"/>
                                </pfx8:non_Generic_Field_order>
                            </pfx8:Non_Generic_Field>
                            <pfx8:Non_Generic_Field>
                                <pfx8:non_Generic_Field_name>
                                    <xsl:value-of select="'CKRnummer'"/>
                                </pfx8:non_Generic_Field_name>
                                <pfx8:non_Generic_Field_value>
                                    <xsl:choose>
                                        <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CUSTOMER_ID/ID_CKR)">
                                            <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CUSTOMER_ID/ID_CKR"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </pfx8:non_Generic_Field_value>
                                <pfx8:non_Generic_Field_order>
                                    <xsl:value-of select="count($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/ADDITIONAL_INFORMATION)+2"/>
                                </pfx8:non_Generic_Field_order>
                            </pfx8:Non_Generic_Field>
                        </pfx8:Non_Generic_Field_List>
                        <xsl:if test="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/INTERACTION_STATUS/CUSTOMER_REQUEST_STATUS='Close'">
                            <pfx8:closure_service_type>
                                <xsl:choose>
                                    <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/INTERACTION_REASON_CODE)">
                                        <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/INTERACTION_REASON_CODE"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </pfx8:closure_service_type>
                        </xsl:if>
                        <pfx8:sla_clearing_time>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/SERVICE_LEVEL_AGREEMENT/SLA_CLEARING_DATE)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/SERVICE_LEVEL_AGREEMENT/SLA_CLEARING_DATE"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:sla_clearing_time>
                        <pfx8:trouble_description_short>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/INTERACTION_DESCRIPTION_SHORT)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/INTERACTION_DESCRIPTION_SHORT"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:trouble_description_short>
                        <pfx8:trouble_description_long>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/INTERACTION_DESCRIPTION_LONG)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/INTERACTION_DESCRIPTION_LONG"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:trouble_description_long>
                        <pfx8:trouble_report_state>
                            <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/INTERACTION_STATUS/CUSTOMER_REQUEST_STATUS"/>
                        </pfx8:trouble_report_state>
                        <pfx8:end_user_name>
                            <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/REPORT_OWNER/ENDUSER_NAME"/>
                        </pfx8:end_user_name>
                    </pfx8:General>
                    <pfx8:Customer_info>
                        <pfx8:customer_organization>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CUSTOMER_ORGANIZATION_NAME)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CUSTOMER_ORGANIZATION_NAME"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:customer_organization>
                        <pfx8:co_city>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/PROPERTY_ADDRESS/CITY_NAME)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/PROPERTY_ADDRESS/CITY_NAME"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:co_city>
                        <xsl:if test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;])">
                            <pfx8:co_contact_person>
                                <xsl:value-of select="if (exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/FULL_NAME) and ($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/FULL_NAME!=&quot;&quot;) )&#xA;then  $Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/FULL_NAME&#xA;else concat($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/GIVEN_NAME,&quot; &quot;,$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/FAMILY_NAME,&quot; &quot;,$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/FAMILY_NAME_PREFIX)"/>
                            </pfx8:co_contact_person>
                        </xsl:if>
                        <xsl:if test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;])">
                            <pfx8:co_contact_person_fax_number>
                                <xsl:value-of select="if (exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/FAX_NUMBER/FORMATTED) and ($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/FAX_NUMBER/FORMATTED!=&quot;&quot;) )&#xA;then  &#xA;$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/FAX_NUMBER/FORMATTED&#xA;else&#xA; concat($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/FAX_NUMBER/DETAILED/AREA_CODE&#xA;,$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/FAX_NUMBER/DETAILED/SUBSCRIBER_NUMBER)"/>
                            </pfx8:co_contact_person_fax_number>
                        </xsl:if>
                        <xsl:if test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;])">
                            <pfx8:co_contact_person_telephone_number>
                                <xsl:value-of select="if (exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/PHONE_NUMBER/FORMATTED) and ($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/PHONE_NUMBER/FORMATTED!=&quot;&quot;) )&#xA;then  &#xA;$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/PHONE_NUMBER/FORMATTED&#xA;else&#xA; concat($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/PHONE_NUMBER/DETAILED/AREA_CODE&#xA;,$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/PHONE_NUMBER/DETAILED/SUBSCRIBER_NUMBER)"/>
                            </pfx8:co_contact_person_telephone_number>
                        </xsl:if>
                        <pfx8:co_country>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/PROPERTY_ADDRESS/COUNTRY)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/PROPERTY_ADDRESS/COUNTRY"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:co_country>
                        <pfx8:co_house_number>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/PROPERTY_ADDRESS/HOUSE_NUMBER)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/PROPERTY_ADDRESS/HOUSE_NUMBER"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:co_house_number>
                        <pfx8:co_house_number_extension>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/PROPERTY_ADDRESS/HOUSE_NUMBER_EXTENSION)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/PROPERTY_ADDRESS/HOUSE_NUMBER_EXTENSION"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:co_house_number_extension>
                        <xsl:if test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;])">
                            <pfx8:co_incident_reporter>
                                <xsl:value-of select="if (exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/FULL_NAME) and ($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;CONTACT&quot;]/FULL_NAME!=&quot;&quot;) )&#xA;then  $Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/FULL_NAME&#xA;else concat($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/GIVEN_NAME,&quot; &quot;,$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/FAMILY_NAME,&quot; &quot;,$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/FAMILY_NAME_PREFIX)"/>
                            </pfx8:co_incident_reporter>
                        </xsl:if>
                        <xsl:if test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;])">
                            <pfx8:co_incident_reporter_fax_number>
                                <xsl:value-of select="if (exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/FAX_NUMBER/FORMATTED) and ($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/FAX_NUMBER/FORMATTED!=&quot;&quot;) )&#xA;then  &#xA;$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/FAX_NUMBER/FORMATTED&#xA;else&#xA; concat($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/FAX_NUMBER/DETAILED/AREA_CODE&#xA;,$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/FAX_NUMBER/DETAILED/SUBSCRIBER_NUMBER)"/>
                            </pfx8:co_incident_reporter_fax_number>
                        </xsl:if>
                        <xsl:if test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;])">
                            <pfx8:co_incident_reporter_telephone_number>
                                <xsl:value-of select="if (exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/PHONE_NUMBER/FORMATTED) and ($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/PHONE_NUMBER/FORMATTED!=&quot;&quot;) )&#xA;then  &#xA;$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/PHONE_NUMBER/FORMATTED&#xA;else&#xA; concat($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/PHONE_NUMBER/DETAILED/AREA_CODE&#xA;,$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/CONTACT_PERSON[upper-case(CONTACT_ROLE)=&quot;REPORTER&quot;]/PHONE_NUMBER/DETAILED/SUBSCRIBER_NUMBER)"/>
                            </pfx8:co_incident_reporter_telephone_number>
                        </xsl:if>
                        <pfx8:co_street>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/PROPERTY_ADDRESS/STREET_NAME)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/PROPERTY_ADDRESS/STREET_NAME"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:co_street>
                        <pfx8:co_zip_code>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/PROPERTY_ADDRESS/ZIP_CODE)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_ORGANIZATION/PROPERTY_ADDRESS/ZIP_CODE"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:co_zip_code>
                    </pfx8:Customer_info>
                    <pfx8:Managed_Object_Info>
                        <pfx8:mo_supported_service_repairstarttime>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_CONTRACT_ITEM/INTERACTION_ACTIVITY/ACTIVITY_START)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_CONTRACT_ITEM/INTERACTION_ACTIVITY/ACTIVITY_START"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:mo_supported_service_repairstarttime>
                        <pfx8:mo_supported_service_repairendtime>
                            <xsl:choose>
                                <xsl:when test="exists($Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_CONTRACT_ITEM/INTERACTION_ACTIVITY/ACTIVITY_END)">
                                    <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_CONTRACT_ITEM/INTERACTION_ACTIVITY/ACTIVITY_END"/>
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                </xsl:otherwise>
                            </xsl:choose>
                        </pfx8:mo_supported_service_repairendtime>
                    </pfx8:Managed_Object_Info>
                    <pfx8:Managed_object_in_trouble_info>
                        <pfx8:moit_supported_service_class>
                            <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_CONTRACT_ITEM/SERVICE_NAME"/>
                        </pfx8:moit_supported_service_class>
                    </pfx8:Managed_object_in_trouble_info>
                    <pfx8:Attachments>
                        <xsl:if test="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/INTERACTION_CLASS/INTERACTION_SUBTYPE=&quot;PLANNED_WORK&quot;&#xA;and&#xA;$Parse-XML/pfx22:CustomerInteractionNotification/ns:CMH/ns:ID=&quot;1161&quot;">
                            <pfx8:attachment_1_attachmentData>
                                <xsl:value-of select="$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/ATTACHMENT[1]/ATTACHMENT_DATA"/>
                            </pfx8:attachment_1_attachmentData>
                        </xsl:if>
                    </pfx8:Attachments>
                </pfx9:GenericMessage>
            </inputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>152</pd:x>
        <pd:y>111</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx22:CustomerInteractionNotification"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/ServiceIn/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log Routing">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>329</pd:x>
        <pd:y>112</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_LogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <ns5:AnyXMLMessage>
                    <xsl:copy-of select="$Get-MOC/root"/>
                </ns5:AnyXMLMessage>
                <msgCode>
                    <xsl:value-of select="&quot;ASTRID-BW-01108&quot;"/>
                </msgCode>
                <message>
                    <xsl:value-of select="concat('Routing for Originator:',$Parse-XML/pfx22:CustomerInteractionNotification/ns:CMH/ns:ATTRIBUTE[@ns:NAME=&quot;MESSAGE_ORIGINATION_IT_DOMAIN&quot;][1]/@ns:VALUE,' , INTERACTION_TYPE:',$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/INTERACTION_CLASS/INTERACTION_TYPE,' , INTERACTION_SUB_TYPE:',$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/INTERACTION_CLASS/INTERACTION_SUBTYPE,' , INTERACTION_INITIATIONINTERACTION_INITIATION:',$Parse-XML/pfx22:CustomerInteractionNotification/ns19:BODY/CUSTOMER_INTERACTION_NOTIFICATION/CUSTOMER_INTERACTION_REPORT/INTERACTION_INITIATION)"/>
                </message>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>LogSOAPRequest</pd:from>
        <pd:to>SOAPRequestReply</pd:to>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPRequestReply</pd:from>
        <pd:to>LogSOAPAcknowlege</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogSOAPAcknowlege</pd:from>
        <pd:to>LogWarn</pd:to>
        <pd:xpathDescription>Validate GUID</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$SOAPRequestReply/outputMessage/pfx9:GenericMessageResponse/pfx9:GUID="" or
$SOAPRequestReply/outputMessage/pfx9:GenericMessageResponse/pfx9:GUID!=$Parse-XML/pfx22:CustomerInteractionNotification/ns:CMH/ns:TRACKING/ns:MESSAGE_ID</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>LogWarn</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Throw-Exception</pd:to>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogSOAPAcknowlege</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogSOAPRequest</pd:from>
        <pd:to>Ign log REQ</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Ign log REQ</pd:from>
        <pd:to>SOAPRequestReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogSOAPAcknowlege</pd:from>
        <pd:to>Ignore Log RESP</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Ignore Log RESP</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPRequestReply</pd:from>
        <pd:to>Throw-Exception</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogWarn</pd:from>
        <pd:to>Ignore-Log-WARN</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Ignore-Log-WARN</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get MOC</pd:from>
        <pd:to>Throw-Exception</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get MOC</pd:from>
        <pd:to>Log Routing</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-SOAP-Input</pd:from>
        <pd:to>Throw-Exception</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Get MOC</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>Throw-Exception</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-SOAP-Input</pd:from>
        <pd:to>LogSOAPRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log Routing</pd:from>
        <pd:to>Map-SOAP-Input</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>