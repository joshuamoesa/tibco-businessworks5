<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/GenericSOAPGateway/Response/0001_FindCustomer_2.2_Response_EAI_BUS_SIDE.xsd" xmlns:ns="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" xmlns:ns1="http://xmlns.kpn.com/fixed/ckradapter/common/CKRResponse.xsd" xmlns:ns2="http://xmlns.kpn.com/common/cdm/Base.xsd" xmlns:ns3="http://xmlns.kpn.com/fixed/ckradapter/common/Customer.xsd" xmlns:ns4="http://xmlns.kpn.com/fixed/ckradapter/common/PropertyAddress.xsd" xmlns:ns5="http://xmlns.kpn.com/fixed/ckradapter/common/CustomerReference.xsd" xmlns:ns6="http://xmlns.kpn.com/fixed/ckradapter/common/ExternalCustomerReference.xsd" xmlns:ns7="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx3="http://xmlns.kpn.com/eai/common/errors" xmlns:pfx4="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns8="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns10="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/GenericSOAPGateway/Request/0001_FindCustomer_2.2_Response_EAI_BUS_SIDE.xsd" xmlns:ns11="http://xmlns.kpn.com/fixed/GenericSOAPGateway/XSDSchemas/GenericSOAPGateway/Response/0001_FindCustomer_2.2_Response_EAI_BUS_SIDE.xsd" xmlns:pfx5="http://xmlns.kpn.com/EAI/fixed/0001_FindCustomer/2.2/Response" xmlns:pfx6="http://xmlns.kpn.com/EAI/fixed/0053_GetLocalLoopPath/1.1/Response" xmlns:ns12="http://xmlns.example.com/unique/default/namespace/1111412947234" xmlns:ns13="http://xmlns.kpn.com/fixed/kanvascontractadapter/common/KanvasResponse.xsd" xmlns:ns14="http://xmlns.example.com/unique/default/namespace/1111409998750" xmlns:ns15="http://xmlns.kpn.com/fixed/common/PropertyAddress.xsd" xmlns:ns16="http://xmlns.example.com/unique/default/namespace/1111417935359" xmlns:ns17="http://xmlns.example.com/unique/default/namespace/1111410000656" xmlns:ns18="http://xmlns.example.com/unique/default/namespace/1111408597203" xmlns:ns19="http://xmlns.example.com/unique/default/namespace/1111408602265" xmlns:ns20="http://xmlns.example.com/unique/default/namespace/1111410238843" xmlns:ns21="http://xmlns.example.com/unique/default/namespace/1111411714437" xmlns:pfx7="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_OutputMap_input.xsd" xmlns:pfx8="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_OutputMap_output.xsd">
    <xsd:import namespace="http://xmlns.kpn.com/eai/common/errors" schemaLocation="/Common/Shared Resources/Errors.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" schemaLocation="/XSDSchemas/Common/ResultStatus.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0001_FindCustomer/2.2/Response" schemaLocation="/XSDSchemas/GenericSOAPGateway/Response/0001_FindCustomer_2.2_Response_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/FindCustomer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0053_GetLocalLoopPath/1.1/Response" schemaLocation="/XSDSchemas/GenericSOAPGateway/Response/0053_GetLocalLoopPath_1.1_Response_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1111412947234" schemaLocation="/XSDSchemas/KanvasContractAdapter/Response/GetLocalLoopPath.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_OutputMap_input.xsd" schemaLocation="/XSDSchemas/GenericSOAPGateway/Common/EAI_OutputMap_input.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_OutputMap_output.xsd" schemaLocation="/XSDSchemas/GenericSOAPGateway/Common/EAI_OutputMap_output.xsd"/>
    <pd:name>GenericSOAPGateway/Processes/Sub_Processes/S0053.GetLocalLoopPath.1.OutputMap.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx7:BodyContainer"/>
    <pd:startX>106</pd:startX>
    <pd:startY>111</pd:startY>
    <pd:returnBindings>
        <pfx8:BodyContainer>
            <xsl:copy-of select="$MapData/Output/pfx6:BODY"/>
        </pfx8:BodyContainer>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx8:BodyContainer"/>
    <pd:endX>425</pd:endX>
    <pd:endY>108</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:activity name="MapData">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>262</pd:x>
        <pd:y>111</pd:y>
        <config>
            <element>
                <xsd:element name="Output">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx6:BODY" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/pfx7:BodyContainer/*" element="ns12:GetLocalLoopPath"/>
        </pd:coercions>
        <pd:inputBindings>
            <Output>
                <pfx6:BODY>
                    <xsl:for-each select="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:NODE">
                        <NODE>
                            <ADDRESS>
                                <xsl:if test="ns14:ADDRESS/ns15:CITY_CODE">
                                    <CITY_CODE>
                                        <xsl:value-of select="ns14:ADDRESS/ns15:CITY_CODE"/>
                                    </CITY_CODE>
                                </xsl:if>
                                <xsl:if test="ns14:ADDRESS/ns15:HOUSE_NUMBER">
                                    <HOUSE_NUMBER>
                                        <xsl:value-of select="ns14:ADDRESS/ns15:HOUSE_NUMBER"/>
                                    </HOUSE_NUMBER>
                                </xsl:if>
                                <xsl:if test="ns14:ADDRESS/ns15:HOUSE_NUMBER_EXTENSION">
                                    <HOUSE_NUMBER_EXTENSION>
                                        <xsl:value-of select="ns14:ADDRESS/ns15:HOUSE_NUMBER_EXTENSION"/>
                                    </HOUSE_NUMBER_EXTENSION>
                                </xsl:if>
                                <xsl:if test="ns14:ADDRESS/ns15:DUTCH_POSTCODE_LETTERS">
                                    <DUTCH_POSTCODE_LETTERS>
                                        <xsl:value-of select="ns14:ADDRESS/ns15:DUTCH_POSTCODE_LETTERS"/>
                                    </DUTCH_POSTCODE_LETTERS>
                                </xsl:if>
                                <xsl:if test="ns14:ADDRESS/ns15:DUTCH_POSTCODE_NUMBERS">
                                    <DUTCH_POSTCODE_NUMBERS>
                                        <xsl:value-of select="ns14:ADDRESS/ns15:DUTCH_POSTCODE_NUMBERS"/>
                                    </DUTCH_POSTCODE_NUMBERS>
                                </xsl:if>
                                <xsl:if test="ns14:ADDRESS/ns15:STREET_NAME">
                                    <STREET_NAME>
                                        <xsl:value-of select="ns14:ADDRESS/ns15:STREET_NAME"/>
                                    </STREET_NAME>
                                </xsl:if>
                            </ADDRESS>
                            <xsl:if test="ns14:NODE_NAME">
                                <NODE_NAME>
                                    <xsl:value-of select="ns14:NODE_NAME"/>
                                </NODE_NAME>
                            </xsl:if>
                            <xsl:if test="ns14:LOCATION_CODE">
                                <LOCATION_CODE>
                                    <xsl:value-of select="ns14:LOCATION_CODE"/>
                                </LOCATION_CODE>
                            </xsl:if>
                            <xsl:if test="ns14:NODE_SUB_TYPE">
                                <NODE_SUB_TYPE>
                                    <xsl:value-of select="ns14:NODE_SUB_TYPE"/>
                                </NODE_SUB_TYPE>
                            </xsl:if>
                            <xsl:if test="ns14:NODE_TYPE">
                                <NODE_TYPE>
                                    <xsl:value-of select="ns14:NODE_TYPE"/>
                                </NODE_TYPE>
                            </xsl:if>
                            <xsl:if test="ns14:SERVICE_PROVIDER_SHORT_NAME">
                                <SERVICE_PROVIDER_SHORT_NAME>
                                    <xsl:value-of select="ns14:SERVICE_PROVIDER_SHORT_NAME"/>
                                </SERVICE_PROVIDER_SHORT_NAME>
                            </xsl:if>
                            <xsl:if test="ns14:INDEX">
                                <INDEX>
                                    <xsl:value-of select="ns14:INDEX"/>
                                </INDEX>
                            </xsl:if>
                        </NODE>
                    </xsl:for-each>
                    <xsl:for-each select="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:CABLE_SECTION">
                        <CABLE_SECTION>
                            <INBOUND_NODE>
                                <RACK>
                                    <SHELF>
                                        <PHYSICAL_PORT>
                                            <xsl:if test="ns16:INBOUND_NODE/ns14:RACK/ns17:SHELF/ns18:PHYSICAL_PORT/ns19:PHYSICAL_PORT_ID">
                                                <PHYSICAL_PORT_ID>
                                                    <xsl:value-of select="ns16:INBOUND_NODE/ns14:RACK/ns17:SHELF/ns18:PHYSICAL_PORT/ns19:PHYSICAL_PORT_ID"/>
                                                </PHYSICAL_PORT_ID>
                                            </xsl:if>
                                            <xsl:if test="ns16:INBOUND_NODE/ns14:RACK/ns17:SHELF/ns18:PHYSICAL_PORT/ns19:LOCATION_INDICATION">
                                                <LOCATION_INDICATION>
                                                    <xsl:value-of select="ns16:INBOUND_NODE/ns14:RACK/ns17:SHELF/ns18:PHYSICAL_PORT/ns19:LOCATION_INDICATION"/>
                                                </LOCATION_INDICATION>
                                            </xsl:if>
                                        </PHYSICAL_PORT>
                                        <xsl:if test="ns16:INBOUND_NODE/ns14:RACK/ns17:SHELF/ns18:SHELF_POSITION">
                                            <SHELF_POSITION>
                                                <xsl:value-of select="ns16:INBOUND_NODE/ns14:RACK/ns17:SHELF/ns18:SHELF_POSITION"/>
                                            </SHELF_POSITION>
                                        </xsl:if>
                                    </SHELF>
                                    <xsl:if test="ns16:INBOUND_NODE/ns14:RACK/ns17:RACK_POSITION">
                                        <RACK_POSITION>
                                            <xsl:value-of select="ns16:INBOUND_NODE/ns14:RACK/ns17:RACK_POSITION"/>
                                        </RACK_POSITION>
                                    </xsl:if>
                                </RACK>
                                <xsl:if test="ns16:INBOUND_NODE/ns14:NODE_NAME">
                                    <NODE_NAME>
                                        <xsl:value-of select="ns16:INBOUND_NODE/ns14:NODE_NAME"/>
                                    </NODE_NAME>
                                </xsl:if>
                            </INBOUND_NODE>
                            <OUTBOUND_NODE>
                                <RACK>
                                    <SHELF>
                                        <PHYSICAL_PORT>
                                            <xsl:if test="ns16:OUTBOUND_NODE/ns14:RACK/ns17:SHELF/ns18:PHYSICAL_PORT/ns19:PHYSICAL_PORT_ID">
                                                <PHYSICAL_PORT_ID>
                                                    <xsl:value-of select="ns16:OUTBOUND_NODE/ns14:RACK/ns17:SHELF/ns18:PHYSICAL_PORT/ns19:PHYSICAL_PORT_ID"/>
                                                </PHYSICAL_PORT_ID>
                                            </xsl:if>
                                        </PHYSICAL_PORT>
                                        <xsl:if test="ns16:OUTBOUND_NODE/ns14:RACK/ns17:SHELF/ns18:SHELF_POSITION">
                                            <SHELF_POSITION>
                                                <xsl:value-of select="ns16:OUTBOUND_NODE/ns14:RACK/ns17:SHELF/ns18:SHELF_POSITION"/>
                                            </SHELF_POSITION>
                                        </xsl:if>
                                    </SHELF>
                                    <xsl:if test="ns16:OUTBOUND_NODE/ns14:RACK/ns17:RACK_POSITION">
                                        <RACK_POSITION>
                                            <xsl:value-of select="ns16:OUTBOUND_NODE/ns14:RACK/ns17:RACK_POSITION"/>
                                        </RACK_POSITION>
                                    </xsl:if>
                                </RACK>
                                <xsl:if test="ns16:OUTBOUND_NODE/ns14:NODE_NAME">
                                    <NODE_NAME>
                                        <xsl:value-of select="ns16:OUTBOUND_NODE/ns14:NODE_NAME"/>
                                    </NODE_NAME>
                                </xsl:if>
                            </OUTBOUND_NODE>
                            <xsl:if test="ns16:CABLE_SECTION_NUMBER">
                                <CABLE_SECTION_NUMBER>
                                    <xsl:value-of select="if (string-length(ns16:CABLE_SECTION_NUMBER)&lt;10) then tib:pad(current()/ns16:CABLE_SECTION_NUMBER, 10)  else current()/ns16:CABLE_SECTION_NUMBER"/>
                                </CABLE_SECTION_NUMBER>
                            </xsl:if>
                            <xsl:if test="ns16:STATUS">
                                <STATUS>
                                    <xsl:value-of select="ns16:STATUS"/>
                                </STATUS>
                            </xsl:if>
                            <xsl:if test="ns16:CROSS_CONNECT_STATE">
                                <CROSS_CONNECT_STATE>
                                    <xsl:value-of select="ns16:CROSS_CONNECT_STATE"/>
                                </CROSS_CONNECT_STATE>
                            </xsl:if>
                            <xsl:if test="ns16:INDEX">
                                <INDEX>
                                    <xsl:value-of select="ns16:INDEX"/>
                                </INDEX>
                            </xsl:if>
                        </CABLE_SECTION>
                    </xsl:for-each>
                    <LOCATION>
                        <NODE>
                            <RACK>
                                <SHELF>
                                    <PHYSICAL_PORT>
                                        <xsl:if test="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:RACK/ns17:SHELF/ns18:PHYSICAL_PORT/ns19:PHYSICAL_PORT_ID">
                                            <PHYSICAL_PORT_ID>
                                                <xsl:value-of select="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:RACK/ns17:SHELF/ns18:PHYSICAL_PORT/ns19:PHYSICAL_PORT_ID"/>
                                            </PHYSICAL_PORT_ID>
                                        </xsl:if>
                                    </PHYSICAL_PORT>
                                    <xsl:if test="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:RACK/ns17:SHELF/ns18:SHELF_POSITION">
                                        <SHELF_POSITION>
                                            <xsl:value-of select="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:RACK/ns17:SHELF/ns18:SHELF_POSITION"/>
                                        </SHELF_POSITION>
                                    </xsl:if>
                                </SHELF>
                                <xsl:if test="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:RACK/ns17:RACK_POSITION">
                                    <RACK_POSITION>
                                        <xsl:value-of select="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:RACK/ns17:RACK_POSITION"/>
                                    </RACK_POSITION>
                                </xsl:if>
                            </RACK>
                            <PORT>
                                <xsl:if test="exists($Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:PORT)">
                                    <PORT_EQUIPMENT_CODE>
                                        <xsl:value-of select="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:PORT[1]/ns21:PORT_EQUIPMENT_CODE"/>
                                    </PORT_EQUIPMENT_CODE>
                                </xsl:if>
                                <xsl:if test="exists($Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:PORT)">
                                    <PORT_EQUIPMENT_TYPE>
                                        <xsl:value-of select="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:PORT[1]/ns21:PORT_EQUIPMENT_TYPE"/>
                                    </PORT_EQUIPMENT_TYPE>
                                </xsl:if>
                                <xsl:if test="exists($Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:PORT)">
                                    <PORT_ID>
                                        <xsl:value-of select="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:PORT[1]/ns21:PORT_ID"/>
                                    </PORT_ID>
                                </xsl:if>
                            </PORT>
                            <xsl:if test="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:INFRA_PROVIDER_SHORT_NAME">
                                <INFRA_PROVIDER_SHORT_NAME>
                                    <xsl:value-of select="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:INFRA_PROVIDER_SHORT_NAME"/>
                                </INFRA_PROVIDER_SHORT_NAME>
                            </xsl:if>
                            <xsl:if test="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:NODE_NAME">
                                <NODE_NAME>
                                    <xsl:value-of select="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:NODE/ns14:NODE_NAME"/>
                                </NODE_NAME>
                            </xsl:if>
                        </NODE>
                        <xsl:if test="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:CENTRAL_AREA_CODE">
                            <CENTRAL_AREA_CODE>
                                <xsl:value-of select="$Start/pfx7:BodyContainer/ns12:GetLocalLoopPath/ns12:LOCATION/ns20:CENTRAL_AREA_CODE"/>
                            </CENTRAL_AREA_CODE>
                        </xsl:if>
                    </LOCATION>
                </pfx6:BODY>
            </Output>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>MapData</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>MapData</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>