<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="urn:GenericMessageRequest" xmlns:ns="http://tempuri.org" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx2="http://tempuri.org/GenericRequest" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/WSDL/ASTRID/GenericMessageRequest.wsdl" xmlns:pfx4="http://xmlns.kpn.com/common/cdm/ErrorMessage.xsd" xmlns:pfx5="urn:NotifyNumberInportingComplete" xmlns:ns0="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns2="http://xmlns.kpn.com/fixed/common/AnyXMLMessage.xsd" xmlns:ns1="http://xmlns.kpn.com/common/cdm/Base.xsd" xmlns:ns3="http://xmlns.kpn.com/fixed/EDTAdapter/Response/UpsertTroubleReport.xsd" xmlns:pfx6="http://xmlns.kpn.com/fixed/portingservices/publish/NotifyNumberInportingComplete" xmlns:ns4="http://xmlns.kpn.com/fixed/EDTAdapter/common/CustomerIncidentReport.xsd" xmlns:ns5="http://xmlns.kpn.com/fixed/EDTAdapter/common/EDTResponse.xsd" xmlns:ns6="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns7="http://www.tibco.com/pe/EngineTypes" xmlns:pfx7="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns8="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns9="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Response/UpsertCustomerIncidentReport.xsd" xmlns:ns10="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/TroubleReport.xsd" xmlns:ns11="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/ASTRIDResponse.xsd" xmlns:ns12="http://schemas.tibco.com/bw/plugins/soap/5.0/SoapPluginExceptions" xmlns:ns13="http://xmlns.kpn.com/fixed/ASTRIDAdapter/../WSDL/ASTRIDAdapter/GenericMessageRequest.xsd" xmlns:ns14="http://xmlns.kpn.com/fixed/common/internal/InitialError.xsd" xmlns:pfx8="urn:FIND_CUSTOMER" xmlns:pfx9="http://xmlns.kpn.com/fixed/ckradapter/request/FindCustomer.xsd" xmlns:pfx10="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" xmlns:pfx11="urn:GET_LINE_MEASUREMENT" xmlns:ns15="http://xmlns.kpn.com/fixed/ckradapter/common/Customer.xsd" xmlns:ns16="http://xmlns.kpn.com/fixed/ckradapter/common/CKRResponse.xsd" xmlns:ns17="http://xmlns.kpn.com/fixed/ckradapter/common/PropertyAddress.xsd" xmlns:ns18="http://xmlns.kpn.com/fixed/ckradapter/common/CustomerReference.xsd" xmlns:pfx12="urn:GET_CUSTOMER_DETAILS" xmlns:pfx13="http://xmlns.kpn.com/fixed/ckradapter/request/GetCustomerDetails.xsd" xmlns:pfx14="http://xmlns.kpn.com/fixed/ckradapter/response/GetCustomerDetails.xsd" xmlns:ns19="http://xmlns.kpn.com/fixed/ckradapter/common/OrganizationName.xsd" xmlns:ns20="http://xmlns.kpn.com/fixed/ckradapter/common/IndividualName.xsd" xmlns:pfx15="urn:GET_WORKORDERS" xmlns:pfx16="http://xmlns.kpn.com/fixed/ckradapter/request/GetWorkorders.xsd" xmlns:pfx17="http://xmlns.kpn.com/fixed/ckradapter/response/GetWorkorders.xsd" xmlns:ns21="http://xmlns.kpn.com/fixed/ckradapter/common/WorkOrder.xsd" xmlns:pfx18="urn:GET_CUSTOMER_CONTRACTS" xmlns:pfx19="http://xmlns.example.com/unique/default/namespace/1086798195751" xmlns:pfx20="http://xmlns.example.com/unique/default/namespace/1086802669975" xmlns:pfx21="urn:GET_RESOLVING_AGENCY" xmlns:pfx22="http://xmlns.example.com/unique/default/namespace/1086798170185" xmlns:pfx23="http://xmlns.example.com/unique/default/namespace/1086802623578" xmlns:pfx24="http://xmlns.example.com/unique/default/namespace/1087453945189" xmlns:pfx25="http://xmlns.example.com/unique/default/namespace/1087453986478" xmlns:pfx26="urn:GET_TICKETS" xmlns:pfx27="http://xmlns.example.com/unique/default/namespace/1086798344886" xmlns:pfx28="http://xmlns.example.com/unique/default/namespace/1086802707930" xmlns:ns22="http://xmlns.example.com/unique/default/namespace/1087368660275" xmlns:ns23="http://xmlns.example.com/unique/default/namespace/1087727167217" xmlns:ns24="http://xmlns.example.com/unique/default/namespace/1087726986577" xmlns:ns25="http://xmlns.example.com/unique/default/namespace/1087727306677" xmlns:ns26="http://xmlns.example.com/unique/default/namespace/1087731458057" xmlns:ns27="http://xmlns.example.com/unique/default/namespace/1087731847987" xmlns:ns28="http://xmlns.example.com/unique/default/namespace/1087727411248" xmlns:ns29="http://xmlns.example.com/unique/default/namespace/1087727473027" xmlns:eai="java://com.kpn.eai.tools.Tools" xmlns:pfx29="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Request/GetTickets.xsd" xmlns:ns30="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/KLASEL_S-0100.xsd" xmlns:pfx30="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Response/GetTickets.xsd" xmlns:ns31="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/MELD_S-0100.xsd" xmlns:ns32="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/KLANT_S-0100.xsd" xmlns:ns33="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/KLACHT_S-0102.xsd" xmlns:ns34="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/WERK_S-0100.xsd" xmlns:ns35="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/VERPL_S-0100.xsd" xmlns:ns36="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/INFRA_S-0100.xsd" xmlns:ns37="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/OBSERV_S-0100.xsd" xmlns:ns38="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/OVERIG_S-0101.xsd" xmlns:ns39="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/TECH_S-0100.xsd" xmlns:ns40="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/SERBOX_S-0100.xsd" xmlns:ns41="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/STRBOX_S-0100.xsd" xmlns:ns42="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/VV_S-0100.xsd" xmlns:ns43="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/MEET_S-0100.xsd" xmlns:ns44="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/VOROND_S-0100.xsd" xmlns:ns45="http://xmlns.tibco.com/encodings/mime" xmlns:ns46="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/HDR-SW-0101.xsd">
    <xsd:import namespace="http://tempuri.org/GenericRequest" schemaLocation="/WSDL/ASTRIDAdapter/GenericRequest.xsd"/>
    <xsd:import namespace="urn:GenericMessageRequest" schemaLocation="/WSDL/EDTAdapter/GenericMessageRequest.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" schemaLocation="/XSDSchemas/Common/ResultStatus.xsd"/>
    <xsd:import namespace="" schemaLocation=""/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/request/FindCustomer.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Request/FindCustomer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/FindCustomer.xsd"/>
    <xsd:import namespace="urn:FIND_CUSTOMER" schemaLocation="/WSDL/EDTAdapter/001 - FIND_CUSTOMER.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ErrorMessage.xsd" schemaLocation="/XSDSchemas/Common/ErrorMessage.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/request/GetCustomerDetails.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Request/GetCustomerDetails.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/response/GetCustomerDetails.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/GetCustomerDetails.xsd"/>
    <xsd:import namespace="urn:GET_CUSTOMER_DETAILS" schemaLocation="/WSDL/EDTAdapter/002 - GET_CUSTOMER_DETAILS.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/request/GetWorkorders.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Request/GetWorkOrders.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/response/GetWorkorders.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/GetWorkOrders.xsd"/>
    <xsd:import namespace="urn:GET_WORKORDERS" schemaLocation="/WSDL/EDTAdapter/003 - GET_WORKORDERS.wsdl"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1086798195751" schemaLocation="/XSDSchemas/EnginAdapter/Request/GetCustomerContract.xsd"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1086802669975" schemaLocation="/XSDSchemas/EnginAdapter/Response/GetCustomerContract.xsd"/>
    <xsd:import namespace="urn:GET_CUSTOMER_CONTRACTS" schemaLocation="/WSDL/EDTAdapter/004 - GET_CUSTOMER_CONTRACTS.wsdl"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1086798170185" schemaLocation="/XSDSchemas/EnginAdapter/Request/GetResolvingAgency.xsd"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1086802623578" schemaLocation="/XSDSchemas/EnginAdapter/Response/GetResolvingAgency.xsd"/>
    <xsd:import namespace="urn:GET_RESOLVING_AGENCY" schemaLocation="/WSDL/EDTAdapter/007 - GET_RESOLVING_AGENCY.wsdl"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1087453945189" schemaLocation="/XSDSchemas/VierTELAdapter/Request/GetLineMeasurement.xsd"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1087453986478" schemaLocation="/XSDSchemas/VierTELAdapter/Response/GetLineMeasurement.xsd"/>
    <xsd:import namespace="urn:GET_LINE_MEASUREMENT" schemaLocation="/WSDL/EDTAdapter/006 - GET_LINE_MEASUREMENT.wsdl"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1086798344886" schemaLocation="/XSDSchemas/EnginAdapter/Request/GetTickets.xsd"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1086802707930" schemaLocation="/XSDSchemas/EnginAdapter/Response/GetTickets.xsd"/>
    <xsd:import namespace="urn:GET_TICKETS" schemaLocation="/WSDL/EDTAdapter/005 - GET_TICKETS.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Request/GetTickets.xsd" schemaLocation="/XSDSchemas/ASTRIDAdapter/Request/GetTickets.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Response/GetTickets.xsd" schemaLocation="/XSDSchemas/ASTRIDAdapter/Response/GetTickets.xsd"/>
    <wsdl:import namespace="urn:GenericMessageRequest" location="/WSDL/EDTAdapter/GenericMessageRequest.wsdl"/>
    <wsdl:import namespace="urn:FIND_CUSTOMER" location="/WSDL/EDTAdapter/001 - FIND_CUSTOMER.wsdl"/>
    <wsdl:import namespace="urn:GET_CUSTOMER_DETAILS" location="/WSDL/EDTAdapter/002 - GET_CUSTOMER_DETAILS.wsdl"/>
    <wsdl:import namespace="urn:GET_WORKORDERS" location="/WSDL/EDTAdapter/003 - GET_WORKORDERS.wsdl"/>
    <wsdl:import namespace="urn:GET_CUSTOMER_CONTRACTS" location="/WSDL/EDTAdapter/004 - GET_CUSTOMER_CONTRACTS.wsdl"/>
    <wsdl:import namespace="urn:GET_RESOLVING_AGENCY" location="/WSDL/EDTAdapter/007 - GET_RESOLVING_AGENCY.wsdl"/>
    <wsdl:import namespace="urn:GET_LINE_MEASUREMENT" location="/WSDL/EDTAdapter/006 - GET_LINE_MEASUREMENT.wsdl"/>
    <wsdl:import namespace="urn:GET_TICKETS" location="/WSDL/EDTAdapter/005 - GET_TICKETS.wsdl"/>
    <pd:name>EDTAdapter/Processes/GetTickets.process</pd:name>
    <pd:description>Generic process that handles all communications originating from EDT, directed towards the EAI bus.
Note: It deals with client request-reply and server publish-subscribe.</pd:description>
    <pd:startName>SOAPEventSource</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="SOAPEventSource">
        <pd:type>com.tibco.plugin.soap.SOAPEventSource</pd:type>
        <pd:resourceType>ae.activities.SOAPEventSourceUI</pd:resourceType>
        <pd:x>58</pd:x>
        <pd:y>302</pd:y>
        <config>
            <_eventTimeout>60000</_eventTimeout>
            <service>pfx26:GET_TICKETSPortType</service>
            <operation>GetTickets</operation>
            <attachmentStyle>none</attachmentStyle>
            <wsdlNamespaceRoot>urn:GET_TICKETS/GetTicketsImpl</wsdlNamespaceRoot>
            <operationStyle>document</operationStyle>
            <soapUse>literal</soapUse>
            <embedWsdlComponents>true</embedWsdlComponents>
            <embedSchemaComponents>true</embedSchemaComponents>
            <soapAction>urn:GET_TICKETS/GetTickets</soapAction>
            <sharedChannel>/EDTAdapter/Shared Resources/HTTP Server Connection.sharedhttp</sharedChannel>
            <sharedChannels>
                <httpChannel>
                    <useBasicAuthentication>false</useBasicAuthentication>
                </httpChannel>
            </sharedChannels>
            <useBasicAuthentication>false</useBasicAuthentication>
            <portAddressPrefix/>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1156</pd:endX>
    <pd:endY>484</pd:endY>
    <pd:errorSchemas>
        <InternalError ref="pfx:GenericMessage"/>
    </pd:errorSchemas>
    <pd:processVariables>
        <ErrorStatus>
            <xsd:element name="ResultStatus" type="ns6:ResultStatus"/>
        </ErrorStatus>
    </pd:processVariables>
    <pd:activity name="Log Error">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>585</pd:x>
        <pd:y>473</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_LogError.process</processName>
        </config>
        <pd:inputBindings>
            <LogError_In>
                <xsl:choose>
                    <xsl:when test="exists($SoapEventError)">
                        <MsgCode>
                            <xsl:value-of select="&quot;EDT-03005&quot;"/>
                        </MsgCode>
                    </xsl:when>
                    <xsl:when test="(exists($Send-Rendezvous-Request)) and ($Send-Rendezvous-Request/ActivityOutput/body/RESULT_STATUS/@ns6:STATUS !=&quot;0&quot;)">
                        <MsgCode>
                            <xsl:value-of select="$Send-Rendezvous-Request/ActivityOutput/body/RESULT_STATUS/@ns6:MSG_CODE"/>
                        </MsgCode>
                    </xsl:when>
                    <xsl:when test="exists($_error_SOAPSendReply)">
                        <MsgCode>
                            <xsl:value-of select="&quot;EDT-03006&quot;"/>
                        </MsgCode>
                    </xsl:when>
                    <xsl:otherwise>
                        <MsgCode>
                            <xsl:value-of select="&quot;EDT-03003&quot;"/>
                        </MsgCode>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="exists($SoapEventError)">
                        <Message>
                            <xsl:value-of select="&quot;Error while receiving SOAP request&quot;"/>
                        </Message>
                    </xsl:when>
                    <xsl:when test="(exists($Send-Rendezvous-Request)) and ($Send-Rendezvous-Request/ActivityOutput/body/RESULT_STATUS/@ns6:STATUS !=&quot;0&quot;)">
                        <xsl:if test="$Send-Rendezvous-Request/ActivityOutput/body/RESULT_STATUS/@ns6:ERROR_DESCRIPTION">
                            <Message>
                                <xsl:value-of select="$Send-Rendezvous-Request/ActivityOutput/body/RESULT_STATUS/@ns6:ERROR_DESCRIPTION"/>
                            </Message>
                        </xsl:if>
                    </xsl:when>
                    <xsl:when test="exists($Send-Rendezvous-Request)">
                        <xsl:if test="$_error/ns7:ErrorReport/Msg">
                            <Message>
                                <xsl:value-of select="$_error/ns7:ErrorReport/Msg"/>
                            </Message>
                        </xsl:if>
                    </xsl:when>
                    <xsl:when test="exists($_error_SOAPSendReply)">
                        <Message>
                            <xsl:value-of select="&quot;Error while sending SOAP reply&quot;"/>
                        </Message>
                    </xsl:when>
                    <xsl:otherwise>
                        <Message>
                            <xsl:value-of select="&quot;General Error&quot;"/>
                        </Message>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="exists($_error)">
                        <ns14:InitialError>
                            <ns14:StackTrace>
                                <xsl:value-of select="$_error/ns7:ErrorReport/StackTrace"/>
                            </ns14:StackTrace>
                            <ns14:Msg>
                                <xsl:value-of select="$_error/ns7:ErrorReport/Msg"/>
                            </ns14:Msg>
                            <ns14:FullClass>
                                <xsl:value-of select="$_error/ns7:ErrorReport/FullClass"/>
                            </ns14:FullClass>
                            <ns14:Class>
                                <xsl:value-of select="$_error/ns7:ErrorReport/Class"/>
                            </ns14:Class>
                            <ns14:ProcessStack>
                                <xsl:value-of select="$_error/ns7:ErrorReport/ProcessStack"/>
                            </ns14:ProcessStack>
                            <xsl:if test="$_error/ns7:ErrorReport/MsgCode">
                                <ns14:MsgCode>
                                    <xsl:value-of select="$_error/ns7:ErrorReport/MsgCode"/>
                                </ns14:MsgCode>
                            </xsl:if>
                            <xsl:if test="exists($_error/ns7:ErrorReport/Data)">
                                <ns14:Data>
                                    <xsl:copy-of select="$_error/ns7:ErrorReport/Data/ancestor-or-self::*/namespace::node()"/>
                                    <xsl:copy-of select="$_error/ns7:ErrorReport/Data/@*"/>
                                    <xsl:copy-of select="$_error/ns7:ErrorReport/Data/node()"/>
                                </ns14:Data>
                            </xsl:if>
                        </ns14:InitialError>
                    </xsl:when>
                </xsl:choose>
                <ExistingCMH>
                    <COMPONENT-ID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentId"/>
                    </COMPONENT-ID>
                    <COMPONENT-VERSION>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentVersion"/>
                    </COMPONENT-VERSION>
                    <COPY_ATTRIBUTES>
                        <xsl:value-of select="&quot;true&quot;"/>
                    </COPY_ATTRIBUTES>
                    <EXTENT_TRACKING>
                        <xsl:value-of select="&quot;true&quot;"/>
                    </EXTENT_TRACKING>
                    <xsl:choose>
                        <xsl:when test="exists($FillCMH)">
                            <xsl:for-each select="$FillCMH/CMH">
                                <CMH>
                                    <ns1:ID>
                                        <xsl:value-of select="ns1:ID"/>
                                    </ns1:ID>
                                    <ns1:NAME>
                                        <xsl:value-of select="ns1:NAME"/>
                                    </ns1:NAME>
                                    <xsl:if test="ns1:FID">
                                        <ns1:FID>
                                            <xsl:value-of select="ns1:FID"/>
                                        </ns1:FID>
                                    </xsl:if>
                                    <xsl:if test="ns1:MID">
                                        <ns1:MID>
                                            <xsl:value-of select="ns1:MID"/>
                                        </ns1:MID>
                                    </xsl:if>
                                    <ns1:PARADIGM>
                                        <xsl:value-of select="ns1:PARADIGM"/>
                                    </ns1:PARADIGM>
                                    <ns1:OBJECT>
                                        <xsl:value-of select="ns1:OBJECT"/>
                                    </ns1:OBJECT>
                                    <ns1:VERSION>
                                        <xsl:value-of select="ns1:VERSION"/>
                                    </ns1:VERSION>
                                    <xsl:for-each select="ns1:FROM">
                                        <ns1:FROM>
                                            <xsl:attribute name="ns1:COMPONENT_ID">
                                                <xsl:value-of select="@ns1:COMPONENT_ID"/>
                                            </xsl:attribute>
                                            <xsl:if test="@ns1:COMPONENT_VERSION">
                                                <xsl:attribute name="ns1:COMPONENT_VERSION">
                                                    <xsl:value-of select="@ns1:COMPONENT_VERSION"/>
                                                </xsl:attribute>
                                            </xsl:if>
                                            <xsl:if test="@ns1:END_USER_INFO">
                                                <xsl:attribute name="ns1:END_USER_INFO">
                                                    <xsl:value-of select="@ns1:END_USER_INFO"/>
                                                </xsl:attribute>
                                            </xsl:if>
                                            <xsl:if test="@ns1:SOURCE_ADDRESS">
                                                <xsl:attribute name="ns1:SOURCE_ADDRESS">
                                                    <xsl:value-of select="@ns1:SOURCE_ADDRESS"/>
                                                </xsl:attribute>
                                            </xsl:if>
                                        </ns1:FROM>
                                    </xsl:for-each>
                                    <xsl:for-each select="ns1:TO">
                                        <ns1:TO>
                                            <xsl:attribute name="ns1:DESTINATION">
                                                <xsl:value-of select="concat(&quot;ErrorLog.&quot;, @ns1:DESTINATION)"/>
                                            </xsl:attribute>
                                        </ns1:TO>
                                    </xsl:for-each>
                                    <xsl:for-each select="ns1:TRACKING">
                                        <ns1:TRACKING>
                                            <ns1:MESSAGE_ID>
                                                <xsl:value-of select="ns1:MESSAGE_ID"/>
                                            </ns1:MESSAGE_ID>
                                            <xsl:if test="ns1:EXTERNAL_REF">
                                                <ns1:EXTERNAL_REF>
                                                    <xsl:value-of select="ns1:EXTERNAL_REF"/>
                                                </ns1:EXTERNAL_REF>
                                            </xsl:if>
                                            <xsl:for-each select="ns1:ITEM">
                                                <ns1:ITEM>
                                                    <xsl:attribute name="ns1:APPINFO">
                                                        <xsl:value-of select="@ns1:APPINFO"/>
                                                    </xsl:attribute>
                                                    <xsl:attribute name="ns1:EVENT">
                                                        <xsl:value-of select="@ns1:EVENT"/>
                                                    </xsl:attribute>
                                                    <xsl:attribute name="ns1:TIMESTAMP">
                                                        <xsl:value-of select="@ns1:TIMESTAMP"/>
                                                    </xsl:attribute>
                                                </ns1:ITEM>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns1:SEQUENCE_NO">
                                                <ns1:SEQUENCE_NO>
                                                    <xsl:value-of select="."/>
                                                </ns1:SEQUENCE_NO>
                                            </xsl:for-each>
                                        </ns1:TRACKING>
                                    </xsl:for-each>
                                    <xsl:for-each select="ns1:ATTRIBUTE">
                                        <ns1:ATTRIBUTE>
                                            <xsl:attribute name="ns1:NAME">
                                                <xsl:value-of select="@ns1:NAME"/>
                                            </xsl:attribute>
                                            <xsl:attribute name="ns1:VALUE">
                                                <xsl:value-of select="@ns1:VALUE"/>
                                            </xsl:attribute>
                                        </ns1:ATTRIBUTE>
                                    </xsl:for-each>
                                </CMH>
                            </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:for-each select="$FillCMH-MM007Light/CMH">
                                <CMH>
                                    <ns1:ID>
                                        <xsl:value-of select="ns1:ID"/>
                                    </ns1:ID>
                                    <ns1:NAME>
                                        <xsl:value-of select="ns1:NAME"/>
                                    </ns1:NAME>
                                    <xsl:if test="ns1:FID">
                                        <ns1:FID>
                                            <xsl:value-of select="ns1:FID"/>
                                        </ns1:FID>
                                    </xsl:if>
                                    <xsl:if test="ns1:MID">
                                        <ns1:MID>
                                            <xsl:value-of select="ns1:MID"/>
                                        </ns1:MID>
                                    </xsl:if>
                                    <ns1:PARADIGM>
                                        <xsl:value-of select="ns1:PARADIGM"/>
                                    </ns1:PARADIGM>
                                    <ns1:OBJECT>
                                        <xsl:value-of select="ns1:OBJECT"/>
                                    </ns1:OBJECT>
                                    <ns1:VERSION>
                                        <xsl:value-of select="ns1:VERSION"/>
                                    </ns1:VERSION>
                                    <xsl:for-each select="ns1:FROM">
                                        <ns1:FROM>
                                            <xsl:attribute name="ns1:COMPONENT_ID">
                                                <xsl:value-of select="@ns1:COMPONENT_ID"/>
                                            </xsl:attribute>
                                            <xsl:if test="@ns1:COMPONENT_VERSION">
                                                <xsl:attribute name="ns1:COMPONENT_VERSION">
                                                    <xsl:value-of select="@ns1:COMPONENT_VERSION"/>
                                                </xsl:attribute>
                                            </xsl:if>
                                            <xsl:if test="@ns1:END_USER_INFO">
                                                <xsl:attribute name="ns1:END_USER_INFO">
                                                    <xsl:value-of select="@ns1:END_USER_INFO"/>
                                                </xsl:attribute>
                                            </xsl:if>
                                            <xsl:if test="@ns1:SOURCE_ADDRESS">
                                                <xsl:attribute name="ns1:SOURCE_ADDRESS">
                                                    <xsl:value-of select="@ns1:SOURCE_ADDRESS"/>
                                                </xsl:attribute>
                                            </xsl:if>
                                        </ns1:FROM>
                                    </xsl:for-each>
                                    <xsl:for-each select="ns1:TO">
                                        <ns1:TO>
                                            <xsl:attribute name="ns1:DESTINATION">
                                                <xsl:value-of select="concat(&quot;ErrorLog.&quot;, @ns1:DESTINATION)"/>
                                            </xsl:attribute>
                                        </ns1:TO>
                                    </xsl:for-each>
                                    <xsl:for-each select="ns1:TRACKING">
                                        <ns1:TRACKING>
                                            <ns1:MESSAGE_ID>
                                                <xsl:value-of select="ns1:MESSAGE_ID"/>
                                            </ns1:MESSAGE_ID>
                                            <xsl:if test="ns1:EXTERNAL_REF">
                                                <ns1:EXTERNAL_REF>
                                                    <xsl:value-of select="ns1:EXTERNAL_REF"/>
                                                </ns1:EXTERNAL_REF>
                                            </xsl:if>
                                            <xsl:for-each select="ns1:ITEM">
                                                <ns1:ITEM>
                                                    <xsl:attribute name="ns1:APPINFO">
                                                        <xsl:value-of select="@ns1:APPINFO"/>
                                                    </xsl:attribute>
                                                    <xsl:attribute name="ns1:EVENT">
                                                        <xsl:value-of select="@ns1:EVENT"/>
                                                    </xsl:attribute>
                                                    <xsl:attribute name="ns1:TIMESTAMP">
                                                        <xsl:value-of select="@ns1:TIMESTAMP"/>
                                                    </xsl:attribute>
                                                </ns1:ITEM>
                                            </xsl:for-each>
                                            <xsl:for-each select="ns1:SEQUENCE_NO">
                                                <ns1:SEQUENCE_NO>
                                                    <xsl:value-of select="."/>
                                                </ns1:SEQUENCE_NO>
                                            </xsl:for-each>
                                        </ns1:TRACKING>
                                    </xsl:for-each>
                                    <xsl:for-each select="ns1:ATTRIBUTE">
                                        <ns1:ATTRIBUTE>
                                            <xsl:attribute name="ns1:NAME">
                                                <xsl:value-of select="@ns1:NAME"/>
                                            </xsl:attribute>
                                            <xsl:attribute name="ns1:VALUE">
                                                <xsl:value-of select="@ns1:VALUE"/>
                                            </xsl:attribute>
                                        </ns1:ATTRIBUTE>
                                    </xsl:for-each>
                                </CMH>
                            </xsl:for-each>
                        </xsl:otherwise>
                    </xsl:choose>
                </ExistingCMH>
                <xsl:choose>
                    <xsl:when test="exists($SoapEventError)">
                        <StatusCode>
                            <xsl:value-of select="&quot;3&quot;"/>
                        </StatusCode>
                    </xsl:when>
                    <xsl:when test="(exists($Send-Rendezvous-Request)) and ($Send-Rendezvous-Request/ActivityOutput/body/RESULT_STATUS/@ns6:STATUS !=&quot;0&quot;)">
                        <StatusCode>
                            <xsl:value-of select="$Send-Rendezvous-Request/ActivityOutput/body/RESULT_STATUS/@ns6:STATUS"/>
                        </StatusCode>
                    </xsl:when>
                    <xsl:when test="exists($_error_SOAPSendReply)">
                        <StatusCode>
                            <xsl:value-of select="&quot;2&quot;"/>
                        </StatusCode>
                    </xsl:when>
                    <xsl:otherwise>
                        <StatusCode>
                            <xsl:value-of select="&quot;1&quot;"/>
                        </StatusCode>
                    </xsl:otherwise>
                </xsl:choose>
            </LogError_In>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>456</pd:x>
        <pd:y>505</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="LogSOAPRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>183</pd:x>
        <pd:y>304</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_LogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <LogMessage_In>
                <MsgCode>
                    <xsl:value-of select="&quot;EAI-04004&quot;"/>
                </MsgCode>
                <Message>
                    <xsl:value-of select="concat(&quot;Received SOAP request on port &quot;,$_globalVariables/ns8:GlobalVariables/EDTAdapter/Outbound/SOAP/ServerPort)"/>
                </Message>
                <ExtraInfo>
                    <xsl:copy-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets"/>
                </ExtraInfo>
            </LogMessage_In>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SOAPSendReply">
        <pd:type>com.tibco.plugin.soap.SOAPSendReplyActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReplyUI</pd:resourceType>
        <pd:x>948</pd:x>
        <pd:y>622</pd:y>
        <config>
            <eventSource>SOAPEventSource</eventSource>
        </config>
        <pd:inputBindings>
            <outputMessage>
                <xsl:copy-of select="$MapSoapReply/pfx26:GetTicketsResponse"/>
            </outputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogSOAPReply">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>792</pd:x>
        <pd:y>615</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_LogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <LogMessage_In>
                <MsgCode>
                    <xsl:value-of select="&quot;EAI-04005&quot;"/>
                </MsgCode>
                <Message>
                    <xsl:value-of select="concat(&quot;Sending SOAP response for port &quot;,$_globalVariables/ns8:GlobalVariables/EDTAdapter/Outbound/SOAP/ServerPort)"/>
                </Message>
                <ExtraInfo>
                    <xsl:copy-of select="$MapSoapReply/pfx26:GetTicketsResponse"/>
                </ExtraInfo>
            </LogMessage_In>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapSoapReply">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>608</pd:x>
        <pd:y>622</pd:y>
        <config>
            <element ref="pfx26:GetTicketsResponse"/>
        </config>
        <pd:inputBindings>
            <pfx26:GetTicketsResponse>
                <pfx26:GUID>
                    <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:GUID"/>
                </pfx26:GUID>
                <pfx26:TicketList>
                    <xsl:for-each select="$Send-Rendezvous-Request/ActivityOutput/body/TROUBLE_REPORT">
                        <pfx26:Ticket>
                            <xsl:if test="ns22:ACCEPT_DATE_TIME">
                                <pfx26:ACCEPT_DATE_TIME>
                                    <xsl:value-of select="ns22:ACCEPT_DATE_TIME"/>
                                </pfx26:ACCEPT_DATE_TIME>
                            </xsl:if>
                            <xsl:if test="ns22:ANALYSIS_INFORMATION">
                                <pfx26:ANALYSIS_INFORMATION>
                                    <xsl:value-of select="ns22:ANALYSIS_INFORMATION"/>
                                </pfx26:ANALYSIS_INFORMATION>
                            </xsl:if>
                            <xsl:if test="ns22:ANALYSIS_INFORMATION_SUMMARY">
                                <pfx26:ANALYSIS_INFORMATION_SUMMARY>
                                    <xsl:value-of select="ns22:ANALYSIS_INFORMATION_SUMMARY"/>
                                </pfx26:ANALYSIS_INFORMATION_SUMMARY>
                            </xsl:if>
                            <xsl:if test="ns22:ANALYST_ID">
                                <pfx26:ANALYST_ID>
                                    <xsl:value-of select="ns22:ANALYST_ID"/>
                                </pfx26:ANALYST_ID>
                            </xsl:if>
                            <xsl:if test="ns22:APPOINTMENT_ENGINEER_AREA">
                                <pfx26:APPOINTMENT_ENGINEER_AREA>
                                    <xsl:value-of select="ns22:APPOINTMENT_ENGINEER_AREA"/>
                                </pfx26:APPOINTMENT_ENGINEER_AREA>
                            </xsl:if>
                            <xsl:if test="ns22:ASSIGNED_DATE_TIME">
                                <pfx26:ASSIGNED_DATE_TIME>
                                    <xsl:value-of select="ns22:ASSIGNED_DATE_TIME"/>
                                </pfx26:ASSIGNED_DATE_TIME>
                            </xsl:if>
                            <xsl:if test="ns22:CLOSED_DATE">
                                <pfx26:CLOSED_DATE>
                                    <xsl:value-of select="ns22:CLOSED_DATE"/>
                                </pfx26:CLOSED_DATE>
                            </xsl:if>
                            <xsl:if test="ns22:CLOSURE_REPORT_CODE">
                                <pfx26:CLOSURE_REPORT_CODE>
                                    <xsl:value-of select="ns22:CLOSURE_REPORT_CODE"/>
                                </pfx26:CLOSURE_REPORT_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:CREATED_ON_DATE">
                                <pfx26:CREATED_ON_DATE>
                                    <xsl:value-of select="ns22:CREATED_ON_DATE"/>
                                </pfx26:CREATED_ON_DATE>
                            </xsl:if>
                            <xsl:if test="ns22:CUSTOMER_ACK_COMPLETE_DATETIME">
                                <pfx26:CUSTOMER_ACK_COMPLETE_DATETIME>
                                    <xsl:value-of select="ns22:CUSTOMER_ACK_COMPLETE_DATETIME"/>
                                </pfx26:CUSTOMER_ACK_COMPLETE_DATETIME>
                            </xsl:if>
                            <xsl:if test="ns22:EMPLOYEE_LOGIN_NAME">
                                <pfx26:EMPLOYEE_LOGIN_NAME>
                                    <xsl:value-of select="ns22:EMPLOYEE_LOGIN_NAME"/>
                                </pfx26:EMPLOYEE_LOGIN_NAME>
                            </xsl:if>
                            <xsl:if test="ns22:EXTERNAL_CUSTOMER_REF_NO">
                                <pfx26:EXTERNAL_CUSTOMER_REF_NO>
                                    <xsl:value-of select="ns22:EXTERNAL_CUSTOMER_REF_NO"/>
                                </pfx26:EXTERNAL_CUSTOMER_REF_NO>
                            </xsl:if>
                            <xsl:if test="ns22:FORMULA_ID">
                                <pfx26:FORMULA_ID>
                                    <xsl:value-of select="ns22:FORMULA_ID"/>
                                </pfx26:FORMULA_ID>
                            </xsl:if>
                            <xsl:if test="ns22:ISDN_SUB_NUMBER">
                                <pfx26:ISDN_SUB_NUMBER>
                                    <xsl:value-of select="ns22:ISDN_SUB_NUMBER"/>
                                </pfx26:ISDN_SUB_NUMBER>
                            </xsl:if>
                            <xsl:if test="ns22:MM007C_TROUBLE_URGENCY_FLAG">
                                <pfx26:MM007C_TROUBLE_URGENCY_FLAG>
                                    <xsl:value-of select="ns22:MM007C_TROUBLE_URGENCY_FLAG"/>
                                </pfx26:MM007C_TROUBLE_URGENCY_FLAG>
                            </xsl:if>
                            <xsl:if test="ns22:MM007C_TROUBLE_URGENCY_ID">
                                <pfx26:MM007C_TROUBLE_URGENCY_ID>
                                    <xsl:value-of select="ns22:MM007C_TROUBLE_URGENCY_ID"/>
                                </pfx26:MM007C_TROUBLE_URGENCY_ID>
                            </xsl:if>
                            <xsl:if test="ns22:MM007R_PRODUCT_TYPE_DESCRIPTION">
                                <pfx26:MM007R_PRODUCT_TYPE_DESCRIPTION>
                                    <xsl:value-of select="ns22:MM007R_PRODUCT_TYPE_DESCRIPTION"/>
                                </pfx26:MM007R_PRODUCT_TYPE_DESCRIPTION>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_ANALYST_TEXT">
                                <pfx26:MM007_ANALYST_TEXT>
                                    <xsl:value-of select="ns22:MM007_ANALYST_TEXT"/>
                                </pfx26:MM007_ANALYST_TEXT>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_APPOINTMENT_DT">
                                <pfx26:MM007_APPOINTMENT_DT>
                                    <xsl:value-of select="ns22:MM007_APPOINTMENT_DT"/>
                                </pfx26:MM007_APPOINTMENT_DT>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_APPOINTMENT_ORG_TEXT">
                                <pfx26:MM007_APPOINTMENT_ORG_TEXT>
                                    <xsl:value-of select="ns22:MM007_APPOINTMENT_ORG_TEXT"/>
                                </pfx26:MM007_APPOINTMENT_ORG_TEXT>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_BAAN_CONTRACT_ID">
                                <pfx26:MM007_BAAN_CONTRACT_ID>
                                    <xsl:value-of select="ns22:MM007_BAAN_CONTRACT_ID"/>
                                </pfx26:MM007_BAAN_CONTRACT_ID>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_CONTRACT_BEGIN_DT">
                                <pfx26:MM007_CONTRACT_BEGIN_DT>
                                    <xsl:value-of select="ns22:MM007_CONTRACT_BEGIN_DT"/>
                                </pfx26:MM007_CONTRACT_BEGIN_DT>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_CONTRACT_CODE">
                                <pfx26:MM007_CONTRACT_CODE>
                                    <xsl:value-of select="ns22:MM007_CONTRACT_CODE"/>
                                </pfx26:MM007_CONTRACT_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_CONTRACT_HALFHOUR_IND">
                                <pfx26:MM007_CONTRACT_HALFHOUR_IND>
                                    <xsl:value-of select="ns22:MM007_CONTRACT_HALFHOUR_IND"/>
                                </pfx26:MM007_CONTRACT_HALFHOUR_IND>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_CUSTOMER_ACCEPTS_COSTS">
                                <pfx26:MM007_CUSTOMER_ACCEPTS_COSTS>
                                    <xsl:value-of select="ns22:MM007_CUSTOMER_ACCEPTS_COSTS"/>
                                </pfx26:MM007_CUSTOMER_ACCEPTS_COSTS>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_CUSTOMER_CONTRACT_COUNT">
                                <pfx26:MM007_CUSTOMER_CONTRACT_COUNT>
                                    <xsl:value-of select="ns22:MM007_CUSTOMER_CONTRACT_COUNT"/>
                                </pfx26:MM007_CUSTOMER_CONTRACT_COUNT>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_DISPATCH_SYSTEM">
                                <pfx26:MM007_DISPATCH_SYSTEM>
                                    <xsl:value-of select="ns22:MM007_DISPATCH_SYSTEM"/>
                                </pfx26:MM007_DISPATCH_SYSTEM>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_ENGINEER_WILL_VISIT_CUSTOMER">
                                <pfx26:MM007_ENGINEER_WILL_VISIT_CUSTOMER>
                                    <xsl:value-of select="ns22:MM007_ENGINEER_WILL_VISIT_CUSTOMER"/>
                                </pfx26:MM007_ENGINEER_WILL_VISIT_CUSTOMER>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_ORDER_TYPE_ABBREVIATION">
                                <pfx26:MM007_ORDER_TYPE_ABBREVIATION>
                                    <xsl:value-of select="ns22:MM007_ORDER_TYPE_ABBREVIATION"/>
                                </pfx26:MM007_ORDER_TYPE_ABBREVIATION>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_OWNED_TROUBLE_REPORT">
                                <pfx26:MM007_OWNED_TROUBLE_REPORT>
                                    <xsl:value-of select="ns22:MM007_OWNED_TROUBLE_REPORT"/>
                                </pfx26:MM007_OWNED_TROUBLE_REPORT>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_PART_OF_DAY_BEGIN_TM">
                                <pfx26:MM007_PART_OF_DAY_BEGIN_TM>
                                    <xsl:value-of select="ns22:MM007_PART_OF_DAY_BEGIN_TM"/>
                                </pfx26:MM007_PART_OF_DAY_BEGIN_TM>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_PART_OF_DAY_CODE">
                                <pfx26:MM007_PART_OF_DAY_CODE>
                                    <xsl:value-of select="ns22:MM007_PART_OF_DAY_CODE"/>
                                </pfx26:MM007_PART_OF_DAY_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_PART_OF_DAY_END_TM">
                                <pfx26:MM007_PART_OF_DAY_END_TM>
                                    <xsl:value-of select="ns22:MM007_PART_OF_DAY_END_TM"/>
                                </pfx26:MM007_PART_OF_DAY_END_TM>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_PART_OF_DAY_ORG_CODE">
                                <pfx26:MM007_PART_OF_DAY_ORG_CODE>
                                    <xsl:value-of select="ns22:MM007_PART_OF_DAY_ORG_CODE"/>
                                </pfx26:MM007_PART_OF_DAY_ORG_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_PRODUCT_CATEGORY_ID">
                                <pfx26:MM007_PRODUCT_CATEGORY_ID>
                                    <xsl:value-of select="ns22:MM007_PRODUCT_CATEGORY_ID"/>
                                </pfx26:MM007_PRODUCT_CATEGORY_ID>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_PRODUCT_ID">
                                <pfx26:MM007_PRODUCT_ID>
                                    <xsl:value-of select="ns22:MM007_PRODUCT_ID"/>
                                </pfx26:MM007_PRODUCT_ID>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_PRODUCT_TYPE_CODE">
                                <pfx26:MM007_PRODUCT_TYPE_CODE>
                                    <xsl:value-of select="ns22:MM007_PRODUCT_TYPE_CODE"/>
                                </pfx26:MM007_PRODUCT_TYPE_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_PRODUCT_TYPE_CODE_1">
                                <pfx26:MM007_PRODUCT_TYPE_CODE_1>
                                    <xsl:value-of select="ns22:MM007_PRODUCT_TYPE_CODE_1"/>
                                </pfx26:MM007_PRODUCT_TYPE_CODE_1>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_PRODUCT_TYPE_DESCRIPTION">
                                <pfx26:MM007_PRODUCT_TYPE_DESCRIPTION>
                                    <xsl:value-of select="ns22:MM007_PRODUCT_TYPE_DESCRIPTION"/>
                                </pfx26:MM007_PRODUCT_TYPE_DESCRIPTION>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_PRODUCT_TYPE_DESCRIPTION_1">
                                <pfx26:MM007_PRODUCT_TYPE_DESCRIPTION_1>
                                    <xsl:value-of select="ns22:MM007_PRODUCT_TYPE_DESCRIPTION_1"/>
                                </pfx26:MM007_PRODUCT_TYPE_DESCRIPTION_1>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_PRODUCT_TYPE_ID">
                                <pfx26:MM007_PRODUCT_TYPE_ID>
                                    <xsl:value-of select="ns22:MM007_PRODUCT_TYPE_ID"/>
                                </pfx26:MM007_PRODUCT_TYPE_ID>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_REGION_ID_SEQ_NUMBER">
                                <pfx26:MM007_REGION_ID_SEQ_NUMBER>
                                    <xsl:value-of select="ns22:MM007_REGION_ID_SEQ_NUMBER"/>
                                </pfx26:MM007_REGION_ID_SEQ_NUMBER>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_REPAIR_REMARKS">
                                <pfx26:MM007_REPAIR_REMARKS>
                                    <xsl:value-of select="ns22:MM007_REPAIR_REMARKS"/>
                                </pfx26:MM007_REPAIR_REMARKS>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_REPORT_KEY">
                                <pfx26:MM007_REPORT_KEY>
                                    <xsl:value-of select="ns22:MM007_REPORT_KEY"/>
                                </pfx26:MM007_REPORT_KEY>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_RESEARCH_AREA">
                                <pfx26:MM007_RESEARCH_AREA>
                                    <xsl:value-of select="ns22:MM007_RESEARCH_AREA"/>
                                </pfx26:MM007_RESEARCH_AREA>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_RESEARCH_DEPARTMENT_CODE">
                                <pfx26:MM007_RESEARCH_DEPARTMENT_CODE>
                                    <xsl:value-of select="ns22:MM007_RESEARCH_DEPARTMENT_CODE"/>
                                </pfx26:MM007_RESEARCH_DEPARTMENT_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_RESEARCH_EMPLOYEE_CODE">
                                <pfx26:MM007_RESEARCH_EMPLOYEE_CODE>
                                    <xsl:value-of select="ns22:MM007_RESEARCH_EMPLOYEE_CODE"/>
                                </pfx26:MM007_RESEARCH_EMPLOYEE_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_ROUTED_TO">
                                <pfx26:MM007_ROUTED_TO>
                                    <xsl:value-of select="ns22:MM007_ROUTED_TO"/>
                                </pfx26:MM007_ROUTED_TO>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_SERVICE_HOURS_CODE">
                                <pfx26:MM007_SERVICE_HOURS_CODE>
                                    <xsl:value-of select="ns22:MM007_SERVICE_HOURS_CODE"/>
                                </pfx26:MM007_SERVICE_HOURS_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_SERVICE_ID">
                                <pfx26:MM007_SERVICE_ID>
                                    <xsl:value-of select="ns22:MM007_SERVICE_ID"/>
                                </pfx26:MM007_SERVICE_ID>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_SERVICE_PHONE_NUMBER">
                                <pfx26:MM007_SERVICE_PHONE_NUMBER>
                                    <xsl:value-of select="ns22:MM007_SERVICE_PHONE_NUMBER"/>
                                </pfx26:MM007_SERVICE_PHONE_NUMBER>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_SERVICE_RESPONSE_WINDOW">
                                <pfx26:MM007_SERVICE_RESPONSE_WINDOW>
                                    <xsl:value-of select="ns22:MM007_SERVICE_RESPONSE_WINDOW"/>
                                </pfx26:MM007_SERVICE_RESPONSE_WINDOW>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_SOURCE">
                                <pfx26:MM007_SOURCE>
                                    <xsl:value-of select="ns22:MM007_SOURCE"/>
                                </pfx26:MM007_SOURCE>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_SPECIFY_DEFAULT_ANALIST">
                                <pfx26:MM007_SPECIFY_DEFAULT_ANALIST>
                                    <xsl:value-of select="ns22:MM007_SPECIFY_DEFAULT_ANALIST"/>
                                </pfx26:MM007_SPECIFY_DEFAULT_ANALIST>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_STRATA_NAME">
                                <pfx26:MM007_STRATA_NAME>
                                    <xsl:value-of select="ns22:MM007_STRATA_NAME"/>
                                </pfx26:MM007_STRATA_NAME>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_STRATA_SEQ_NUMBER">
                                <pfx26:MM007_STRATA_SEQ_NUMBER>
                                    <xsl:value-of select="ns22:MM007_STRATA_SEQ_NUMBER"/>
                                </pfx26:MM007_STRATA_SEQ_NUMBER>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_SUBSCRIBED_TO_NOTIFICATIONS">
                                <pfx26:MM007_SUBSCRIBED_TO_NOTIFICATIONS>
                                    <xsl:value-of select="ns22:MM007_SUBSCRIBED_TO_NOTIFICATIONS"/>
                                </pfx26:MM007_SUBSCRIBED_TO_NOTIFICATIONS>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_TARGET">
                                <pfx26:MM007_TARGET>
                                    <xsl:value-of select="ns22:MM007_TARGET"/>
                                </pfx26:MM007_TARGET>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_TROUBLE_CAUSE_CODE">
                                <pfx26:MM007_TROUBLE_CAUSE_CODE>
                                    <xsl:value-of select="ns22:MM007_TROUBLE_CAUSE_CODE"/>
                                </pfx26:MM007_TROUBLE_CAUSE_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_TROUBLE_URGENCY_FLAG">
                                <pfx26:MM007_TROUBLE_URGENCY_FLAG>
                                    <xsl:value-of select="ns22:MM007_TROUBLE_URGENCY_FLAG"/>
                                </pfx26:MM007_TROUBLE_URGENCY_FLAG>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_TROUBLE_URGENCY_ID">
                                <pfx26:MM007_TROUBLE_URGENCY_ID>
                                    <xsl:value-of select="ns22:MM007_TROUBLE_URGENCY_ID"/>
                                </pfx26:MM007_TROUBLE_URGENCY_ID>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_VISIT_IND_1">
                                <pfx26:MM007_VISIT_IND_1>
                                    <xsl:value-of select="ns22:MM007_VISIT_IND_1"/>
                                </pfx26:MM007_VISIT_IND_1>
                            </xsl:if>
                            <xsl:if test="ns22:MM007_WORK_AREA_CODE">
                                <pfx26:MM007_WORK_AREA_CODE>
                                    <xsl:value-of select="ns22:MM007_WORK_AREA_CODE"/>
                                </pfx26:MM007_WORK_AREA_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:NOTIFICATION_COMPLETE_DATETIME">
                                <pfx26:NOTIFICATION_COMPLETE_DATETIME>
                                    <xsl:value-of select="ns22:NOTIFICATION_COMPLETE_DATETIME"/>
                                </pfx26:NOTIFICATION_COMPLETE_DATETIME>
                            </xsl:if>
                            <xsl:if test="ns22:PRV_TROUBLE_STATUS_CODE">
                                <pfx26:PRV_TROUBLE_STATUS_CODE>
                                    <xsl:value-of select="ns22:PRV_TROUBLE_STATUS_CODE"/>
                                </pfx26:PRV_TROUBLE_STATUS_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:PRV_TROUBLE_STATUS_DESCRIPTION">
                                <pfx26:PRV_TROUBLE_STATUS_DESCRIPTION>
                                    <xsl:value-of select="ns22:PRV_TROUBLE_STATUS_DESCRIPTION"/>
                                </pfx26:PRV_TROUBLE_STATUS_DESCRIPTION>
                            </xsl:if>
                            <xsl:if test="ns22:REPAIR_DEADLINE_DATE_TIME">
                                <pfx26:REPAIR_DEADLINE_DATE_TIME>
                                    <xsl:value-of select="ns22:REPAIR_DEADLINE_DATE_TIME"/>
                                </pfx26:REPAIR_DEADLINE_DATE_TIME>
                            </xsl:if>
                            <xsl:if test="ns22:REPAIR_REMARKS">
                                <pfx26:REPAIR_REMARKS>
                                    <xsl:value-of select="ns22:REPAIR_REMARKS"/>
                                </pfx26:REPAIR_REMARKS>
                            </xsl:if>
                            <xsl:if test="ns22:REPEATED_TROUBLE_FLAG">
                                <pfx26:REPEATED_TROUBLE_FLAG>
                                    <xsl:value-of select="ns22:REPEATED_TROUBLE_FLAG"/>
                                </pfx26:REPEATED_TROUBLE_FLAG>
                            </xsl:if>
                            <xsl:if test="ns22:REPORT_DESCR">
                                <pfx26:REPORT_DESCR>
                                    <xsl:value-of select="ns22:REPORT_DESCR"/>
                                </pfx26:REPORT_DESCR>
                            </xsl:if>
                            <xsl:if test="ns22:RESEARCH_DEPARTMENT_CODE">
                                <pfx26:RESEARCH_DEPARTMENT_CODE>
                                    <xsl:value-of select="ns22:RESEARCH_DEPARTMENT_CODE"/>
                                </pfx26:RESEARCH_DEPARTMENT_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:RESEARCH_EMPLOYEE_CODE">
                                <pfx26:RESEARCH_EMPLOYEE_CODE>
                                    <xsl:value-of select="ns22:RESEARCH_EMPLOYEE_CODE"/>
                                </pfx26:RESEARCH_EMPLOYEE_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:SLA_CLEARING_DATE_TIME">
                                <pfx26:SLA_CLEARING_DATE_TIME>
                                    <xsl:value-of select="ns22:SLA_CLEARING_DATE_TIME"/>
                                </pfx26:SLA_CLEARING_DATE_TIME>
                            </xsl:if>
                            <xsl:if test="ns22:SLA_CLEARING_DATE_TIME_1">
                                <pfx26:SLA_CLEARING_DATE_TIME_1>
                                    <xsl:value-of select="ns22:SLA_CLEARING_DATE_TIME_1"/>
                                </pfx26:SLA_CLEARING_DATE_TIME_1>
                            </xsl:if>
                            <xsl:if test="ns22:STRATA_TROUBLE_CLOSURE_METHOD">
                                <pfx26:STRATA_TROUBLE_CLOSURE_METHOD>
                                    <xsl:value-of select="ns22:STRATA_TROUBLE_CLOSURE_METHOD"/>
                                </pfx26:STRATA_TROUBLE_CLOSURE_METHOD>
                            </xsl:if>
                            <xsl:if test="ns22:TROUBLE_CAUSE_CODE">
                                <pfx26:TROUBLE_CAUSE_CODE>
                                    <xsl:value-of select="ns22:TROUBLE_CAUSE_CODE"/>
                                </pfx26:TROUBLE_CAUSE_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:TROUBLE_CAUSE_DESCRIPTION">
                                <pfx26:TROUBLE_CAUSE_DESCRIPTION>
                                    <xsl:value-of select="ns22:TROUBLE_CAUSE_DESCRIPTION"/>
                                </pfx26:TROUBLE_CAUSE_DESCRIPTION>
                            </xsl:if>
                            <xsl:if test="ns22:TROUBLE_CLOSURE_METHOD">
                                <pfx26:TROUBLE_CLOSURE_METHOD>
                                    <xsl:value-of select="ns22:TROUBLE_CLOSURE_METHOD"/>
                                </pfx26:TROUBLE_CLOSURE_METHOD>
                            </xsl:if>
                            <xsl:if test="ns22:TROUBLE_REPORT_ID">
                                <pfx26:TROUBLE_REPORT_ID>
                                    <xsl:value-of select="ns22:TROUBLE_REPORT_ID"/>
                                </pfx26:TROUBLE_REPORT_ID>
                            </xsl:if>
                            <xsl:if test="ns22:TROUBLE_RESOLUTION_CODE">
                                <pfx26:TROUBLE_RESOLUTION_CODE>
                                    <xsl:value-of select="ns22:TROUBLE_RESOLUTION_CODE"/>
                                </pfx26:TROUBLE_RESOLUTION_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:TROUBLE_STATUS_CODE">
                                <pfx26:TROUBLE_STATUS_CODE>
                                    <xsl:value-of select="ns22:TROUBLE_STATUS_CODE"/>
                                </pfx26:TROUBLE_STATUS_CODE>
                            </xsl:if>
                            <xsl:if test="ns22:TROUBLE_STATUS_DESCRIPTION">
                                <pfx26:TROUBLE_STATUS_DESCRIPTION>
                                    <xsl:value-of select="ns22:TROUBLE_STATUS_DESCRIPTION"/>
                                </pfx26:TROUBLE_STATUS_DESCRIPTION>
                            </xsl:if>
                            <xsl:for-each select="ns22:CONTACT_PERSON">
                                <pfx26:CONTACT_PERSON>
                                    <xsl:if test="ns23:FAMILY_NAME">
                                        <pfx26:FAMILY_NAME>
                                            <xsl:value-of select="ns23:FAMILY_NAME"/>
                                        </pfx26:FAMILY_NAME>
                                    </xsl:if>
                                    <xsl:if test="ns23:PHONE_NUMBER">
                                        <pfx26:PHONE_NUMBER>
                                            <xsl:value-of select="ns23:PHONE_NUMBER"/>
                                        </pfx26:PHONE_NUMBER>
                                    </xsl:if>
                                </pfx26:CONTACT_PERSON>
                            </xsl:for-each>
                            <xsl:for-each select="ns22:COMPLAINT_CATEGORY">
                                <pfx26:COMPLAINT_CATEGORY>
                                    <xsl:if test="ns24:COMPLAINT_GROUP_CODE">
                                        <pfx26:COMPLAINT_GROUP_CODE>
                                            <xsl:value-of select="ns24:COMPLAINT_GROUP_CODE"/>
                                        </pfx26:COMPLAINT_GROUP_CODE>
                                    </xsl:if>
                                    <xsl:if test="ns24:COMPLAINT_SPECIFIC_DESCRIPTION">
                                        <pfx26:COMPLAINT_SPECIFIC_DESCRIPTION>
                                            <xsl:value-of select="ns24:COMPLAINT_SPECIFIC_DESCRIPTION"/>
                                        </pfx26:COMPLAINT_SPECIFIC_DESCRIPTION>
                                    </xsl:if>
                                    <xsl:if test="ns24:COMPLAINT_STANDARD_DESCRIPTION">
                                        <pfx26:COMPLAINT_STANDARD_DESCRIPTION>
                                            <xsl:value-of select="ns24:COMPLAINT_STANDARD_DESCRIPTION"/>
                                        </pfx26:COMPLAINT_STANDARD_DESCRIPTION>
                                    </xsl:if>
                                    <xsl:if test="ns24:COMPLAINT_SUB_GROUP_CODE">
                                        <pfx26:COMPLAINT_SUB_GROUP_CODE>
                                            <xsl:value-of select="ns24:COMPLAINT_SUB_GROUP_CODE"/>
                                        </pfx26:COMPLAINT_SUB_GROUP_CODE>
                                    </xsl:if>
                                </pfx26:COMPLAINT_CATEGORY>
                            </xsl:for-each>
                            <xsl:for-each select="ns22:IDENTIFIED_CUSTOMER">
                                <pfx26:IDENTIFIED_CUSTOMER>
                                    <xsl:if test="ns25:CENTRAL_CUSTOMER_ID">
                                        <pfx26:CENTRAL_CUSTOMER_ID>
                                            <xsl:value-of select="ns25:CENTRAL_CUSTOMER_ID"/>
                                        </pfx26:CENTRAL_CUSTOMER_ID>
                                    </xsl:if>
                                    <xsl:if test="ns25:PARTY_NAME">
                                        <pfx26:PARTY_NAME>
                                            <xsl:value-of select="ns25:PARTY_NAME"/>
                                        </pfx26:PARTY_NAME>
                                    </xsl:if>
                                    <xsl:if test="ns25:TELECOM_DISTRICT_CODE">
                                        <pfx26:TELECOM_DISTRICT_CODE>
                                            <xsl:value-of select="ns25:TELECOM_DISTRICT_CODE"/>
                                        </pfx26:TELECOM_DISTRICT_CODE>
                                    </xsl:if>
                                    <xsl:if test="ns25:TELECOM_REGION_CODE">
                                        <pfx26:TELECOM_REGION_CODE>
                                            <xsl:value-of select="ns25:TELECOM_REGION_CODE"/>
                                        </pfx26:TELECOM_REGION_CODE>
                                    </xsl:if>
                                    <xsl:if test="ns25:STRATA_TELECOM_DISTRICT_CODE">
                                        <pfx26:STRATA_TELECOM_DISTRICT_CODE>
                                            <xsl:value-of select="ns25:STRATA_TELECOM_DISTRICT_CODE"/>
                                        </pfx26:STRATA_TELECOM_DISTRICT_CODE>
                                    </xsl:if>
                                    <xsl:for-each select="ns25:PARTY">
                                        <pfx26:PARTY>
                                            <xsl:if test="ns28:LEGAL_FORM_CODE">
                                                <pfx26:LEGAL_FORM_CODE>
                                                    <xsl:value-of select="ns28:LEGAL_FORM_CODE"/>
                                                </pfx26:LEGAL_FORM_CODE>
                                            </xsl:if>
                                        </pfx26:PARTY>
                                    </xsl:for-each>
                                    <xsl:for-each select="ns25:PROPERTY_ADDRESS">
                                        <pfx26:PROPERTY_ADDRESS>
                                            <xsl:if test="ns29:CITY_CODE">
                                                <pfx26:CITY_CODE>
                                                    <xsl:value-of select="ns29:CITY_CODE"/>
                                                </pfx26:CITY_CODE>
                                            </xsl:if>
                                            <xsl:if test="ns29:CITY_NAME">
                                                <pfx26:CITY_NAME>
                                                    <xsl:value-of select="ns29:CITY_NAME"/>
                                                </pfx26:CITY_NAME>
                                            </xsl:if>
                                            <xsl:if test="ns29:DUTCH_POSTCODE_LETTERS">
                                                <pfx26:DUTCH_POSTCODE_LETTERS>
                                                    <xsl:value-of select="ns29:DUTCH_POSTCODE_LETTERS"/>
                                                </pfx26:DUTCH_POSTCODE_LETTERS>
                                            </xsl:if>
                                            <xsl:if test="ns29:DUTCH_POSTCODE_NUMBERS">
                                                <pfx26:DUTCH_POSTCODE_NUMBERS>
                                                    <xsl:value-of select="ns29:DUTCH_POSTCODE_NUMBERS"/>
                                                </pfx26:DUTCH_POSTCODE_NUMBERS>
                                            </xsl:if>
                                            <xsl:if test="ns29:HOUSE_NUMBER">
                                                <pfx26:HOUSE_NUMBER>
                                                    <xsl:value-of select="ns29:HOUSE_NUMBER"/>
                                                </pfx26:HOUSE_NUMBER>
                                            </xsl:if>
                                            <xsl:if test="ns29:HOUSE_NUMBER_EXTENSION">
                                                <pfx26:HOUSE_NUMBER_EXTENSION>
                                                    <xsl:value-of select="ns29:HOUSE_NUMBER_EXTENSION"/>
                                                </pfx26:HOUSE_NUMBER_EXTENSION>
                                            </xsl:if>
                                            <xsl:if test="ns29:STREET_NAME">
                                                <pfx26:STREET_NAME>
                                                    <xsl:value-of select="ns29:STREET_NAME"/>
                                                </pfx26:STREET_NAME>
                                            </xsl:if>
                                        </pfx26:PROPERTY_ADDRESS>
                                    </xsl:for-each>
                                </pfx26:IDENTIFIED_CUSTOMER>
                            </xsl:for-each>
                            <xsl:for-each select="ns22:SERVICE_VISIT">
                                <pfx26:SERVICE_VISIT>
                                    <xsl:if test="ns26:START_DATE_TIME">
                                        <pfx26:START_DATE_TIME>
                                            <xsl:value-of select="ns26:START_DATE_TIME"/>
                                        </pfx26:START_DATE_TIME>
                                    </xsl:if>
                                    <xsl:if test="ns26:VISIT_WINDOW_START_TIME">
                                        <pfx26:VISIT_WINDOW_START_TIME>
                                            <xsl:value-of select="ns26:VISIT_WINDOW_START_TIME"/>
                                        </pfx26:VISIT_WINDOW_START_TIME>
                                    </xsl:if>
                                    <xsl:if test="ns26:VISIT_WINDOW_END_TIME">
                                        <pfx26:VISIT_WINDOW_END_TIME>
                                            <xsl:value-of select="ns26:VISIT_WINDOW_END_TIME"/>
                                        </pfx26:VISIT_WINDOW_END_TIME>
                                    </xsl:if>
                                    <xsl:if test="ns26:MM007_APPOINTMENT_OUTSIDE_CUSTOMER_NORM">
                                        <pfx26:MM007_APPOINTMENT_OUTSIDE_CUSTOMER_NORM>
                                            <xsl:value-of select="ns26:MM007_APPOINTMENT_OUTSIDE_CUSTOMER_NORM"/>
                                        </pfx26:MM007_APPOINTMENT_OUTSIDE_CUSTOMER_NORM>
                                    </xsl:if>
                                    <xsl:if test="ns26:MM007_APPOINTMENT_OUTSIDE_NORM_CALENDAR">
                                        <pfx26:MM007_APPOINTMENT_OUTSIDE_NORM_CALENDAR>
                                            <xsl:value-of select="ns26:MM007_APPOINTMENT_OUTSIDE_NORM_CALENDAR"/>
                                        </pfx26:MM007_APPOINTMENT_OUTSIDE_NORM_CALENDAR>
                                    </xsl:if>
                                    <xsl:if test="ns26:MM007_APPOINTMENT_PART_OF_DAY">
                                        <pfx26:MM007_APPOINTMENT_PART_OF_DAY>
                                            <xsl:value-of select="ns26:MM007_APPOINTMENT_PART_OF_DAY"/>
                                        </pfx26:MM007_APPOINTMENT_PART_OF_DAY>
                                    </xsl:if>
                                    <xsl:if test="ns26:MM007_RESEARCH_DEPARTMENT_CODE">
                                        <pfx26:MM007_RESEARCH_DEPARTMENT_CODE>
                                            <xsl:value-of select="ns26:MM007_RESEARCH_DEPARTMENT_CODE"/>
                                        </pfx26:MM007_RESEARCH_DEPARTMENT_CODE>
                                    </xsl:if>
                                    <xsl:if test="ns26:MM007_RESEARCH_EMPLOYEE_CODE">
                                        <pfx26:MM007_RESEARCH_EMPLOYEE_CODE>
                                            <xsl:value-of select="ns26:MM007_RESEARCH_EMPLOYEE_CODE"/>
                                        </pfx26:MM007_RESEARCH_EMPLOYEE_CODE>
                                    </xsl:if>
                                    <xsl:if test="ns26:RESEARCH_AGENCY_CODE">
                                        <pfx26:RESEARCH_AGENCY_CODE>
                                            <xsl:value-of select="ns26:RESEARCH_AGENCY_CODE"/>
                                        </pfx26:RESEARCH_AGENCY_CODE>
                                    </xsl:if>
                                    <xsl:if test="ns26:APPOINTMENT_WITHIN_NORM">
                                        <pfx26:APPOINTMENT_WITHIN_NORM>
                                            <xsl:value-of select="ns26:APPOINTMENT_WITHIN_NORM"/>
                                        </pfx26:APPOINTMENT_WITHIN_NORM>
                                    </xsl:if>
                                </pfx26:SERVICE_VISIT>
                            </xsl:for-each>
                            <xsl:for-each select="ns22:WORK_ORDER">
                                <pfx26:WORK_ORDER>
                                    <xsl:if test="ns27:WORK_ORDER_ACTUAL_END_DATETIME">
                                        <pfx26:WORK_ORDER_ACTUAL_END_DATETIME>
                                            <xsl:value-of select="ns27:WORK_ORDER_ACTUAL_END_DATETIME"/>
                                        </pfx26:WORK_ORDER_ACTUAL_END_DATETIME>
                                    </xsl:if>
                                    <xsl:if test="ns27:WORK_ORDER_ACTUAL_START_DATETIME">
                                        <pfx26:WORK_ORDER_ACTUAL_START_DATETIME>
                                            <xsl:value-of select="ns27:WORK_ORDER_ACTUAL_START_DATETIME"/>
                                        </pfx26:WORK_ORDER_ACTUAL_START_DATETIME>
                                    </xsl:if>
                                    <xsl:if test="ns27:WORK_ORDER_COMPLETION_DATETIME">
                                        <pfx26:WORK_ORDER_COMPLETION_DATETIME>
                                            <xsl:value-of select="ns27:WORK_ORDER_COMPLETION_DATETIME"/>
                                        </pfx26:WORK_ORDER_COMPLETION_DATETIME>
                                    </xsl:if>
                                    <xsl:if test="ns27:WORK_ORDER_ISSUE_DATETIME">
                                        <pfx26:WORK_ORDER_ISSUE_DATETIME>
                                            <xsl:value-of select="ns27:WORK_ORDER_ISSUE_DATETIME"/>
                                        </pfx26:WORK_ORDER_ISSUE_DATETIME>
                                    </xsl:if>
                                    <xsl:if test="ns27:PRV_WORK_ORDER_ISSUE_DATETIME">
                                        <pfx26:PRV_WORK_ORDER_ISSUE_DATETIME>
                                            <xsl:value-of select="ns27:PRV_WORK_ORDER_ISSUE_DATETIME"/>
                                        </pfx26:PRV_WORK_ORDER_ISSUE_DATETIME>
                                    </xsl:if>
                                </pfx26:WORK_ORDER>
                            </xsl:for-each>
                        </pfx26:Ticket>
                    </xsl:for-each>
                </pfx26:TicketList>
            </pfx26:GetTicketsResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="FillCMH">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>354</pd:x>
        <pd:y>471</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_FillCMH.process</processName>
        </config>
        <pd:inputBindings>
            <CMH-IN>
                <ExistingCMH>
                    <COMPONENT-ID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentId"/>
                    </COMPONENT-ID>
                    <COMPONENT-VERSION>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentVersion"/>
                    </COMPONENT-VERSION>
                    <COPY_ATTRIBUTES>
                        <xsl:value-of select="&quot;true&quot;"/>
                    </COPY_ATTRIBUTES>
                    <EXTENT_TRACKING>
                        <xsl:value-of select="&quot;false&quot;"/>
                    </EXTENT_TRACKING>
                    <CMH>
                        <ns1:ID>
                            <xsl:value-of select="&quot;005&quot;"/>
                        </ns1:ID>
                        <ns1:NAME>
                            <xsl:value-of select="&quot;GetTickets&quot;"/>
                        </ns1:NAME>
                        <ns1:FID>
                            <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:customerRefNo"/>
                        </ns1:FID>
                        <ns1:MID>
                            <xsl:value-of select="&quot;005.10&quot;"/>
                        </ns1:MID>
                        <ns1:PARADIGM>
                            <xsl:value-of select="&quot;REQUEST&quot;"/>
                        </ns1:PARADIGM>
                        <ns1:OBJECT>
                            <xsl:value-of select="&quot;CO_GetTickets&quot;"/>
                        </ns1:OBJECT>
                        <ns1:VERSION>
                            <xsl:value-of select="&quot;1.0&quot;"/>
                        </ns1:VERSION>
                        <ns1:FROM>
                            <xsl:attribute name="ns1:COMPONENT_ID">
                                <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentId"/>
                            </xsl:attribute>
                            <xsl:attribute name="ns1:COMPONENT_VERSION">
                                <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentVersion"/>
                            </xsl:attribute>
                        </ns1:FROM>
                        <ns1:TO>
                            <xsl:attribute name="ns1:DESTINATION">
                                <xsl:value-of select="concat($_globalVariables/ns8:GlobalVariables/Env, '.FIXED.Order.EnginAdapter.Request.GetTickets.1')"/>
                            </xsl:attribute>
                        </ns1:TO>
                        <ns1:TRACKING>
                            <ns1:MESSAGE_ID>
                                <xsl:value-of select="eai:createGUID()"/>
                            </ns1:MESSAGE_ID>
                            <ns1:ITEM>
                                <xsl:attribute name="ns1:APPINFO">
                                    <xsl:value-of select="concat($_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentDomain,&quot;.&quot;,$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentId)"/>
                                </xsl:attribute>
                                <xsl:attribute name="ns1:EVENT">
                                    <xsl:value-of select="&quot;GetTickets&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="ns1:TIMESTAMP">
                                    <xsl:value-of select="ns0:timestamp()"/>
                                </xsl:attribute>
                            </ns1:ITEM>
                        </ns1:TRACKING>
                        <ns1:ATTRIBUTE>
                            <xsl:attribute name="ns1:NAME">
                                <xsl:value-of select="&quot;maxNumberReturned&quot;"/>
                            </xsl:attribute>
                            <xsl:attribute name="ns1:VALUE">
                                <xsl:value-of select="&quot;10&quot;"/>
                            </xsl:attribute>
                        </ns1:ATTRIBUTE>
                    </CMH>
                </ExistingCMH>
            </CMH-IN>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogSOAPErrReply">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>878</pd:x>
        <pd:y>466</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_LogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <LogMessage_In>
                <MsgCode>
                    <xsl:value-of select="&quot;EAI-04005&quot;"/>
                </MsgCode>
                <Message>
                    <xsl:value-of select="concat(&quot;Sending SOAP response for port &quot;,$_globalVariables/ns8:GlobalVariables/EDTAdapter/Outbound/SOAP/ServerPort)"/>
                </Message>
                <ExtraInfo>
                    <xsl:copy-of select="$MapSoapErrReply/pfx4:ErrorMessage"/>
                </ExtraInfo>
            </LogMessage_In>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapSoapErrReply">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>756</pd:x>
        <pd:y>469</pd:y>
        <config>
            <element ref="pfx4:ErrorMessage"/>
        </config>
        <pd:inputBindings>
            <pfx4:ErrorMessage>
                <xsl:choose>
                    <xsl:when test="exists($Send-Rendezvous-Request)">
                        <xsl:copy-of select="$Send-Rendezvous-Request/ActivityOutput/body/ns1:CMH"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:choose>
                            <xsl:when test="exists($FillCMH)">
                                <ns1:CMH>
                                    <xsl:copy-of select="$FillCMH/CMH/ancestor-or-self::*/namespace::node()"/>
                                    <xsl:copy-of select="$FillCMH/CMH/@*"/>
                                    <xsl:copy-of select="$FillCMH/CMH/node()"/>
                                </ns1:CMH>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns1:CMH>
                                    <xsl:copy-of select="$FillCMH-MM007Light/CMH/ancestor-or-self::*/namespace::node()"/>
                                    <xsl:copy-of select="$FillCMH-MM007Light/CMH/@*"/>
                                    <xsl:copy-of select="$FillCMH-MM007Light/CMH/node()"/>
                                </ns1:CMH>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:otherwise>
                </xsl:choose>
                <pfx4:RESULT_STATUS>
                    <xsl:copy-of select="$Log-Error/ResultStatus/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$Log-Error/ResultStatus/@*"/>
                    <xsl:copy-of select="$Log-Error/ResultStatus/node()"/>
                </pfx4:RESULT_STATUS>
            </pfx4:ErrorMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SoapEventError">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>215</pd:x>
        <pd:y>411</pd:y>
        <config>
            <element>
                <xsd:element name="DUMMY">
                    <xsd:complexType>
                        <xsd:sequence/>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <DUMMY/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send Rendezvous Request">
        <pd:type>com.tibco.plugin.tibrv.RVRequestActivity</pd:type>
        <pd:resourceType>ae.rvpalette.RVRequestActivity</pd:resourceType>
        <pd:x>396</pd:x>
        <pd:y>626</pd:y>
        <config>
            <wantsValidationForOutput>true</wantsValidationForOutput>
            <wantsFiltrationForOutput>false</wantsFiltrationForOutput>
            <wantsXMLCompliantFieldNames>false</wantsXMLCompliantFieldNames>
            <wantsXMLCompliantFieldNamesOutput>false</wantsXMLCompliantFieldNamesOutput>
            <sharedChannel>/EDTAdapter/Shared Resources/RV Transport.rvtransport</sharedChannel>
            <subject>%%Env%%.FIXED.Order.EnginAdapter.Request.GetTickets.1</subject>
            <operationTimeout>60000</operationTimeout>
            <xmlEncoding>true</xmlEncoding>
            <inputXsdString ref="pfx27:GetTickets"/>
            <outputXsdString ref="pfx28:GetTickets"/>
        </config>
        <pd:inputBindings>
            <ActivityInput>
                <body>
                    <ns1:CMH>
                        <xsl:copy-of select="$FillCMH/CMH/ancestor-or-self::*/namespace::node()"/>
                        <xsl:copy-of select="$FillCMH/CMH/@*"/>
                        <xsl:copy-of select="$FillCMH/CMH/node()"/>
                    </ns1:CMH>
                    <xsl:if test="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:activeTickets">
                        <ACTIVE_TICKETS>
                            <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:activeTickets"/>
                        </ACTIVE_TICKETS>
                    </xsl:if>
                    <xsl:if test="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:historicalTickets">
                        <HISTORICAL_TICKETS>
                            <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:historicalTickets"/>
                        </HISTORICAL_TICKETS>
                    </xsl:if>
                    <xsl:if test="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:streetName">
                        <STREET_NAME>
                            <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:streetName"/>
                        </STREET_NAME>
                    </xsl:if>
                    <xsl:if test="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:cityName">
                        <CITY_NAME>
                            <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:cityName"/>
                        </CITY_NAME>
                    </xsl:if>
                    <xsl:if test="exists($SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:fromDate) &#xA;and &#xA;$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:fromDate !=&quot;&quot;">
                        <FROM_DATE>
                            <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:fromDate"/>
                        </FROM_DATE>
                    </xsl:if>
                    <xsl:if test="exists($SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:untilDate)&#xA;and &#xA;$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:untilDate !=&quot;&quot;">
                        <UNTIL_DATE>
                            <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:untilDate"/>
                        </UNTIL_DATE>
                    </xsl:if>
                    <xsl:if test="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:customerRefNo">
                        <CUSTOMER_REF_NO>
                            <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:customerRefNo"/>
                        </CUSTOMER_REF_NO>
                    </xsl:if>
                </body>
            </ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SOAPSendFault">
        <pd:type>com.tibco.plugin.soap.SOAPSendFaultActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendFaultUI</pd:resourceType>
        <pd:x>1023</pd:x>
        <pd:y>459</pd:y>
        <config>
            <faultMessage>&lt;Default&gt;</faultMessage>
            <eventSource>SOAPEventSource</eventSource>
        </config>
        <pd:inputBindings>
            <defaultFaultElement>
                <faultcode>
                    <xsl:value-of select="$MapSoapErrReply/pfx4:ErrorMessage/pfx4:RESULT_STATUS/@ns6:ERROR_CODE"/>
                </faultcode>
                <faultstring>
                    <xsl:value-of select="$MapSoapErrReply/pfx4:ErrorMessage/pfx4:RESULT_STATUS/@ns6:ERROR_DESCRIPTION"/>
                </faultstring>
            </defaultFaultElement>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null-1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>302</pd:x>
        <pd:y>306</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Map Data MM007Light">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>446</pd:x>
        <pd:y>254</pd:y>
        <config>
            <element ref="pfx29:GetTickets"/>
        </config>
        <pd:inputBindings>
            <pfx29:GetTickets>
                <ns1:CMH>
                    <xsl:copy-of select="$FillCMH-MM007Light/CMH/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$FillCMH-MM007Light/CMH/@*"/>
                    <xsl:copy-of select="$FillCMH-MM007Light/CMH/node()"/>
                </ns1:CMH>
                <pfx29:ENGIN>
                    <pfx29:HDR-SW-0101>
                        <ns46:AFZENDER_APPLICATIE>
                            <xsl:value-of select="&quot;KSD&quot;"/>
                        </ns46:AFZENDER_APPLICATIE>
                    </pfx29:HDR-SW-0101>
                    <pfx29:KLASEL_S-0100>
                        <ns30:ACTUELE_KLACHTEN>
                            <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:activeTickets"/>
                        </ns30:ACTUELE_KLACHTEN>
                        <ns30:HISTORISCHE_KLACHTEN>
                            <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:historicalTickets"/>
                        </ns30:HISTORISCHE_KLACHTEN>
                        <xsl:if test="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:customerRefNo !=&quot;&quot;">
                            <ns30:KLANTORDER_NUMMER>
                                <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:customerRefNo"/>
                            </ns30:KLANTORDER_NUMMER>
                        </xsl:if>
                        <ns30:STRAATNAAM>
                            <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:streetName"/>
                        </ns30:STRAATNAAM>
                        <xsl:if test="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:fromDate !=&quot;&quot;">
                            <ns30:DATUM_VAN>
                                <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:fromDate"/>
                            </ns30:DATUM_VAN>
                        </xsl:if>
                        <xsl:if test="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:untilDate !=&quot;&quot;">
                            <ns30:DATUM_TOT_EN_MET>
                                <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:untilDate"/>
                            </ns30:DATUM_TOT_EN_MET>
                        </xsl:if>
                        <ns30:PLAATSNAAM>
                            <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:cityName"/>
                        </ns30:PLAATSNAAM>
                    </pfx29:KLASEL_S-0100>
                </pfx29:ENGIN>
            </pfx29:GetTickets>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogRvRequest">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>595</pd:x>
        <pd:y>147</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_LogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <LogMessage_In>
                <MsgCode>
                    <xsl:value-of select="&quot;EAI-04010&quot;"/>
                </MsgCode>
                <Message>
                    <xsl:value-of select="concat(&quot;Send rv-request MM007Light&quot;,$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentDomain&#xA;, &quot; &quot;&#xA;, $_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentId&#xA;, $_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentVersion)"/>
                </Message>
                <ExtraInfo>
                    <xsl:copy-of select="$Map-Data-MM007Light/pfx29:GetTickets"/>
                </ExtraInfo>
            </LogMessage_In>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send-Rv-Request MM007Light">
        <pd:type>com.tibco.plugin.tibrv.RVRequestActivity</pd:type>
        <pd:resourceType>ae.rvpalette.RVRequestActivity</pd:resourceType>
        <pd:x>575</pd:x>
        <pd:y>282</pd:y>
        <config>
            <wantsValidationForOutput>true</wantsValidationForOutput>
            <wantsFiltrationForOutput>false</wantsFiltrationForOutput>
            <wantsXMLCompliantFieldNames>false</wantsXMLCompliantFieldNames>
            <wantsXMLCompliantFieldNamesOutput>false</wantsXMLCompliantFieldNamesOutput>
            <sharedChannel>/EDTAdapter/Shared Resources/RV Transport.rvtransport</sharedChannel>
            <subject>%%Env%%.FIXED.Operations.ASTRIDAdapter.Request.GetTickets.1</subject>
            <operationTimeout>%%EDTAdapter/EnginAdapter/TimeOut%%</operationTimeout>
            <xmlEncoding>true</xmlEncoding>
            <inputXsdString ref="pfx29:GetTickets"/>
            <outputXsdString ref="pfx30:GetTickets"/>
        </config>
        <pd:inputBindings>
            <ActivityInput>
                <body>
                    <xsl:copy-of select="$Map-Data-MM007Light/pfx29:GetTickets/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$Map-Data-MM007Light/pfx29:GetTickets/@*"/>
                    <xsl:copy-of select="$Map-Data-MM007Light/pfx29:GetTickets/node()"/>
                </body>
            </ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogRvReply">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>770</pd:x>
        <pd:y>200</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_LogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <LogMessage_In>
                <MsgCode>
                    <xsl:value-of select="&quot;EAI-04011&quot;"/>
                </MsgCode>
                <Message>
                    <xsl:value-of select="concat(&quot;Receive rv-repley EnginAdapter&quot;,$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentDomain&#xA;, &quot; &quot;&#xA;, $_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentId&#xA;, $_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentVersion)"/>
                </Message>
                <ExtraInfo>
                    <xsl:copy-of select="$Send-Rv-Request-MM007Light/ActivityOutput"/>
                </ExtraInfo>
            </LogMessage_In>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="MapSoapReply MM007Light">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>838</pd:x>
        <pd:y>292</pd:y>
        <config>
            <element ref="pfx26:GetTicketsResponse"/>
        </config>
        <pd:inputBindings>
            <pfx26:GetTicketsResponse>
                <pfx26:GUID>
                    <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:GUID"/>
                </pfx26:GUID>
                <pfx26:TicketList>
                    <xsl:for-each select="$Send-Rv-Request-MM007Light/ActivityOutput/body/pfx30:ENGIN/pfx30:Loop">
                        <pfx26:Ticket>
                            <xsl:if test="exists(current()/pfx30:MELD_S-0100/ns31:AANNAME_DATUM)&#xA;and not ( empty(current()/pfx30:MELD_S-0100/ns31:AANNAME_DATUM) )&#xA;and not ( current()/pfx30:MELD_S-0100/ns31:AANNAME_DATUM = &quot;&quot;)">
                                <pfx26:ACCEPT_DATE_TIME>
                                    <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:AANNAME_DATUM"/>
                                </pfx26:ACCEPT_DATE_TIME>
                            </xsl:if>
                            <pfx26:ANALYSIS_INFORMATION>
                                <xsl:value-of select="current()/pfx30:MEET_S-0100/ns43:MEETGEGEVENS_2"/>
                            </pfx26:ANALYSIS_INFORMATION>
                            <pfx26:ANALYSIS_INFORMATION_SUMMARY>
                                <xsl:value-of select="current()/pfx30:MEET_S-0100/ns43:MEETGEGEVENS_1"/>
                            </pfx26:ANALYSIS_INFORMATION_SUMMARY>
                            <pfx26:ANALYST_ID>
                                <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:ANALIST_CODE"/>
                            </pfx26:ANALYST_ID>
                            <pfx26:APPOINTMENT_ENGINEER_AREA>
                                <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_ONDERZOEKER_WERKGEBIED"/>
                            </pfx26:APPOINTMENT_ENGINEER_AREA>
                            <xsl:if test="exists(current()/pfx30:MELD_S-0100/ns31:DATUM_WAAROP_STATUS_VERKREGEN_IS)&#xA;and not( empty(current()/pfx30:MELD_S-0100/ns31:DATUM_WAAROP_STATUS_VERKREGEN_IS) )&#xA;and not( current()/pfx30:MELD_S-0100/ns31:DATUM_WAAROP_STATUS_VERKREGEN_IS = &quot;&quot;)">
                                <pfx26:ASSIGNED_DATE_TIME>
                                    <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:DATUM_WAAROP_STATUS_VERKREGEN_IS"/>
                                </pfx26:ASSIGNED_DATE_TIME>
                            </xsl:if>
                            <xsl:if test="exists(current()/pfx30:WERK_S-0100/ns34:DATUM_EINDE_WERKZAAMHEDEN)&#xA;and not (empty(current()/pfx30:WERK_S-0100/ns34:DATUM_EINDE_WERKZAAMHEDEN))&#xA;and not( current()/pfx30:WERK_S-0100/ns34:DATUM_EINDE_WERKZAAMHEDEN = &quot;&quot;)">
                                <pfx26:CLOSED_DATE>
                                    <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:DATUM_EINDE_WERKZAAMHEDEN"/>
                                </pfx26:CLOSED_DATE>
                            </xsl:if>
                            <pfx26:CLOSURE_REPORT_CODE>
                                <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:RAPPORTAGE_CODE"/>
                            </pfx26:CLOSURE_REPORT_CODE>
                            <xsl:if test="exists(current()/pfx30:VOROND_S-0100/ns44:DATUM_AANVANG_WERKZAAMHEDEN)&#xA;and not (empty(current()/pfx30:VOROND_S-0100/ns44:DATUM_AANVANG_WERKZAAMHEDEN))&#xA;and not( current()/pfx30:VOROND_S-0100/ns44:DATUM_AANVANG_WERKZAAMHEDEN = &quot;&quot;)">
                                <pfx26:CREATED_ON_DATE>
                                    <xsl:value-of select="current()/pfx30:VOROND_S-0100/ns44:DATUM_AANVANG_WERKZAAMHEDEN"/>
                                </pfx26:CREATED_ON_DATE>
                            </xsl:if>
                            <xsl:if test="exists(current()/pfx30:WERK_S-0100/ns34:DATUM_GEREEDMELDEN_KLACHT)&#xA;and not (empty(current()/pfx30:WERK_S-0100/ns34:DATUM_GEREEDMELDEN_KLACHT))&#xA;and not( current()/pfx30:WERK_S-0100/ns34:DATUM_GEREEDMELDEN_KLACHT = &quot;&quot;)">
                                <pfx26:CUSTOMER_ACK_COMPLETE_DATETIME>
                                    <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:DATUM_GEREEDMELDEN_KLACHT"/>
                                </pfx26:CUSTOMER_ACK_COMPLETE_DATETIME>
                            </xsl:if>
                            <pfx26:EMPLOYEE_LOGIN_NAME>
                                <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:NAAM_VAN_GEBRUIKER_DIE_KLACHT_AANNEEMT"/>
                            </pfx26:EMPLOYEE_LOGIN_NAME>
                            <pfx26:EXTERNAL_CUSTOMER_REF_NO>
                                <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:EXTERN_KLANTORDER_NUMMER"/>
                            </pfx26:EXTERNAL_CUSTOMER_REF_NO>
                            <pfx26:FORMULA_ID>
                                <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:FORMULE"/>
                            </pfx26:FORMULA_ID>
                            <pfx26:ISDN_SUB_NUMBER>
                                <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:ONDERNUMMER"/>
                            </pfx26:ISDN_SUB_NUMBER>
                            <pfx26:MM007C_TROUBLE_URGENCY_FLAG>
                                <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:URGENTIE_DOOR_KLANT_AANGEGEVEN_OMSCHRIJVING"/>
                            </pfx26:MM007C_TROUBLE_URGENCY_FLAG>
                            <pfx26:MM007C_TROUBLE_URGENCY_ID>
                                <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:URGENTIE_DOOR_KLANT_AANGEGEVEN_CODE"/>
                            </pfx26:MM007C_TROUBLE_URGENCY_ID>
                            <pfx26:MM007R_PRODUCT_TYPE_DESCRIPTION>
                                <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:TYPE_PRODUCT_ID_OMSCHRIJVING"/>
                            </pfx26:MM007R_PRODUCT_TYPE_DESCRIPTION>
                            <pfx26:MM007_ANALYST_TEXT>
                                <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:ANALIST_OMSCHRIJVING"/>
                            </pfx26:MM007_ANALYST_TEXT>
                            <xsl:if test="exists(current()/pfx30:VERPL_S-0100/ns35:KLACHT_1E_AFSPRAAK_DATUM)&#xA;and not (empty(current()/pfx30:VERPL_S-0100/ns35:KLACHT_1E_AFSPRAAK_DATUM))&#xA;and not(current()/pfx30:VERPL_S-0100/ns35:KLACHT_1E_AFSPRAAK_DATUM = &quot;&quot;)">
                                <pfx26:MM007_APPOINTMENT_DT>
                                    <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:KLACHT_1E_AFSPRAAK_DATUM"/>
                                </pfx26:MM007_APPOINTMENT_DT>
                            </xsl:if>
                            <pfx26:MM007_APPOINTMENT_ORG_TEXT>
                                <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_ORGANISATIE_OMSCHRIJVING"/>
                            </pfx26:MM007_APPOINTMENT_ORG_TEXT>
                            <pfx26:MM007_BAAN_CONTRACT_ID>
                                <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:CONTRACT_IDENTIFICATIE_NUMMER_PAKKET"/>
                            </pfx26:MM007_BAAN_CONTRACT_ID>
                            <xsl:if test="exists(current()/pfx30:VERPL_S-0100/ns35:CONTRACT_DATUM_IN_DIENST)&#xA;and not (empty(current()/pfx30:VERPL_S-0100/ns35:CONTRACT_DATUM_IN_DIENST))&#xA;and not(current()/pfx30:VERPL_S-0100/ns35:CONTRACT_DATUM_IN_DIENST = &quot;&quot;)">
                                <pfx26:MM007_CONTRACT_BEGIN_DT>
                                    <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:CONTRACT_DATUM_IN_DIENST"/>
                                </pfx26:MM007_CONTRACT_BEGIN_DT>
                            </xsl:if>
                            <pfx26:MM007_CONTRACT_CODE>
                                <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:CONTRACT_SOORT"/>
                            </pfx26:MM007_CONTRACT_CODE>
                            <pfx26:MM007_CONTRACT_HALFHOUR_IND>
                                <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:CONTRACT_HALFUUR_INDICATOR"/>
                            </pfx26:MM007_CONTRACT_HALFHOUR_IND>
                            <pfx26:MM007_CUSTOMER_ACCEPTS_COSTS>
                                <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:KOSTEN_AKKOORD_"/>
                            </pfx26:MM007_CUSTOMER_ACCEPTS_COSTS>
                            <pfx26:MM007_CUSTOMER_CONTRACT_COUNT>
                                <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:AANTAL_CONTRACTEN"/>
                            </pfx26:MM007_CUSTOMER_CONTRACT_COUNT>
                            <pfx26:MM007_DISPATCH_SYSTEM>
                                <xsl:value-of select="current()/pfx30:TECH_S-0100/ns39:AFHANDELEND_SYSTEEM"/>
                            </pfx26:MM007_DISPATCH_SYSTEM>
                            <pfx26:MM007_ENGINEER_WILL_VISIT_CUSTOMER>
                                <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:INDICATIE_WEL_GEEN_BEZOEK_BIJ_AFSPRAAK"/>
                            </pfx26:MM007_ENGINEER_WILL_VISIT_CUSTOMER>
                            <pfx26:MM007_ORDER_TYPE_ABBREVIATION>
                                <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:ORDER_TYPE_AFKORTING"/>
                            </pfx26:MM007_ORDER_TYPE_ABBREVIATION>
                            <pfx26:MM007_OWNED_TROUBLE_REPORT>
                                <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:INDICATIE_OF_HET_EEN_BSD_MELDING_BETREFT"/>
                            </pfx26:MM007_OWNED_TROUBLE_REPORT>
                            <xsl:if test="exists(current()/pfx30:VERPL_S-0100/ns35:KLACHT_1E_DAGDEEL_VAN)&#xA;and not (empty(current()/pfx30:VERPL_S-0100/ns35:KLACHT_1E_DAGDEEL_VAN))&#xA;and not( current()/pfx30:VERPL_S-0100/ns35:KLACHT_1E_DAGDEEL_VAN = &quot;&quot;)">
                                <pfx26:MM007_PART_OF_DAY_BEGIN_TM>
                                    <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:KLACHT_1E_DAGDEEL_VAN"/>
                                </pfx26:MM007_PART_OF_DAY_BEGIN_TM>
                            </xsl:if>
                            <pfx26:MM007_PART_OF_DAY_CODE>
                                <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:KLACHT_1E_DAGDEEL_CODE"/>
                            </pfx26:MM007_PART_OF_DAY_CODE>
                            <xsl:if test="exists(current()/pfx30:VERPL_S-0100/ns35:KLACHT_1E_DAGDEEL_TOT)&#xA;and not (empty(current()/pfx30:VERPL_S-0100/ns35:KLACHT_1E_DAGDEEL_TOT))&#xA;and not(current()/pfx30:VERPL_S-0100/ns35:KLACHT_1E_DAGDEEL_TOT = &quot;&quot;)">
                                <pfx26:MM007_PART_OF_DAY_END_TM>
                                    <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:KLACHT_1E_DAGDEEL_TOT"/>
                                </pfx26:MM007_PART_OF_DAY_END_TM>
                            </xsl:if>
                            <pfx26:MM007_PART_OF_DAY_ORG_CODE>
                                <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:KLACHT_1E_ORGANISATIE_CODE_TBV_DDE"/>
                            </pfx26:MM007_PART_OF_DAY_ORG_CODE>
                            <pfx26:MM007_PRODUCT_CATEGORY_ID>
                                <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:PRODUCT_CATEGORIE_OMSCHRIJVING"/>
                            </pfx26:MM007_PRODUCT_CATEGORY_ID>
                            <pfx26:MM007_PRODUCT_ID>
                                <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:PRODUCT_ID"/>
                            </pfx26:MM007_PRODUCT_ID>
                            <xsl:if test="exists(current()/pfx30:KLACHT_S-0102/ns33:PRODUCTSOORT_CODE)&#xA;and not (empty(current()/pfx30:KLACHT_S-0102/ns33:PRODUCTSOORT_CODE))">
                                <pfx26:MM007_PRODUCT_TYPE_CODE>
                                    <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:PRODUCTSOORT_CODE"/>
                                </pfx26:MM007_PRODUCT_TYPE_CODE>
                            </xsl:if>
                            <pfx26:MM007_PRODUCT_TYPE_CODE_1>
                                <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:KLACHT_1E_PRODUCTSOORT_CODE"/>
                            </pfx26:MM007_PRODUCT_TYPE_CODE_1>
                            <pfx26:MM007_PRODUCT_TYPE_DESCRIPTION>
                                <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:PRODUCTSOORT_OMSCHRIJVING"/>
                            </pfx26:MM007_PRODUCT_TYPE_DESCRIPTION>
                            <pfx26:MM007_PRODUCT_TYPE_DESCRIPTION_1>
                                <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:KLACHT_1E_PRODUCTSOORT_OMSCHRIJVING"/>
                            </pfx26:MM007_PRODUCT_TYPE_DESCRIPTION_1>
                            <pfx26:MM007_PRODUCT_TYPE_ID>
                                <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:TYPE_PRODUCT_ID"/>
                            </pfx26:MM007_PRODUCT_TYPE_ID>
                            <pfx26:MM007_REGION_ID_SEQ_NUMBER>
                                <xsl:value-of select="current()/pfx30:STRBOX_S-0100/ns41:STRATA_IDENTIFICATIE_REGIOVOLGNUMMER"/>
                            </pfx26:MM007_REGION_ID_SEQ_NUMBER>
                            <pfx26:MM007_REPAIR_REMARKS>
                                <xsl:value-of select="current()/pfx30:STRBOX_S-0100/ns41:STRATA_BIJZONDERHEDEN"/>
                            </pfx26:MM007_REPAIR_REMARKS>
                            <xsl:if test="current()/pfx30:MELD_S-0100/ns31:IDENTIFICATIE_VAN_DE_MELDING">
                                <pfx26:MM007_REPORT_KEY>
                                    <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:IDENTIFICATIE_VAN_DE_MELDING"/>
                                </pfx26:MM007_REPORT_KEY>
                            </xsl:if>
                            <pfx26:MM007_RESEARCH_AREA>
                                <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:ONDERZOEKER_WERKGEBIED"/>
                            </pfx26:MM007_RESEARCH_AREA>
                            <pfx26:MM007_RESEARCH_DEPARTMENT_CODE>
                                <xsl:value-of select="current()/pfx30:VOROND_S-0100/ns44:VORIGE_ONDERZOEKER_AFDELING"/>
                            </pfx26:MM007_RESEARCH_DEPARTMENT_CODE>
                            <pfx26:MM007_RESEARCH_EMPLOYEE_CODE>
                                <xsl:value-of select="current()/pfx30:VOROND_S-0100/ns44:VORIGE_ONDERZOEKER_NUMMER"/>
                            </pfx26:MM007_RESEARCH_EMPLOYEE_CODE>
                            <pfx26:MM007_ROUTED_TO>
                                <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:ROUTEREN_NAAR"/>
                            </pfx26:MM007_ROUTED_TO>
                            <pfx26:MM007_SERVICE_HOURS_CODE>
                                <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:CONTRACT_WERKTIJD_CODE"/>
                            </pfx26:MM007_SERVICE_HOURS_CODE>
                            <pfx26:MM007_SERVICE_ID>
                                <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:LEIDENDE_SERVICE_ID"/>
                            </pfx26:MM007_SERVICE_ID>
                            <pfx26:MM007_SERVICE_PHONE_NUMBER>
                                <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:TELEFOONNUMMER"/>
                            </pfx26:MM007_SERVICE_PHONE_NUMBER>
                            <pfx26:MM007_SERVICE_RESPONSE_WINDOW>
                                <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:CONTRACT_RESPONSE_UREN"/>
                            </pfx26:MM007_SERVICE_RESPONSE_WINDOW>
                            <pfx26:MM007_SOURCE>
                                <xsl:value-of select="current()/pfx30:TECH_S-0100/ns39:BRONSYSTEEM_ORDER_REFERENTIE"/>
                            </pfx26:MM007_SOURCE>
                            <pfx26:MM007_SPECIFY_DEFAULT_ANALIST>
                                <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:BEPAAL_DEFAULT_ANALIST"/>
                            </pfx26:MM007_SPECIFY_DEFAULT_ANALIST>
                            <pfx26:MM007_STRATA_NAME>
                                <xsl:value-of select="current()/pfx30:STRBOX_S-0100/ns41:STRATA_NAAM"/>
                            </pfx26:MM007_STRATA_NAME>
                            <pfx26:MM007_STRATA_SEQ_NUMBER>
                                <xsl:value-of select="current()/pfx30:STRBOX_S-0100/ns41:STRATA_VOLGNUMMER"/>
                            </pfx26:MM007_STRATA_SEQ_NUMBER>
                            <pfx26:MM007_SUBSCRIBED_TO_NOTIFICATIONS>
                                <xsl:value-of select="current()/pfx30:TECH_S-0100/ns39:ABONNEMENT_OP_VOORTGANGSINFORMATIE"/>
                            </pfx26:MM007_SUBSCRIBED_TO_NOTIFICATIONS>
                            <pfx26:MM007_TARGET>
                                <xsl:value-of select="current()/pfx30:TECH_S-0100/ns39:DOELSYSTEEM_ORDER_REFERENTIE"/>
                            </pfx26:MM007_TARGET>
                            <pfx26:MM007_TROUBLE_CAUSE_CODE>
                                <xsl:value-of select="current()/pfx30:STRBOX_S-0100/ns41:STRATA_OORZAAK_GEVONDEN_INDICATOR"/>
                            </pfx26:MM007_TROUBLE_CAUSE_CODE>
                            <pfx26:MM007_TROUBLE_URGENCY_FLAG>
                                <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:URGENTIE_MAJOR_MINOR_INDICATIE"/>
                            </pfx26:MM007_TROUBLE_URGENCY_FLAG>
                            <pfx26:MM007_TROUBLE_URGENCY_ID>
                                <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:URGENTIE_CODE"/>
                            </pfx26:MM007_TROUBLE_URGENCY_ID>
                            <pfx26:MM007_VISIT_IND_1>
                                <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:KLACHT_INDICATIE_1E_BEZOEK_BIJ_AFSPRAAK"/>
                            </pfx26:MM007_VISIT_IND_1>
                            <pfx26:MM007_WORK_AREA_CODE>
                                <xsl:value-of select="current()/pfx30:STRBOX_S-0100/ns41:STRATA_WERKVELD_CODE"/>
                            </pfx26:MM007_WORK_AREA_CODE>
                            <xsl:if test="exists(current()/pfx30:WERK_S-0100/ns34:DATUM_TERUGMELDEN_KLACHT)&#xA;and not (empty(current()/pfx30:WERK_S-0100/ns34:DATUM_TERUGMELDEN_KLACHT))&#xA;and not( current()/pfx30:WERK_S-0100/ns34:DATUM_TERUGMELDEN_KLACHT = &quot;&quot;)">
                                <pfx26:NOTIFICATION_COMPLETE_DATETIME>
                                    <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:DATUM_TERUGMELDEN_KLACHT"/>
                                </pfx26:NOTIFICATION_COMPLETE_DATETIME>
                            </xsl:if>
                            <xsl:if test="exists(current()/pfx30:MELD_S-0100/ns31:VORIGE_STATUS)">
                                <pfx26:PRV_TROUBLE_STATUS_CODE>
                                    <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:VORIGE_STATUS"/>
                                </pfx26:PRV_TROUBLE_STATUS_CODE>
                            </xsl:if>
                            <pfx26:PRV_TROUBLE_STATUS_DESCRIPTION>
                                <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:VORIGE_STATUS_OMSCHRIJVING"/>
                            </pfx26:PRV_TROUBLE_STATUS_DESCRIPTION>
                            <xsl:if test="exists(current()/pfx30:VERPL_S-0100/ns35:BEREKEND_TIJDSTIP)&#xA;and not (empty(current()/pfx30:VERPL_S-0100/ns35:BEREKEND_TIJDSTIP))&#xA;and not( current()/pfx30:VERPL_S-0100/ns35:BEREKEND_TIJDSTIP = &quot;&quot;)">
                                <pfx26:REPAIR_DEADLINE_DATE_TIME>
                                    <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:BEREKEND_TIJDSTIP"/>
                                </pfx26:REPAIR_DEADLINE_DATE_TIME>
                            </xsl:if>
                            <pfx26:REPAIR_REMARKS>
                                <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:BIJZONDERHEDEN"/>
                            </pfx26:REPAIR_REMARKS>
                            <pfx26:REPEATED_TROUBLE_FLAG>
                                <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:HERHAALSTORING"/>
                            </pfx26:REPEATED_TROUBLE_FLAG>
                            <pfx26:REPORT_DESCR>
                                <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:RAPPORTAGE_OMSCHRIJVING"/>
                            </pfx26:REPORT_DESCR>
                            <pfx26:RESEARCH_DEPARTMENT_CODE>
                                <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:ONDERZOEKER_AFDELING"/>
                            </pfx26:RESEARCH_DEPARTMENT_CODE>
                            <pfx26:RESEARCH_EMPLOYEE_CODE>
                                <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:ONDERZOEKER_NUMMER"/>
                            </pfx26:RESEARCH_EMPLOYEE_CODE>
                            <xsl:if test="exists(current()/pfx30:VERPL_S-0100/ns35:HERSTEL_TIJDSTIP)&#xA;and not (empty(current()/pfx30:VERPL_S-0100/ns35:HERSTEL_TIJDSTIP))&#xA;and not( current()/pfx30:VERPL_S-0100/ns35:HERSTEL_TIJDSTIP = &quot;&quot;)">
                                <pfx26:SLA_CLEARING_DATE_TIME>
                                    <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:HERSTEL_TIJDSTIP"/>
                                </pfx26:SLA_CLEARING_DATE_TIME>
                            </xsl:if>
                            <xsl:if test="exists(current()/pfx30:VERPL_S-0100/ns35:HERSTELTIJDSTIP_1E)&#xA;and not(empty(current()/pfx30:VERPL_S-0100/ns35:HERSTELTIJDSTIP_1E))&#xA;and not(current()/pfx30:VERPL_S-0100/ns35:HERSTELTIJDSTIP_1E = &quot;&quot;)">
                                <pfx26:SLA_CLEARING_DATE_TIME_1>
                                    <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:HERSTELTIJDSTIP_1E"/>
                                </pfx26:SLA_CLEARING_DATE_TIME_1>
                            </xsl:if>
                            <pfx26:TROUBLE_CAUSE_CODE>
                                <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:AARD_VAN_STORING_CODE"/>
                            </pfx26:TROUBLE_CAUSE_CODE>
                            <pfx26:TROUBLE_CAUSE_DESCRIPTION>
                                <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:AARD_VAN_STORING_OMSCHRIJVING"/>
                            </pfx26:TROUBLE_CAUSE_DESCRIPTION>
                            <pfx26:TROUBLE_CLOSURE_METHOD>
                                <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:GEREEDMELDING_WIJZE"/>
                            </pfx26:TROUBLE_CLOSURE_METHOD>
                            <xsl:if test="exists(current()/pfx30:MELD_S-0100/ns31:KLANTORDER_NUMMER)">
                                <xsl:if test="current()/pfx30:MELD_S-0100/ns31:KLANTORDER_NUMMER">
                                    <pfx26:TROUBLE_REPORT_ID>
                                        <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:KLANTORDER_NUMMER"/>
                                    </pfx26:TROUBLE_REPORT_ID>
                                </xsl:if>
                            </xsl:if>
                            <pfx26:TROUBLE_RESOLUTION_CODE>
                                <xsl:value-of select="current()/pfx30:STRBOX_S-0100/ns41:STRATA_AARD_VAN_STORING_CODE"/>
                            </pfx26:TROUBLE_RESOLUTION_CODE>
                            <xsl:if test="exists(current()/pfx30:MELD_S-0100/ns31:STATUS)">
                                <xsl:if test="current()/pfx30:MELD_S-0100/ns31:STATUS">
                                    <pfx26:TROUBLE_STATUS_CODE>
                                        <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:STATUS"/>
                                    </pfx26:TROUBLE_STATUS_CODE>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="current()/pfx30:MELD_S-0100/ns31:STATUS_OMSCHRIJVING">
                                <pfx26:TROUBLE_STATUS_DESCRIPTION>
                                    <xsl:value-of select="current()/pfx30:MELD_S-0100/ns31:STATUS_OMSCHRIJVING"/>
                                </pfx26:TROUBLE_STATUS_DESCRIPTION>
                            </xsl:if>
                            <pfx26:CONTACT_PERSON>
                                <pfx26:FAMILY_NAME>
                                    <xsl:value-of select="current()/pfx30:KLANT_S-0100/ns32:CORRESPONDENTIE_NAAM"/>
                                </pfx26:FAMILY_NAME>
                                <pfx26:PHONE_NUMBER>
                                    <xsl:value-of select="current()/pfx30:KLANT_S-0100/ns32:CORRESPONDENTIE_TELEFOONNR"/>
                                </pfx26:PHONE_NUMBER>
                            </pfx26:CONTACT_PERSON>
                            <pfx26:COMPLAINT_CATEGORY>
                                <pfx26:COMPLAINT_GROUP_CODE>
                                    <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:KLACHT_GROEP"/>
                                </pfx26:COMPLAINT_GROUP_CODE>
                                <pfx26:COMPLAINT_SPECIFIC_DESCRIPTION>
                                    <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:KLACHT_TEKST"/>
                                </pfx26:COMPLAINT_SPECIFIC_DESCRIPTION>
                                <pfx26:COMPLAINT_STANDARD_DESCRIPTION>
                                    <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:KLACHT_OMSCHRIJVING"/>
                                </pfx26:COMPLAINT_STANDARD_DESCRIPTION>
                                <pfx26:COMPLAINT_SUB_GROUP_CODE>
                                    <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:KLACHT_NUMMER"/>
                                </pfx26:COMPLAINT_SUB_GROUP_CODE>
                            </pfx26:COMPLAINT_CATEGORY>
                            <pfx26:IDENTIFIED_CUSTOMER>
                                <pfx26:CENTRAL_CUSTOMER_ID>
                                    <xsl:value-of select="current()/pfx30:KLANT_S-0100/ns32:CENTRALE_KLANT_REGISTRATIE_NR"/>
                                </pfx26:CENTRAL_CUSTOMER_ID>
                                <pfx26:PARTY_NAME>
                                    <xsl:value-of select="current()/pfx30:KLANT_S-0100/ns32:KLANTNAAM"/>
                                </pfx26:PARTY_NAME>
                                <pfx26:TELECOM_DISTRICT_CODE>
                                    <xsl:value-of select="current()/pfx30:KLANT_S-0100/ns32:TELECOM_DISTRICT_CODE"/>
                                </pfx26:TELECOM_DISTRICT_CODE>
                                <pfx26:TELECOM_REGION_CODE>
                                    <xsl:value-of select="current()/pfx30:KLANT_S-0100/ns32:TELECOM_REGIO_CODE"/>
                                </pfx26:TELECOM_REGION_CODE>
                                <pfx26:STRATA_TELECOM_DISTRICT_CODE>
                                    <xsl:value-of select="current()/pfx30:STRBOX_S-0100/ns41:STRATA_TELECOM_DISTRICT_CODE"/>
                                </pfx26:STRATA_TELECOM_DISTRICT_CODE>
                                <pfx26:PARTY>
                                    <pfx26:LEGAL_FORM_CODE>
                                        <xsl:value-of select="current()/pfx30:KLANT_S-0100/ns32:RECHTSVORM_CODE"/>
                                    </pfx26:LEGAL_FORM_CODE>
                                </pfx26:PARTY>
                                <pfx26:PROPERTY_ADDRESS>
                                    <pfx26:CITY_CODE>
                                        <xsl:value-of select="current()/pfx30:KLANT_S-0100/ns32:PLAATSNAAM_CODE"/>
                                    </pfx26:CITY_CODE>
                                    <pfx26:CITY_NAME>
                                        <xsl:value-of select="current()/pfx30:KLANT_S-0100/ns32:PLAATSNAAM"/>
                                    </pfx26:CITY_NAME>
                                    <pfx26:DUTCH_POSTCODE_LETTERS>
                                        <xsl:value-of select="current()/pfx30:KLANT_S-0100/ns32:POSTCODE_ALFANUMERIEK"/>
                                    </pfx26:DUTCH_POSTCODE_LETTERS>
                                    <xsl:if test="exists(current()/pfx30:KLANT_S-0100/ns32:POSTCODE_NUMERIEK)">
                                        <pfx26:DUTCH_POSTCODE_NUMBERS>
                                            <xsl:value-of select="current()/pfx30:KLANT_S-0100/ns32:POSTCODE_NUMERIEK"/>
                                        </pfx26:DUTCH_POSTCODE_NUMBERS>
                                    </xsl:if>
                                    <xsl:if test="exists(current()/pfx30:KLANT_S-0100/ns32:HUISNUMMER_NUMERIEK)">
                                        <pfx26:HOUSE_NUMBER>
                                            <xsl:value-of select="current()/pfx30:KLANT_S-0100/ns32:HUISNUMMER_NUMERIEK"/>
                                        </pfx26:HOUSE_NUMBER>
                                    </xsl:if>
                                    <pfx26:HOUSE_NUMBER_EXTENSION>
                                        <xsl:value-of select="current()/pfx30:KLANT_S-0100/ns32:HUISNUMMER_ALFANUMERIEK"/>
                                    </pfx26:HOUSE_NUMBER_EXTENSION>
                                    <pfx26:STREET_NAME>
                                        <xsl:value-of select="current()/pfx30:KLANT_S-0100/ns32:STRAATNAAM"/>
                                    </pfx26:STREET_NAME>
                                </pfx26:PROPERTY_ADDRESS>
                            </pfx26:IDENTIFIED_CUSTOMER>
                            <pfx26:SERVICE_VISIT>
                                <xsl:if test="exists(current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_DATUM)&#xA;and not (empty(current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_DATUM))&#xA;and not(current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_DATUM = &quot;&quot;)">
                                    <pfx26:START_DATE_TIME>
                                        <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_DATUM"/>
                                    </pfx26:START_DATE_TIME>
                                </xsl:if>
                                <xsl:if test="exists(current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_DAGDEEL_VAN)&#xA;and not (empty(current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_DAGDEEL_VAN))&#xA;and not(current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_DAGDEEL_VAN = &quot;&quot;)">
                                    <pfx26:VISIT_WINDOW_START_TIME>
                                        <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_DAGDEEL_VAN"/>
                                    </pfx26:VISIT_WINDOW_START_TIME>
                                </xsl:if>
                                <xsl:if test="exists(current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_DAGDEEL_TOT)&#xA;and not (empty(current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_DAGDEEL_TOT))&#xA;and not( current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_DAGDEEL_TOT = &quot;&quot;)">
                                    <pfx26:VISIT_WINDOW_END_TIME>
                                        <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_DAGDEEL_TOT"/>
                                    </pfx26:VISIT_WINDOW_END_TIME>
                                </xsl:if>
                                <pfx26:MM007_APPOINTMENT_OUTSIDE_CUSTOMER_NORM>
                                    <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:BUITEN_NORM_PLAN_KAL"/>
                                </pfx26:MM007_APPOINTMENT_OUTSIDE_CUSTOMER_NORM>
                                <pfx26:MM007_APPOINTMENT_OUTSIDE_NORM_CALENDAR>
                                    <xsl:value-of select="current()/pfx30:KLACHT_S-0102/ns33:BUITEN_NORM_VERZOEK_KLANT"/>
                                </pfx26:MM007_APPOINTMENT_OUTSIDE_NORM_CALENDAR>
                                <pfx26:MM007_APPOINTMENT_PART_OF_DAY>
                                    <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_DAGDEEL_CODE"/>
                                </pfx26:MM007_APPOINTMENT_PART_OF_DAY>
                                <pfx26:MM007_RESEARCH_DEPARTMENT_CODE>
                                    <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_ONDERZOEKER_AFDELING"/>
                                </pfx26:MM007_RESEARCH_DEPARTMENT_CODE>
                                <pfx26:MM007_RESEARCH_EMPLOYEE_CODE>
                                    <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_ONDERZOEKER_NUMMER"/>
                                </pfx26:MM007_RESEARCH_EMPLOYEE_CODE>
                                <pfx26:RESEARCH_AGENCY_CODE>
                                    <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:AFSPRAAK_ORGANISATIE"/>
                                </pfx26:RESEARCH_AGENCY_CODE>
                                <pfx26:APPOINTMENT_WITHIN_NORM>
                                    <xsl:value-of select="current()/pfx30:VERPL_S-0100/ns35:INDICATIE_AFSPRAAK_BUITEN_NORM"/>
                                </pfx26:APPOINTMENT_WITHIN_NORM>
                            </pfx26:SERVICE_VISIT>
                            <pfx26:WORK_ORDER>
                                <xsl:if test="exists(current()/pfx30:VOROND_S-0100/ns44:DATUM_EINDE_WERKZAAMHEDEN)&#xA;and not (empty(current()/pfx30:VOROND_S-0100/ns44:DATUM_EINDE_WERKZAAMHEDEN))&#xA;and not(current()/pfx30:VOROND_S-0100/ns44:DATUM_EINDE_WERKZAAMHEDEN = &quot;&quot;)">
                                    <pfx26:WORK_ORDER_ACTUAL_END_DATETIME>
                                        <xsl:value-of select="current()/pfx30:VOROND_S-0100/ns44:DATUM_EINDE_WERKZAAMHEDEN"/>
                                    </pfx26:WORK_ORDER_ACTUAL_END_DATETIME>
                                </xsl:if>
                                <xsl:if test="exists(current()/pfx30:WERK_S-0100/ns34:DATUM_AANVANG_WERKZAAMHEDEN)&#xA;and not (empty(current()/pfx30:WERK_S-0100/ns34:DATUM_AANVANG_WERKZAAMHEDEN))&#xA;and not( current()/pfx30:WERK_S-0100/ns34:DATUM_AANVANG_WERKZAAMHEDEN = &quot;&quot;)">
                                    <pfx26:WORK_ORDER_ACTUAL_START_DATETIME>
                                        <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:DATUM_AANVANG_WERKZAAMHEDEN"/>
                                    </pfx26:WORK_ORDER_ACTUAL_START_DATETIME>
                                </xsl:if>
                                <xsl:if test="exists(current()/pfx30:WERK_S-0100/ns34:ANALYSE_EINDDATUM)&#xA;and not (empty(current()/pfx30:WERK_S-0100/ns34:ANALYSE_EINDDATUM))&#xA;and not( current()/pfx30:WERK_S-0100/ns34:ANALYSE_EINDDATUM = &quot;&quot;)">
                                    <pfx26:WORK_ORDER_COMPLETION_DATETIME>
                                        <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:ANALYSE_EINDDATUM"/>
                                    </pfx26:WORK_ORDER_COMPLETION_DATETIME>
                                </xsl:if>
                                <xsl:if test="exists(current()/pfx30:VOROND_S-0100/ns44:UITGIFTE_DATUM)&#xA;and not (empty(current()/pfx30:VOROND_S-0100/ns44:UITGIFTE_DATUM))&#xA;and not( current()/pfx30:VOROND_S-0100/ns44:UITGIFTE_DATUM = &quot;&quot;)">
                                    <pfx26:WORK_ORDER_ISSUE_DATETIME>
                                        <xsl:value-of select="current()/pfx30:VOROND_S-0100/ns44:UITGIFTE_DATUM"/>
                                    </pfx26:WORK_ORDER_ISSUE_DATETIME>
                                </xsl:if>
                                <xsl:if test="exists(current()/pfx30:WERK_S-0100/ns34:UITGIFTE_DATUM)&#xA;and not (empty(current()/pfx30:WERK_S-0100/ns34:UITGIFTE_DATUM))&#xA;and not( current()/pfx30:WERK_S-0100/ns34:UITGIFTE_DATUM = &quot;&quot;)">
                                    <pfx26:PRV_WORK_ORDER_ISSUE_DATETIME>
                                        <xsl:value-of select="current()/pfx30:WERK_S-0100/ns34:UITGIFTE_DATUM"/>
                                    </pfx26:PRV_WORK_ORDER_ISSUE_DATETIME>
                                </xsl:if>
                            </pfx26:WORK_ORDER>
                        </pfx26:Ticket>
                    </xsl:for-each>
                </pfx26:TicketList>
            </pfx26:GetTicketsResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogSoapReply MM007Light">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>935</pd:x>
        <pd:y>218</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_LogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <LogMessage_In>
                <MsgCode>
                    <xsl:value-of select="&quot;EAI-04012&quot;"/>
                </MsgCode>
                <Message>
                    <xsl:value-of select="concat(&quot;Sending SOAP-reply on:&quot;&#xA;,$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentDomain&#xA;, &quot; &quot;&#xA;, $_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentId&#xA;, $_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentVersion)"/>
                </Message>
                <ExtraInfo>
                    <xsl:copy-of select="$MapSoapReply-MM007Light/pfx26:GetTicketsResponse"/>
                </ExtraInfo>
            </LogMessage_In>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="FillCMH MM007Light">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>385</pd:x>
        <pd:y>153</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_FillCMH.process</processName>
        </config>
        <pd:inputBindings>
            <CMH-IN>
                <ExistingCMH>
                    <COMPONENT-ID>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentId"/>
                    </COMPONENT-ID>
                    <COMPONENT-VERSION>
                        <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentVersion"/>
                    </COMPONENT-VERSION>
                    <COPY_ATTRIBUTES>
                        <xsl:value-of select="&quot;true&quot;"/>
                    </COPY_ATTRIBUTES>
                    <EXTENT_TRACKING>
                        <xsl:value-of select="&quot;false&quot;"/>
                    </EXTENT_TRACKING>
                    <CMH>
                        <ns1:ID>
                            <xsl:value-of select="&quot;472&quot;"/>
                        </ns1:ID>
                        <ns1:NAME>
                            <xsl:value-of select="&quot;GetTickets&quot;"/>
                        </ns1:NAME>
                        <ns1:FID>
                            <xsl:value-of select="$SOAPEventSource/inputMessage/pfx26:GetTickets/pfx26:customerRefNo"/>
                        </ns1:FID>
                        <ns1:MID>
                            <xsl:value-of select="&quot;472.10&quot;"/>
                        </ns1:MID>
                        <ns1:PARADIGM>
                            <xsl:value-of select="&quot;REQUEST&quot;"/>
                        </ns1:PARADIGM>
                        <ns1:OBJECT>
                            <xsl:value-of select="&quot;CO_GetTickets&quot;"/>
                        </ns1:OBJECT>
                        <ns1:VERSION>
                            <xsl:value-of select="&quot;2.0&quot;"/>
                        </ns1:VERSION>
                        <ns1:FROM>
                            <xsl:attribute name="ns1:COMPONENT_ID">
                                <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentId"/>
                            </xsl:attribute>
                            <xsl:attribute name="ns1:COMPONENT_VERSION">
                                <xsl:value-of select="$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentVersion"/>
                            </xsl:attribute>
                        </ns1:FROM>
                        <ns1:TO>
                            <xsl:attribute name="ns1:DESTINATION">
                                <xsl:value-of select="concat($_globalVariables/ns8:GlobalVariables/Env, '.FIXED.Operations.ASTRIDAdapter.Request.GetTickets.1')"/>
                            </xsl:attribute>
                        </ns1:TO>
                        <ns1:TRACKING>
                            <ns1:MESSAGE_ID>
                                <xsl:value-of select="eai:createGUID()"/>
                            </ns1:MESSAGE_ID>
                            <ns1:ITEM>
                                <xsl:attribute name="ns1:APPINFO">
                                    <xsl:value-of select="concat($_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentDomain&#xA;,&quot;.&quot;,$_globalVariables/ns8:GlobalVariables/EDTAdapter/ComponentId)"/>
                                </xsl:attribute>
                                <xsl:attribute name="ns1:EVENT">
                                    <xsl:value-of select="&quot;GetTickets&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="ns1:TIMESTAMP">
                                    <xsl:value-of select="ns0:timestamp()"/>
                                </xsl:attribute>
                            </ns1:ITEM>
                        </ns1:TRACKING>
                    </CMH>
                </ExistingCMH>
            </CMH-IN>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SOAPSendReply-1">
        <pd:type>com.tibco.plugin.soap.SOAPSendReplyActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReplyUI</pd:resourceType>
        <pd:x>1070</pd:x>
        <pd:y>299</pd:y>
        <config>
            <eventSource>SOAPEventSource</eventSource>
        </config>
        <pd:inputBindings>
            <outputMessage>
                <xsl:copy-of select="$MapSoapReply-MM007Light/pfx26:GetTicketsResponse"/>
            </outputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null-2">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>469</pd:x>
        <pd:y>399</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Null-2-1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>722</pd:x>
        <pd:y>301</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>SOAPEventSource</pd:from>
        <pd:to>LogSOAPRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPEventSource</pd:from>
        <pd:to>SoapEventError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log Error</pd:from>
        <pd:to>MapSoapErrReply</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>FillCMH</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:xpathDescription>SoapEventError</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($SoapEventError)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>MapSoapErrReply</pd:from>
        <pd:to>LogSOAPErrReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapSoapReply</pd:from>
        <pd:to>LogSOAPReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogSOAPReply</pd:from>
        <pd:to>SOAPSendReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPSendReply</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPSendReply</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapSoapReply</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SoapEventError</pd:from>
        <pd:to>FillCMH</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogSOAPRequest</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send Rendezvous Request</pd:from>
        <pd:to>MapSoapReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Send-Rendezvous-Request/ActivityOutput/body/RESULT_STATUS/@ns6:STATUS ="0"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Send Rendezvous Request</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogSOAPErrReply</pd:from>
        <pd:to>SOAPSendFault</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPSendFault</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send Rendezvous Request</pd:from>
        <pd:to>Null</pd:to>
        <pd:xpathDescription>Status</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Send-Rendezvous-Request/ActivityOutput/body/RESULT_STATUS/@ns6:STATUS !="0"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>FillCMH</pd:to>
        <pd:xpathDescription>MM007Light = false</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>lower-case($_globalVariables/ns8:GlobalVariables/EDTAdapter/SwitchMM007Light)="false"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>FillCMH MM007Light</pd:to>
        <pd:xpathDescription>Otherwise</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data MM007Light</pd:from>
        <pd:to>LogRvRequest</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogRvRequest</pd:from>
        <pd:to>Send-Rv-Request MM007Light</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send-Rv-Request MM007Light</pd:from>
        <pd:to>LogRvReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogRvReply</pd:from>
        <pd:to>MapSoapReply MM007Light</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapSoapReply MM007Light</pd:from>
        <pd:to>LogSoapReply MM007Light</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogSoapReply MM007Light</pd:from>
        <pd:to>SOAPSendReply-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogSOAPRequest</pd:from>
        <pd:to>SoapEventError</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>FillCMH</pd:from>
        <pd:to>Send Rendezvous Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>FillCMH MM007Light</pd:from>
        <pd:to>Map Data MM007Light</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPSendReply-1</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send-Rv-Request MM007Light</pd:from>
        <pd:to>Null-2-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Send-Rv-Request-MM007Light/ActivityOutput/body/ns11:RESULT_STATUS/@ns6:STATUS !="0"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Send-Rv-Request MM007Light</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>MapSoapReply MM007Light</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPSendReply-1</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data MM007Light</pd:from>
        <pd:to>Null-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-2-1</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>