<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://wsdl.kpn.com/fixed/ckradapter/FindCustomer.wsdl" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx2="urn:FIND_CUSTOMER" xmlns:ns="http://www.tibco.com/pe/EngineTypes" xmlns:pfx3="http://xmlns.kpn.com/fixed/ckradapter/request/FindCustomer.xsd" xmlns:pfx4="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" xmlns:ns1="http://xmlns.kpn.com/common/cdm/Base.xsd" xmlns:ns2="http://xmlns.kpn.com/fixed/ckradapter/common/CKRResponse.xsd" xmlns:ns3="http://xmlns.kpn.com/fixed/ckradapter/common/Customer.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns5="http://xmlns.kpn.com/fixed/ckradapter/common/CKRRequest.xsd" xmlns:pfx5="http://xmlns.kpn.com/fixed/ckradapter/common/CustomerReference.xsd" xmlns:pfx6="http://xmlns.kpn.com/fixed/ckradapter/common/ExternalCustomerReference.xsd" xmlns:pfx7="http://xmlns.kpn.com/fixed/ckradapter/common/PropertyAddress.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns6="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" xmlns:pfx8="urn:FindCustomer" xmlns:pfx9="http://xmlns.example.com/unique/default/namespace/1095237788188" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx10="urn:GetCustomerDetails" xmlns:pfx11="http://xmlns.kpn.com/fixed/ckradapter/request/GetCustomerDetails.xsd" xmlns:pfx12="http://xmlns.kpn.com/fixed/ckradapter/response/GetCustomerDetails.xsd" xmlns:ns7="http://xmlns.kpn.com/fixed/ckradapter/common/OrganizationName.xsd" xmlns:ns8="http://xmlns.kpn.com/fixed/ckradapter/common/IndividualName.xsd" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx13="http://xmlns.kpn.com/common/cdm/ErrorMessage.xsd" xmlns:pfx14="urn:GET_CUSTOMER_DETAILS" xmlns:eai="java://com.kpn.eai.component.common.CommonXPathFunctions" xmlns:ns9="http://xmlns.kpn.com/eai/common/errors" xmlns:ns10="http://schemas.tibco.com/bw/plugins/soap/5.0/SoapPluginExceptions" xmlns:ns11="http://xmlns.tibco.com/encodings/mime" xmlns:ns13="http://xmlns.kpn.com/fixed/CustomerServices/Request/FindCustomer.xsd" xmlns:pfx15="http://xmlns.kpn.com/fixed/CustomerServices/Response/FindCustomer.xsd" xmlns:ns14="http://xmlns.kpn.com/fixed/CustomerServices/common/PropertyAddress.xsd" xmlns:pfx16="http://tempuri.org" xmlns:pfx17="urn:GET_DPMBSISDN2" xmlns:ns15="http://xmlns.kpn.com/fixed/kanvascontractadapter/request/GetDpmbsIsdn2.xsd" xmlns:pfx18="http://xmlns.kpn.com/fixed/kanvascontractadapter/response/GetDpmbsIsdn2.xsd" xmlns:ns16="http://xmlns.kpn.com/fixed/kanvascontractadapter/common/KanvasResponse.xsd" xmlns:ns17="http://xmlns.example.com/unique/default/namespace/1113228290656" xmlns:ns18="http://xmlns.kpn.com/fixed/common/PhoneNumber.xsd" xmlns:pfx19="urn:GET_PREMISESADDRESS" xmlns:ns19="http://xmlns.kpn.com/fixed/TIEServices/Request/GetPremisesAddress.xsd" xmlns:pfx20="http://xmlns.kpn.com/fixed/TIEServices/Response/GetPremisesAddress.xsd" xmlns:pfx21="urn:GetLogicalPortServiceInformation" xmlns:ns20="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/EpacityGateway/Request/598-GetLogicalPortServiceInformation Request XSD.xsd" xmlns:pfx22="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/EpacityGateway/Response/598-GetLogicalPortServiceInformation Response XSD.xsd" xmlns:pfx23="http://xmlns.kpn.com/fixed/EpacityGateway/Response/GetLogicalPortServiceInformation.xsd" xmlns:ns21="http://xmlns.kpn.com/fixed/EpacityGateway/Request/GetLogicalPortServiceInformation.xsd" xmlns:pfx24="urn:PerformLineMeasurement" xmlns:ns22="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/EpacityGateway/Request/GetLogicalPortServiceInformation.xsd" xmlns:pfx25="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/EpacityGateway/Response/GetLogicalPortServiceInformation.xsd" xmlns:pfx26="http://xmlns.kpn.com/fixed/KIWIAdapter/S760.SubmitWholesaleIPOrder.1" xmlns:ns23="http://xmlns.kpn.com/EAI/fixed/760_SubmitWholesaleIPOrder/1.0/Request" xmlns:ns24="http://xmlns.kpn.com/EAI/fixed/0326_SubmitWholesaleIPOrder/1.0/Request" xmlns:ns25="http://xmlns.kpn.com/fixed/WSIPAdapter/Request/SubmitWholesaleIPOrderRequest.xsd" xmlns:pfx27="http://xmlns.kpn.com/fixed/KIWIAdapter/Response/SubmitWholesaleIPOrderResponse.xsd" xmlns:pfx28="http://xmlns.kpn.com/EAI/fixed/760_SubmitWholesaleIPOrder/1.0/Response" xmlns:ns26="http://xmlns.kpn.com/fixed/kiwiadapter/common/KIWIResponse.xsd" xmlns:pfx29="http://xmlns.kpn.com/fixed/KIWIAdapter/S760.SubmitWholesaleIPOrder.1/S760.SubmitWholesaleIPOrder.1Impl" xmlns:pfx30="http://xmlns.kpn.com/EAI/fixed/EAISubmitWholesaleIPOrder/1.0/Response" xmlns:ns27="http://xmlns.kpn.com/EAI/fixed/EAISubmitWholesaleIPOrder/1.0/Request" xmlns:pfx31="http://xmlns.kpn.com/fixed/WSIPAdapter/Response/SubmitWholesaleIPOrderResponse.xsd" xmlns:ns28="http://xmlns.kpn.com/fixed/wsipadapter/common/WSIPResponse.xsd" xmlns:pfx32="urn:GetCustomerPaymentDetails" xmlns:ns29="http://xmlns.tibco.com/soap/context" xmlns:ns30="http://xmlns.kpn.com/fixed/PMAdapter/request/GetCustomerPaymentDetails.xsd" xmlns:pfx33="http://xmlns.kpn.com/fixed/PMAdapter/Response/GetCustomerPaymentDetails.xsd" xmlns:ns31="http://xmlns.kpn.com/fixed/PMAdapter/common/PMResponse.xsd" xmlns:ns32="http://xmlns.kpn.com/fixed/PMAdapter/common/InvoiceSummary.xsd" xmlns:ns33="http://xmlns.kpn.com/fixed/ZSLAdapter/request/GetCustomerPaymentDetails.xsd" xmlns:pfx34="http://xmlns.kpn.com/fixed/ZSLAdapter/response/GetCustomerPaymentDetails.xsd" xmlns:ns34="http://xmlns.kpn.com/EAI/fixed/0074_GetCustomerPaymentDetails/1.1/Response" xmlns:ns35="http://xmlns.kpn.com/EAI/fixed/0074_GetCustomerPaymentDetails/1.1/Request" xmlns:pfx35="urn:GetCustomerPaymentStatus" xmlns:ns36="http://xmlns.kpn.com/fixed/ZSLAdapter/request/GetCustomerPaymentStatus.xsd" xmlns:pfx36="http://xmlns.kpn.com/fixed/ZSLAdapter/response/GetCustomerPaymentStatus.xsd" xmlns:ns37="http://xmlns.kpn.com/EAI/fixed/0073_GetCustomerPaymentStatus/1.1/Response" xmlns:ns38="http://xmlns.kpn.com/EAI/fixed/0073_GetCustomerPaymentStatus/1.1/Request" xmlns:pfx37="http://xmlns.kpn.com/fixed/SFAAdapter/GetAccountData" xmlns:ns39="http://xmlns.kpn.com/fixed/CRMServices/Request/GetAccountData.xsd" xmlns:ns40="http://xmlns.kpn.com/EAI/fixed/0418_GetAccountData/1.0/Request" xmlns:ns41="http://www.tibco.com/schemas/SFAAdapter/XSDSchemas/SFA/CRMML/GetAccountData.xsd" xmlns:pfx38="http://xmlns.kpn.com/fixed/CRMServices/Response/GetAccountData.xsd" xmlns:pfx39="http://www.siebel.com/xml/CIF%20Envelope/GetAccountDataResponse" xmlns:pfx40="http://xmlns.kpn.com/fixed/SFAAdapter/GetAccountData/GetAccountDataImpl" xmlns:pfx41="http://xmlns.example.com/1220521197812" xmlns:ns42="http://www.ocrm.com/interfaces/request/FindDocument.xsd" xmlns:pfx42="http://www.ocrm.com/interfaces/response/FindDocument.xsd" xmlns:ns43="http://xmlns.kpn.com/fixed/DocumentServices/Request/FindDocument.2.xsd" xmlns:pfx43="http://xmlns.kpn.com/fixed/DocumentServices/Response/FindDocument.2.xsd" xmlns:pfx45="http://xmlns.kpn.com/fixed/SFAAdapter/FindDocument/FindDocumentImpl" xmlns:ns44="http://xmlns.kpn.com/fixed/SFAAdapter/Headers" xmlns:ns442="http://xmlns.kpn.com/EAI/fixed/0320_FindDocument/2.0/Request" xmlns:ns45="http://xmlns.kpn.com/EAI/fixed/0320_FindDocument/2.0/Response" xmlns:pfx44="http://webservices.kpn-lls.com/V0.2/EcnsPortingServices.wsdl" xmlns:ns46="EcPsXsd_V0.2" xmlns:ns47="http://xmlns.kpn.com/fixed/portingserviceswf/request/NumberOutportingChangeAnswer.xsd" xmlns:pfx46="http://xmlns.kpn.com/fixed/portingserviceswf/response/NumberOutportingChangeAnswer.xsd" xmlns:pfx47="http://xmlns.kpn.com/fixed/portingserviceswf/response/SubmitNumberOutPortingRequestAnswer.xsd" xmlns:ns48="http://xmlns.kpn.com/fixed/portingserviceswf/request/NumberOutportingHold.xsd" xmlns:pfx48="http://xmlns.kpn.com/fixed/portingserviceswf/response/NumberOutportingHold.xsd">
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/FindCustomer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" schemaLocation="/XSDSchemas/Common/ResultStatus.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/Base.xsd" schemaLocation="/XSDSchemas/Common/Base.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ErrorMessage.xsd" schemaLocation="/XSDSchemas/Common/ErrorMessage.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/response/GetCustomerDetails.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/GetCustomerDetails.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/request/GetCustomerDetails.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Request/GetCustomerDetails.xsd"/>
    <xsd:import namespace="urn:GET_CUSTOMER_DETAILS" schemaLocation="/WSDL/EpiphanyCRBAdapter/GetCustomerDetails.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/request/FindCustomer.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Request/FindCustomer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/CustomerServices/Request/FindCustomer.xsd" schemaLocation="/XSDSchemas/CustomerServices/Request/FindCustomer.xsd"/>
    <xsd:import namespace="urn:FIND_CUSTOMER" schemaLocation="/WSDL/EpiphanyCRBAdapter/FindCustomer.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/CustomerServices/Response/FindCustomer.xsd" schemaLocation="/XSDSchemas/CustomerServices/Response/FindCustomer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/kanvascontractadapter/request/GetDpmbsIsdn2.xsd" schemaLocation="/XSDSchemas/KanvasContractAdapter/Request/GetDpmbsIsdn2.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/kanvascontractadapter/response/GetDpmbsIsdn2.xsd" schemaLocation="/XSDSchemas/KanvasContractAdapter/Response/GetDpmbsIsdn2.xsd"/>
    <xsd:import namespace="urn:GET_DPMBSISDN2" schemaLocation="/WSDL/ANNETAdapter/GetDpmbsIsdn2.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/TIEServices/Request/GetPremisesAddress.xsd" schemaLocation="/XSDSchemas/TIEServices/Request/GetPremisesAddress.xsd"/>
    <xsd:import namespace="urn:GET_PREMISESADDRESS" schemaLocation="/WSDL/ANNETAdapter/GetPremisesAddress.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/TIEServices/Response/GetPremisesAddress.xsd" schemaLocation="/XSDSchemas/TIEServices/Response/GetPremisesAddress.xsd"/>
    <xsd:import namespace="urn:GetLogicalPortServiceInformation" schemaLocation="/WSDL/ANNETAdapter/GetLogicalPortServiceInformation.wsdl"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/EpacityGateway/Request/GetLogicalPortServiceInformation.xsd" schemaLocation="/XSDSchemas/EpacityGateway/Request/GetLogicalPortServiceInformation.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/EpacityGateway/Response/GetLogicalPortServiceInformation.xsd" schemaLocation="/XSDSchemas/EpacityGateway/Response/GetLogicalPortServiceInformation.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0326_SubmitWholesaleIPOrder/1.0/Request" schemaLocation="/XSDSCHEMAS/KIWIAdapter/Imported/0326_SubmitWholesaleIPOrder_1.0_Request_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/WSIPAdapter/Request/SubmitWholesaleIPOrderRequest.xsd" schemaLocation="/XSDSCHEMAS/KIWIAdapter/Request/SubmitWholesaleIPOrder.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/760_SubmitWholesaleIPOrder/1.0/Response" schemaLocation="/XSDSCHEMAS/KIWIAdapter/Response/760_SubmitWholesaleIPOrder.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/EAISubmitWholesaleIPOrder/1.0/Response" schemaLocation="/XSDSCHEMAS/KIWI/Response/EAISubmitWholesaleIPOrder.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/WSIPAdapter/Response/SubmitWholesaleIPOrderResponse.xsd" schemaLocation="/XSDSCHEMAS/KIWIAdapter/Response/SubmitWholesaleIPOrder.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/PMAdapter/request/GetCustomerPaymentDetails.xsd" schemaLocation="/XSDSchemas/PMAdapter/Request/GetCustomerPaymentDetails.xsd"/>
    <xsd:import namespace="urn:GetCustomerPaymentDetails" schemaLocation="/WSDL/ZSLAdapter/GetCustomerPaymentDetails.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/PMAdapter/Response/GetCustomerPaymentDetails.xsd" schemaLocation="/XSDSchemas/PMAdapter/Response/GetCustomerPaymentDetails.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ZSLAdapter/request/GetCustomerPaymentDetails.xsd" schemaLocation="/XSDSchemas/PMAdapter/Request/GetCustomerPaymentDetails_2.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ZSLAdapter/response/GetCustomerPaymentDetails.xsd" schemaLocation="/XSDSchemas/PMAdapter/Response/GetCustomerPaymentDetails_2.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ZSLAdapter/request/GetCustomerPaymentStatus.xsd" schemaLocation="/XSDSchemas/PMAdapter/Request/GetCustomerPaymentStatus_2.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ZSLAdapter/response/GetCustomerPaymentStatus.xsd" schemaLocation="/XSDSchemas/PMAdapter/Response/GetCustomerPaymentStatus_2.xsd"/>
    <xsd:import namespace="urn:GetCustomerPaymentStatus" schemaLocation="/WSDL/ZSLAdapter/GetCustomerPaymentStatus.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/CRMServices/Request/GetAccountData.xsd" schemaLocation="/XSDSchemas/CRMServices/Request/GetAccountData.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/CRMServices/Response/GetAccountData.xsd" schemaLocation="/XSDSchemas/CRMServices/Response/GetAccountData.xsd"/>
    <xsd:import namespace="http://www.siebel.com/xml/CIF%20Envelope/GetAccountDataResponse" schemaLocation="/XSDSchemas/SFA/CRMML/GetAccountDataResponse.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/DocumentServices/Response/FindDocument.2.xsd" schemaLocation="/XSDSchemas/DocumentServices/Response/FindDocument.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/DocumentServices/Request/FindDocument.2.xsd" schemaLocation="/XSDSchemas/DocumentServices/Request/FindDocument.xsd"/>
    <xsd:import namespace="http://www.ocrm.com/interfaces/response/FindDocument.xsd" schemaLocation="/XSDSchemas/SFA/StellentFile/FindDocument.AppSide.response.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/request/NumberOutportingChangeAnswer.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Request/SubmitNumberOutportingChangeAnswer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/response/NumberOutportingChangeAnswer.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Response/SubmitNumberOutportingChangeAnswer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/response/SubmitNumberOutPortingRequestAnswer.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Response/SubmitNumberOutPortingRequestAnswer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/request/NumberOutportingHold.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Request/RequestNumberOutportingHold.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/response/NumberOutportingHold.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Response/RequestNumberOutportingHold.xsd"/>
    <xsd:import namespace="EcPsXsd_V0.2" schemaLocation="/WSDL/EcnsPortingServices.xsd"/>
    <wsdl:import namespace="urn:FindCustomer" location="/WSDL/OARAdapter/FindCustomer.wsdl"/>
    <wsdl:import namespace="urn:GetCustomerDetails" location="/WSDL/OARAdapter/GetCustomerDetails.wsdl"/>
    <wsdl:import namespace="urn:GET_CUSTOMER_DETAILS" location="/WSDL/EpiphanyCRBAdapter/GetCustomerDetails.wsdl"/>
    <wsdl:import namespace="urn:FIND_CUSTOMER" location="/WSDL/EpiphanyCRBAdapter/FindCustomer.wsdl"/>
    <wsdl:import namespace="urn:GET_DPMBSISDN2" location="/WSDL/ANNETAdapter/GetDpmbsIsdn2.wsdl"/>
    <wsdl:import namespace="urn:GET_PREMISESADDRESS" location="/WSDL/ANNETAdapter/GetPremisesAddress.wsdl"/>
    <wsdl:import namespace="urn:GetLogicalPortServiceInformation" location="/WSDL/ANNETAdapter/GetLogicalPortServiceInformation.wsdl"/>
    <wsdl:import namespace="http://xmlns.kpn.com/fixed/KIWIAdapter/S760.SubmitWholesaleIPOrder.1/S760.SubmitWholesaleIPOrder.1Impl" location="/WSDL/S760.SubmitWholesaleIPOrder.1.wsdl"/>
    <wsdl:import namespace="urn:GetCustomerPaymentDetails" location="/WSDL/ZSLAdapter/GetCustomerPaymentDetails.wsdl"/>
    <wsdl:import namespace="urn:GetCustomerPaymentStatus" location="/WSDL/ZSLAdapter/GetCustomerPaymentStatus.wsdl"/>
    <wsdl:import namespace="http://xmlns.kpn.com/fixed/SFAAdapter/GetAccountData/GetAccountDataImpl"/>
    <wsdl:import namespace="http://xmlns.kpn.com/fixed/SFAAdapter/GetAccountData" location="/WSDL/SFAAdapter/GetAccountData.wsdl"/>
    <wsdl:import namespace="http://xmlns.kpn.com/fixed/SFAAdapter/FindDocument/FindDocumentImpl" location="/WSDL/SFAAdapter/FindDocument.wsdl"/>
    <wsdl:import namespace="http://webservices.kpn-lls.com/V0.2/EcnsPortingServices.wsdl" location="/WSDL/EcnsPortingServices.wsdl"/>
    <pd:name>EClipsAdapter/Processes/Outbound/RequestNumberOutportingHold.process</pd:name>
    <pd:description/>
    <pd:startName>SOAPEventSource</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="SOAPEventSource">
        <pd:type>com.tibco.plugin.soap.SOAPEventSource</pd:type>
        <pd:resourceType>ae.activities.SOAPEventSourceUI</pd:resourceType>
        <pd:x>58</pd:x>
        <pd:y>129</pd:y>
        <config>
            <service>pfx44:EcnsPortingServices</service>
            <wsdlNamespaceRoot>http://webservices.kpn-lls.com/V0.2/EcnsPortingServices.wsdl/StartHoldOperationImpl</wsdlNamespaceRoot>
            <operation>StartHoldOperation</operation>
            <portAddressPrefix/>
            <operationStyle>document</operationStyle>
            <soapUse>literal</soapUse>
            <embedWsdlComponents>true</embedWsdlComponents>
            <embedSchemaComponents>true</embedSchemaComponents>
            <soapAction>""</soapAction>
            <sharedChannel>/EClipsAdapter/Shared Resources/HTTP Server Connection.sharedhttp</sharedChannel>
            <sharedChannels>
                <httpChannel>
                    <useBasicAuthentication>false</useBasicAuthentication>
                </httpChannel>
            </sharedChannels>
            <useBasicAuthentication>false</useBasicAuthentication>
            <soapVersion>SOAP 1.1</soapVersion>
            <inputHeadersMessage>
                <binding>
                    <messageName>pfx45:RequestHeader</messageName>
                    <partName>Header</partName>
                    <bindingType>soap</bindingType>
                    <bindingDetails>
                        <soap.encoding>literal</soap.encoding>
                    </bindingDetails>
                </binding>
            </inputHeadersMessage>
            <inputAttachmentBindings/>
            <outputAttachmentBindings/>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>993</pd:endX>
    <pd:endY>456</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:group name="Try Catch process">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>186</pd:x>
        <pd:y>6</pd:y>
        <pd:width>788</pd:width>
        <pd:height>233</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Create Msg ID</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Send Soap Reply</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:description>no trace </pd:description>
            <pd:from>Create Msg ID</pd:from>
            <pd:to>Call Process</pd:to>
            <pd:xpathDescription>NO TRACE</pd:xpathDescription>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:description/>
            <pd:from>Create Msg ID</pd:from>
            <pd:to>Log Soap Request</pd:to>
            <pd:xpathDescription>TRACE</pd:xpathDescription>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>eai:isTraceOn("EClips-04003")</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Log Soap Request</pd:from>
            <pd:to>Call Process</pd:to>
            <pd:xpathDescription/>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Parse Response</pd:from>
            <pd:to>Create Soap Reply</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Create Soap Reply</pd:from>
            <pd:to>Log Soap Response</pd:to>
            <pd:xpathDescription>TRACE</pd:xpathDescription>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>eai:isTraceOn('EClips-04014')</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Log Soap Response</pd:from>
            <pd:to>Send Soap Reply</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Create Soap Reply</pd:from>
            <pd:to>Send Soap Reply</pd:to>
            <pd:xpathDescription>NO TRACE</pd:xpathDescription>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call Process</pd:from>
            <pd:to>Parse Response</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Create Msg ID">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:description>Create unique gui id.</pd:description>
            <pd:x>261</pd:x>
            <pd:y>130</pd:y>
            <config>
                <element>
                    <xsd:element name="Guid_field" type="xsd:string"/>
                </element>
            </config>
            <pd:inputBindings>
                <Guid_field>
                    <xsl:value-of select="eai:createGUID()"/>
                </Guid_field>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Call Process">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:description>RV Request to Epacity Gateway services</pd:description>
            <pd:x>457</pd:x>
            <pd:y>130</pd:y>
            <config>
                <processName>/Common/Sub Processes/Sub_Requester.process</processName>
            </config>
            <pd:inputBindings>
                <RequesterIn>
                    <Destination>
                        <xsl:value-of select="concat($_globalVariables/ns4:GlobalVariables/Env, '.FIXED.Operations.PortingServicesWF.Request.NotifyNumberOutportingHold.1')"/>
                    </Destination>
                    <Timeout>
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/EClipsAdapter/Outbound/RV/Timeout"/>
                    </Timeout>
                    <Body>
                        <ns48:RequestNumberOutportingHold>
                            <ns1:CMH>
                                <ns1:ID>
                                    <xsl:value-of select="1156"/>
                                </ns1:ID>
                                <ns1:NAME>
                                    <xsl:value-of select="&quot;NotifyNumberOutportingHold&quot;"/>
                                </ns1:NAME>
                                <ns1:FID>
                                    <xsl:value-of select="$SOAPEventSource/inputMessage/ns46:EcnsStartHoldReq/ns46:StartHoldReqStruct/ns46:PortingId"/>
                                </ns1:FID>
                                <ns1:MID>
                                    <xsl:value-of select="1156.10"/>
                                </ns1:MID>
                                <ns1:PARADIGM>
                                    <xsl:value-of select="&quot;REQUEST&quot;"/>
                                </ns1:PARADIGM>
                                <ns1:OBJECT>
                                    <xsl:value-of select="&quot;&quot;"/>
                                </ns1:OBJECT>
                                <ns1:VERSION>
                                    <xsl:value-of select="1.0"/>
                                </ns1:VERSION>
                                <ns1:FROM>
                                    <xsl:attribute name="ns1:COMPONENT_ID">
                                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/EClipsAdapter/ComponentId"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="ns1:COMPONENT_VERSION">
                                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/EClipsAdapter/ComponentVersion"/>
                                    </xsl:attribute>
                                </ns1:FROM>
                                <ns1:TO>
                                    <xsl:attribute name="ns1:DESTINATION">
                                        <xsl:value-of select="concat($_globalVariables/ns4:GlobalVariables/Env, '.FIXED.Operations.EClipsAdapter.Request.RequestNumberOutportingHold.1')"/>
                                    </xsl:attribute>
                                </ns1:TO>
                                <ns1:TRACKING>
                                    <ns1:MESSAGE_ID>
                                        <xsl:value-of select="$Create-Msg-ID/Guid_field"/>
                                    </ns1:MESSAGE_ID>
                                </ns1:TRACKING>
                            </ns1:CMH>
                            <ns48:PORTING_ID>
                                <xsl:value-of select="$SOAPEventSource/inputMessage/ns46:EcnsStartHoldReq/ns46:StartHoldReqStruct/ns46:PortingId"/>
                            </ns48:PORTING_ID>
                            <ns48:NOTES>
                                <xsl:value-of select="$SOAPEventSource/inputMessage/ns46:EcnsStartHoldReq/ns46:StartHoldReqStruct/ns46:Note"/>
                            </ns48:NOTES>
                        </ns48:RequestNumberOutportingHold>
                    </Body>
                </RequesterIn>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Parse Response">
            <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
            <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
            <pd:x>571</pd:x>
            <pd:y>131</pd:y>
            <config>
                <inputStyle>text</inputStyle>
                <xsdVersion>default</xsdVersion>
                <validateOutput>true</validateOutput>
                <term ref="pfx48:ResponseNumberOutportingHold"/>
            </config>
            <pd:inputBindings>
                <xmlString>
                    <xsl:value-of select="$Call-Process/RequesterOut/Body"/>
                </xmlString>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log Soap Request">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:description/>
            <pd:x>378</pd:x>
            <pd:y>62</pd:y>
            <config>
                <processName>/Common/Sub Processes/Sub_Trace.process</processName>
            </config>
            <pd:inputBindings>
                <TraceIn>
                    <MsgCode>
                        <xsl:value-of select="&quot;EClips-04003&quot;"/>
                    </MsgCode>
                    <MsgId>
                        <xsl:value-of select="$Create-Msg-ID/Guid_field"/>
                    </MsgId>
                    <Parameter>
                        <xsl:value-of select="tib:render-xml($SOAPEventSource/inputMessage/ns46:EcnsStartHoldReq, false(), true())"/>
                    </Parameter>
                </TraceIn>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Create Soap Reply">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:description>Map incoming RV Response to Outgoing SOAP response</pd:description>
            <pd:x>675</pd:x>
            <pd:y>129</pd:y>
            <config>
                <element ref="ns46:StartHoldRespStruct"/>
            </config>
            <pd:inputBindings>
                <ns46:StartHoldRespStruct>
                    <ns46:StatusResponsePS>
                        <ns46:ResultCode>
                            <xsl:value-of select="$Parse-Response/pfx48:ResponseNumberOutportingHold/pfx48:RESULT_STATUS/@ns6:STATUS"/>
                        </ns46:ResultCode>
                        <xsl:if test="$Parse-Response/pfx48:ResponseNumberOutportingHold/pfx48:RESULT_STATUS/@ns6:MSG_CODE">
                            <ns46:MessageCode>
                                <xsl:value-of select="$Parse-Response/pfx48:ResponseNumberOutportingHold/pfx48:RESULT_STATUS/@ns6:MSG_CODE"/>
                            </ns46:MessageCode>
                        </xsl:if>
                        <xsl:if test="$Parse-Response/pfx48:ResponseNumberOutportingHold/pfx48:RESULT_STATUS/@ns6:ERROR_CODE">
                            <ns46:ErrorCode>
                                <xsl:value-of select="$Parse-Response/pfx48:ResponseNumberOutportingHold/pfx48:RESULT_STATUS/@ns6:ERROR_CODE"/>
                            </ns46:ErrorCode>
                        </xsl:if>
                        <xsl:if test="$Parse-Response/pfx48:ResponseNumberOutportingHold/pfx48:RESULT_STATUS/@ns6:ERROR_DESCRIPTION">
                            <ns46:ErrorDescription>
                                <xsl:value-of select="$Parse-Response/pfx48:ResponseNumberOutportingHold/pfx48:RESULT_STATUS/@ns6:ERROR_DESCRIPTION"/>
                            </ns46:ErrorDescription>
                        </xsl:if>
                    </ns46:StatusResponsePS>
                </ns46:StartHoldRespStruct>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log Soap Response">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:description>Trace outgoing SOAP message</pd:description>
            <pd:x>811</pd:x>
            <pd:y>63</pd:y>
            <config>
                <processName>/Common/Sub Processes/Sub_Trace.process</processName>
            </config>
            <pd:inputBindings>
                <TraceIn>
                    <MsgCode>
                        <xsl:value-of select="&quot;EClips-04014&quot;"/>
                    </MsgCode>
                    <MsgId>
                        <xsl:value-of select="$Create-Msg-ID/Guid_field"/>
                    </MsgId>
                    <Parameter>
                        <xsl:value-of select="tib:render-xml($Create-Soap-Reply/ns46:StartHoldRespStruct, false(), true())"/>
                    </Parameter>
                </TraceIn>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Send Soap Reply">
            <pd:type>com.tibco.plugin.soap.SOAPSendReplyActivity</pd:type>
            <pd:resourceType>ae.activities.SOAPSendReplyUI</pd:resourceType>
            <pd:x>892</pd:x>
            <pd:y>130</pd:y>
            <config>
                <eventSource>SOAPEventSource</eventSource>
            </config>
            <pd:inputBindings>
                <outputMessage>
                    <ns46:EcnsStartHoldResp>
                        <ns46:StartHoldRespStruct>
                            <xsl:copy-of select="$Create-Soap-Reply/ns46:StartHoldRespStruct/ns46:StatusResponsePS"/>
                        </ns46:StartHoldRespStruct>
                    </ns46:EcnsStartHoldResp>
                </outputMessage>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:group name="Error try catch process">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>275</pd:x>
        <pd:y>266</pd:y>
        <pd:width>540</pd:width>
        <pd:height>264</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Log Error</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Soap Err Reply</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Log Error</pd:from>
            <pd:to>Map Soap Err Reply</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map Soap Err Reply</pd:from>
            <pd:to>Soap Err Reply</pd:to>
            <pd:xpathDescription>NO TRACE</pd:xpathDescription>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map Soap Err Reply</pd:from>
            <pd:to>Log Soap Err Reply</pd:to>
            <pd:xpathDescription>TRACE</pd:xpathDescription>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>eai:isTraceOn("EClips-04013")</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Log Soap Err Reply</pd:from>
            <pd:to>Soap Err Reply</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Log Error">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>378</pd:x>
            <pd:y>405</pd:y>
            <config>
                <processName>/Common/Sub Processes/Sub_ErrorTrace.process</processName>
            </config>
            <pd:inputBindings>
                <ErrorTraceIn>
                    <ns9:Errors>
                        <xsl:choose>
                            <xsl:when test="exists($_error_SOAPEventSource/ActivityErrors)">
                                <ns9:Error>
                                    <ns9:MsgCode>
                                        <xsl:value-of select="&quot;EClips-03001&quot;"/>
                                    </ns9:MsgCode>
                                    <ns9:Params>
                                        <xsl:value-of select="&quot;RequestNumberOutportingHold&quot;"/>
                                    </ns9:Params>
                                    <ns:ErrorReport>
                                        <xsl:copy-of select="$_error/ns:ErrorReport/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$_error/ns:ErrorReport/@*"/>
                                        <xsl:copy-of select="$_error/ns:ErrorReport/node()"/>
                                    </ns:ErrorReport>
                                    <ns9:ActivityError>
                                        <xsl:copy-of select="$_error_SOAPEventSource/ActivityErrors/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$_error_SOAPEventSource/ActivityErrors/@*"/>
                                        <xsl:copy-of select="$_error_SOAPEventSource/ActivityErrors/node()"/>
                                    </ns9:ActivityError>
                                </ns9:Error>
                            </xsl:when>
                            <xsl:when test="exists($_error_Call-Process)">
                                <xsl:copy-of select="$_error_Call-Process/ns9:Error"/>
                            </xsl:when>
                            <xsl:when test="exists($_error_Parse-Response/ActivityErrors)">
                                <ns9:Error>
                                    <ns9:MsgCode>
                                        <xsl:value-of select="&quot;EClips-03009&quot;"/>
                                    </ns9:MsgCode>
                                    <ns9:Params>
                                        <xsl:value-of select="$Call-Process/RequesterOut/Body"/>
                                    </ns9:Params>
                                    <xsl:if test="$Create-Msg-ID/Guid_field">
                                        <ns9:MsgId>
                                            <xsl:value-of select="$Create-Msg-ID/Guid_field"/>
                                        </ns9:MsgId>
                                    </xsl:if>
                                    <ns:ErrorReport>
                                        <xsl:copy-of select="$_error/ns:ErrorReport/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$_error/ns:ErrorReport/@*"/>
                                        <xsl:copy-of select="$_error/ns:ErrorReport/node()"/>
                                    </ns:ErrorReport>
                                    <xsl:if test="exists($_error_Parse-Response/ActivityErrors)">
                                        <ns9:ActivityError>
                                            <xsl:copy-of select="$_error_Parse-Response/ancestor-or-self::*/namespace::node()"/>
                                            <xsl:copy-of select="$_error_Parse-Response/@*"/>
                                            <xsl:copy-of select="$_error_Parse-Response/node()"/>
                                        </ns9:ActivityError>
                                    </xsl:if>
                                </ns9:Error>
                            </xsl:when>
                            <xsl:when test="count($_error_Send-Soap-Reply/ns10:ServerException)>0">
                                <ns9:Error>
                                    <ns9:MsgCode>
                                        <xsl:value-of select="&quot;EClips-03001&quot;"/>
                                    </ns9:MsgCode>
                                    <ns9:Params>
                                        <xsl:value-of select="&quot;RequestNumberOutportingHold&quot;"/>
                                    </ns9:Params>
                                    <xsl:if test="$Create-Msg-ID/Guid_field">
                                        <ns9:MsgId>
                                            <xsl:value-of select="$Create-Msg-ID/Guid_field"/>
                                        </ns9:MsgId>
                                    </xsl:if>
                                    <ns:ErrorReport>
                                        <xsl:copy-of select="$_error/ns:ErrorReport/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$_error/ns:ErrorReport/@*"/>
                                        <xsl:copy-of select="$_error/ns:ErrorReport/node()"/>
                                    </ns:ErrorReport>
                                    <xsl:if test="exists($_error_Send-Soap-Reply/ns10:ServerException)">
                                        <ns9:ApplicationError>
                                            <xsl:copy-of select="$_error_Send-Soap-Reply/ancestor-or-self::*/namespace::node()"/>
                                            <xsl:copy-of select="$_error_Send-Soap-Reply/@*"/>
                                            <xsl:copy-of select="$_error_Send-Soap-Reply/node()"/>
                                        </ns9:ApplicationError>
                                    </xsl:if>
                                </ns9:Error>
                            </xsl:when>
                            <xsl:otherwise>
                                <ns9:Error>
                                    <ns9:MsgCode>
                                        <xsl:value-of select="&quot;EClips-03004&quot;"/>
                                    </ns9:MsgCode>
                                    <ns9:Params>
                                        <xsl:value-of select="&quot;SubmitNumberOutportingChangeAnswer&quot;"/>
                                    </ns9:Params>
                                    <xsl:if test="$Create-Msg-ID/Guid_field">
                                        <ns9:MsgId>
                                            <xsl:value-of select="$Create-Msg-ID/Guid_field"/>
                                        </ns9:MsgId>
                                    </xsl:if>
                                    <xsl:copy-of select="$_error/ns:ErrorReport"/>
                                </ns9:Error>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ns9:Errors>
                </ErrorTraceIn>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Map Soap Err Reply">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>516</pd:x>
            <pd:y>403</pd:y>
            <config>
                <element ref="ns46:StartHoldRespStruct"/>
            </config>
            <pd:inputBindings>
                <ns46:StartHoldRespStruct>
                    <xsl:choose>
                        <xsl:when test="exists($_error_SOAPEventSource)">
                            <ns46:StatusResponsePS>
                                <ns46:ResultCode>
                                    <xsl:value-of select="1"/>
                                </ns46:ResultCode>
                                <ns46:ErrorDescription>
                                    <xsl:value-of select="&quot;Technical Error&quot;"/>
                                </ns46:ErrorDescription>
                            </ns46:StatusResponsePS>
                        </xsl:when>
                        <xsl:when test="exists($_error_Call-Process)">
                            <ns46:StatusResponsePS>
                                <ns46:ResultCode>
                                    <xsl:value-of select="1"/>
                                </ns46:ResultCode>
                                <ns46:ErrorDescription>
                                    <xsl:value-of select="&quot;Functional Error&quot;"/>
                                </ns46:ErrorDescription>
                            </ns46:StatusResponsePS>
                        </xsl:when>
                        <xsl:when test="exists($_error_Parse-Response)">
                            <ns46:StatusResponsePS>
                                <ns46:ResultCode>
                                    <xsl:value-of select="1"/>
                                </ns46:ResultCode>
                                <ns46:ErrorDescription>
                                    <xsl:value-of select="&quot;Technical Error&quot;"/>
                                </ns46:ErrorDescription>
                            </ns46:StatusResponsePS>
                        </xsl:when>
                        <xsl:when test="exists($_error_Send-Soap-Reply)">
                            <ns46:StatusResponsePS>
                                <ns46:ResultCode>
                                    <xsl:value-of select="1"/>
                                </ns46:ResultCode>
                                <ns46:ErrorDescription>
                                    <xsl:value-of select="&quot;Technical Error&quot;"/>
                                </ns46:ErrorDescription>
                            </ns46:StatusResponsePS>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns46:StatusResponsePS>
                                <ns46:ResultCode>
                                    <xsl:value-of select="2"/>
                                </ns46:ResultCode>
                                <ns46:ErrorDescription>
                                    <xsl:value-of select="&quot;Functional Error&quot;"/>
                                </ns46:ErrorDescription>
                            </ns46:StatusResponsePS>
                        </xsl:otherwise>
                    </xsl:choose>
                </ns46:StartHoldRespStruct>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Soap Err Reply">
            <pd:type>com.tibco.plugin.soap.SOAPSendReplyActivity</pd:type>
            <pd:resourceType>ae.activities.SOAPSendReplyUI</pd:resourceType>
            <pd:x>706</pd:x>
            <pd:y>331</pd:y>
            <config>
                <eventSource>SOAPEventSource</eventSource>
            </config>
            <pd:inputBindings>
                <outputMessage>
                    <ns46:EcnsStartHoldResp>
                        <xsl:copy-of select="$Map-Soap-Err-Reply/ns46:StartHoldRespStruct"/>
                    </ns46:EcnsStartHoldResp>
                </outputMessage>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log Soap Err Reply">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>706</pd:x>
            <pd:y>463</pd:y>
            <config>
                <processName>/Common/Sub Processes/Sub_Trace.process</processName>
            </config>
            <pd:inputBindings>
                <TraceIn>
                    <MsgCode>
                        <xsl:value-of select="&quot;EClips-04013&quot;"/>
                    </MsgCode>
                    <xsl:if test="$Create-Msg-ID/Guid_field">
                        <MsgId>
                            <xsl:value-of select="$Create-Msg-ID/Guid_field"/>
                        </MsgId>
                    </xsl:if>
                    <Parameter>
                        <xsl:value-of select="tib:render-xml($Map-Soap-Err-Reply/ns46:StartHoldRespStruct, false(), true())"/>
                    </Parameter>
                </TraceIn>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Ignore errors">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>555</pd:x>
        <pd:y>601</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Try Catch process</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Try Catch process</pd:from>
        <pd:to>Error try catch process</pd:to>
        <pd:xpathDescription>ERROR</pd:xpathDescription>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Error try catch process</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Error try catch process</pd:from>
        <pd:to>Ignore errors</pd:to>
        <pd:xpathDescription>ERROR</pd:xpathDescription>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Ignore errors</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPEventSource</pd:from>
        <pd:to>Try Catch process</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPEventSource</pd:from>
        <pd:to>Error try catch process</pd:to>
        <pd:xpathDescription>ERROR</pd:xpathDescription>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>