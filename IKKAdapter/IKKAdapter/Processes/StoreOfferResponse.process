<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://wsdl.kpn.com/fixed/ckradapter/FindCustomer.wsdl" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx2="urn:FIND_CUSTOMER" xmlns:ns="http://www.tibco.com/pe/EngineTypes" xmlns:pfx3="http://xmlns.kpn.com/fixed/ckradapter/request/FindCustomer.xsd" xmlns:pfx4="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" xmlns:ns1="http://xmlns.kpn.com/common/cdm/Base.xsd" xmlns:ns2="http://xmlns.kpn.com/fixed/ckradapter/common/CKRResponse.xsd" xmlns:ns3="http://xmlns.kpn.com/fixed/ckradapter/common/Customer.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns5="http://xmlns.kpn.com/fixed/ckradapter/common/CKRRequest.xsd" xmlns:pfx5="http://xmlns.kpn.com/fixed/ckradapter/common/CustomerReference.xsd" xmlns:pfx6="http://xmlns.kpn.com/fixed/ckradapter/common/ExternalCustomerReference.xsd" xmlns:pfx7="http://xmlns.kpn.com/fixed/ckradapter/common/PropertyAddress.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns6="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" xmlns:pfx8="urn:FindCustomer" xmlns:pfx9="http://xmlns.example.com/unique/default/namespace/1095237788188" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx10="urn:GetCustomerDetails" xmlns:pfx11="http://xmlns.kpn.com/fixed/ckradapter/request/GetCustomerDetails.xsd" xmlns:pfx12="http://xmlns.kpn.com/fixed/ckradapter/response/GetCustomerDetails.xsd" xmlns:ns7="http://xmlns.kpn.com/fixed/ckradapter/common/OrganizationName.xsd" xmlns:ns8="http://xmlns.kpn.com/fixed/ckradapter/common/IndividualName.xsd" xmlns:ns12="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx13="http://xmlns.kpn.com/common/cdm/ErrorMessage.xsd" xmlns:pfx14="urn:GET_CUSTOMER_DETAILS" xmlns:eai="java://com.kpn.eai.component.common.CommonXPathFunctions" xmlns:ns9="http://xmlns.kpn.com/eai/common/errors" xmlns:ns10="http://schemas.tibco.com/bw/plugins/soap/5.0/SoapPluginExceptions" xmlns:ns11="http://xmlns.tibco.com/encodings/mime" xmlns:ns13="http://xmlns.kpn.com/fixed/CustomerServices/Request/FindCustomer.xsd" xmlns:pfx15="http://xmlns.kpn.com/fixed/CustomerServices/Response/FindCustomer.xsd" xmlns:ns14="http://xmlns.kpn.com/fixed/CustomerServices/common/PropertyAddress.xsd" xmlns:pfx16="http://www.kpn.com/EpiphanyConsumerConnector/GetInboundOffers" xmlns:pfx17="http://xmlns.kpn.com/fixed/EpiphanyINAAdapter/Response/GetInboundOffers.xsd" xmlns:ns15="http://xmlns.kpn.com/fixed/EpiphanyINAAdapter/Request/GetInboundOffers.xsd" xmlns:pfx18="http://www.kpn.com/EpiphanyConsumerConnector/StoreOfferResponse" xmlns:ns16="http://xmlns.kpn.com/fixed/EpiphanyINAAdapter/Request/StoreOfferResponse.xsd" xmlns:pfx19="http://xmlns.kpn.com/fixed/EpiphanyINAAdapter/Response/StoreOfferResponse.xsd" xmlns:ns17="http://xmlns.kpn.com/common/cdm/ResultStatus2.xsd" xmlns:pfx20="http://www.kpn.com/EpiphanyBusinessConnector/StoreOfferResponse">
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/FindCustomer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" schemaLocation="/XSDSchemas/Common/ResultStatus.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/Base.xsd" schemaLocation="/XSDSchemas/Common/Base.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ErrorMessage.xsd" schemaLocation="/XSDSchemas/Common/ErrorMessage.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/response/GetCustomerDetails.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/GetCustomerDetails.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/request/GetCustomerDetails.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Request/GetCustomerDetails.xsd"/>
    <xsd:import namespace="urn:GET_CUSTOMER_DETAILS" schemaLocation="/WSDL/EpiphanyCRBAdapter/GetCustomerDetails.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/request/FindCustomer.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Request/FindCustomer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/CustomerServices/Request/FindCustomer.xsd" schemaLocation="/XSDSchemas/CustomerServices/Request/FindCustomer.xsd"/>
    <xsd:import namespace="urn:FIND_CUSTOMER" schemaLocation="/WSDL/EpiphanyCRBAdapter/FindCustomer.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/CustomerServices/Response/FindCustomer.xsd" schemaLocation="/XSDSchemas/CustomerServices/Response/FindCustomer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EpiphanyINAAdapter/Response/GetInboundOffers.xsd" schemaLocation="/XSDSchemas/EpiphanyINAAdapter/Response/GetInboundOffers.xsd"/>
    <xsd:import namespace="http://www.kpn.com/EpiphanyConsumerConnector/GetInboundOffers" schemaLocation="/WSDL/IKKAdapter/GetInboundOffers.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EpiphanyINAAdapter/Request/GetInboundOffers.xsd" schemaLocation="/XSDSchemas/EpiphanyINAAdapter/Request/GetInboundOffers.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EpiphanyINAAdapter/Request/StoreOfferResponse.xsd" schemaLocation="/XSDSchemas/EpiphanyINAAdapter/Request/StoreOfferResponse.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EpiphanyINAAdapter/Response/StoreOfferResponse.xsd" schemaLocation="/XSDSchemas/EpiphanyINAAdapter/Response/StoreOfferResponse.xsd"/>
    <xsd:import namespace="http://www.kpn.com/EpiphanyBusinessConnector/StoreOfferResponse" schemaLocation="/WSDL/IKKAdapter/StoreOfferResponse.wsdl"/>
    <wsdl:import namespace="urn:FindCustomer" location="/WSDL/OARAdapter/FindCustomer.wsdl"/>
    <wsdl:import namespace="urn:GetCustomerDetails" location="/WSDL/OARAdapter/GetCustomerDetails.wsdl"/>
    <wsdl:import namespace="urn:GET_CUSTOMER_DETAILS" location="/WSDL/EpiphanyCRBAdapter/GetCustomerDetails.wsdl"/>
    <wsdl:import namespace="urn:FIND_CUSTOMER" location="/WSDL/EpiphanyCRBAdapter/FindCustomer.wsdl"/>
    <wsdl:import namespace="http://www.kpn.com/EpiphanyConsumerConnector/GetInboundOffers" location="/WSDL/IKKAdapter/GetInboundOffers.wsdl"/>
    <wsdl:import namespace="http://www.kpn.com/EpiphanyBusinessConnector/StoreOfferResponse" location="/WSDL/IKKAdapter/StoreOfferResponse.wsdl"/>
    <pd:name>IKKAdapter/Processes/StoreOfferResponse.process</pd:name>
    <pd:description/>
    <pd:startName>SoapEvent</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="SoapEvent">
        <pd:type>com.tibco.plugin.soap.SOAPEventSource</pd:type>
        <pd:resourceType>ae.activities.SOAPEventSourceUI</pd:resourceType>
        <pd:description>Incoming soap request for service FindCustomer</pd:description>
        <pd:x>37</pd:x>
        <pd:y>114</pd:y>
        <config>
            <_eventTimeout>60000</_eventTimeout>
            <service>pfx20:StoreOfferResponsePortType</service>
            <operation>StoreOfferResponse</operation>
            <attachmentStyle>none</attachmentStyle>
            <wsdlNamespaceRoot>http://www.kpn.com/EpiphanyBusinessConnector/StoreOfferResponse/StoreOfferResponseImpl</wsdlNamespaceRoot>
            <operationStyle>document</operationStyle>
            <soapUse>literal</soapUse>
            <inputNamespace/>
            <outputNamespace/>
            <faultNamespace/>
            <embedWsdlComponents>true</embedWsdlComponents>
            <embedSchemaComponents>true</embedSchemaComponents>
            <soapAction>""</soapAction>
            <sharedChannel>/IKKAdapter/Shared Resources/IKK SOAP HTTP Connection.sharedhttp</sharedChannel>
            <sharedChannels>
                <httpChannel>
                    <useBasicAuthentication>false</useBasicAuthentication>
                </httpChannel>
            </sharedChannels>
            <portAddressPrefix/>
            <inputAttachmentBindings/>
            <outputAttachmentBindings/>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1027</pd:endX>
    <pd:endY>118</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:activity name="Log Error">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>511</pd:x>
        <pd:y>352</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_ErrorTrace.process</processName>
        </config>
        <pd:inputBindings>
            <ErrorTraceIn>
                <ns9:Errors>
                    <xsl:choose>
                        <xsl:when test="exists($_error_SoapEvent)">
                            <ns9:Error>
                                <ns9:MsgCode>
                                    <xsl:value-of select="&quot;IKK-03005&quot;"/>
                                </ns9:MsgCode>
                                <ns9:Params>
                                    <xsl:value-of select="&quot;StoreOfferResponse&quot;"/>
                                </ns9:Params>
                                <ns9:ErrorReport>
                                    <xsl:copy-of select="$_error/ns:ErrorReport/ancestor-or-self::*/namespace::node()"/>
                                    <xsl:copy-of select="$_error/ns:ErrorReport/@*"/>
                                    <xsl:copy-of select="$_error/ns:ErrorReport/node()"/>
                                </ns9:ErrorReport>
                            </ns9:Error>
                        </xsl:when>
                        <xsl:when test="exists($_error_Call_ina)">
                            <xsl:copy-of select="$_error_Call_ina/ns9:Error"/>
                        </xsl:when>
                        <xsl:when test="exists($_error_Parse-Response)">
                            <ns9:Error>
                                <ns9:MsgCode>
                                    <xsl:value-of select="&quot;IKK-03006&quot;"/>
                                </ns9:MsgCode>
                                <ns9:Params>
                                    <xsl:value-of select="&quot;StoreOfferResponse&quot;"/>
                                </ns9:Params>
                                <xsl:if test="$CreateMsgID/Guid_field">
                                    <ns9:MsgId>
                                        <xsl:value-of select="$CreateMsgID/Guid_field"/>
                                    </ns9:MsgId>
                                </xsl:if>
                                <ns9:ErrorReport>
                                    <xsl:copy-of select="$_error/ns:ErrorReport/ancestor-or-self::*/namespace::node()"/>
                                    <xsl:copy-of select="$_error/ns:ErrorReport/@*"/>
                                    <xsl:copy-of select="$_error/ns:ErrorReport/node()"/>
                                </ns9:ErrorReport>
                                <xsl:if test="exists($_error_Parse-Response/ActivityErrors)">
                                    <ns9:ActivityError>
                                        <xsl:copy-of select="$_error_Parse-Response/ActivityErrors/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$_error_Parse-Response/ActivityErrors/@*"/>
                                        <xsl:copy-of select="$_error_Parse-Response/ActivityErrors/node()"/>
                                    </ns9:ActivityError>
                                </xsl:if>
                            </ns9:Error>
                        </xsl:when>
                        <xsl:when test="exists($_error_Soap-Reply)">
                            <ns9:Error>
                                <ns9:MsgCode>
                                    <xsl:value-of select="&quot;IKK-03007&quot;"/>
                                </ns9:MsgCode>
                                <ns9:Params>
                                    <xsl:value-of select="&quot;StoreOfferResponse&quot;"/>
                                </ns9:Params>
                                <xsl:if test="$CreateMsgID/Guid_field">
                                    <ns9:MsgId>
                                        <xsl:value-of select="$CreateMsgID/Guid_field"/>
                                    </ns9:MsgId>
                                </xsl:if>
                                <ns9:ErrorReport>
                                    <xsl:copy-of select="$_error/ns:ErrorReport/ancestor-or-self::*/namespace::node()"/>
                                    <xsl:copy-of select="$_error/ns:ErrorReport/@*"/>
                                    <xsl:copy-of select="$_error/ns:ErrorReport/node()"/>
                                </ns9:ErrorReport>
                                <xsl:if test="exists($_error_Soap-Reply/ns10:ServerException)">
                                    <ns9:ApplicationError>
                                        <xsl:copy-of select="$_error_Soap-Reply/ns10:ServerException/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$_error_Soap-Reply/ns10:ServerException/@*"/>
                                        <xsl:copy-of select="$_error_Soap-Reply/ns10:ServerException/node()"/>
                                    </ns9:ApplicationError>
                                </xsl:if>
                            </ns9:Error>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns9:Error>
                                <ns9:MsgCode>
                                    <xsl:value-of select="&quot;IKK-03008&quot;"/>
                                </ns9:MsgCode>
                                <ns9:Params>
                                    <xsl:value-of select="&quot;StoreOfferResponse&quot;"/>
                                </ns9:Params>
                                <xsl:if test="$CreateMsgID/Guid_field">
                                    <ns9:MsgId>
                                        <xsl:value-of select="$CreateMsgID/Guid_field"/>
                                    </ns9:MsgId>
                                </xsl:if>
                                <ns9:ErrorReport>
                                    <xsl:copy-of select="$_error/ancestor-or-self::*/namespace::node()"/>
                                    <xsl:copy-of select="$_error/@*"/>
                                    <xsl:copy-of select="$_error/node()"/>
                                </ns9:ErrorReport>
                                <xsl:if test="$_error_Parse-Response">
                                    <ns9:ActivityError>
                                        <xsl:copy-of select="$_error_Parse-Response/ActivityErrors/ancestor-or-self::*/namespace::node()"/>
                                        <xsl:copy-of select="$_error_Parse-Response/ActivityErrors/@*"/>
                                        <xsl:copy-of select="$_error_Parse-Response/ActivityErrors/node()"/>
                                    </ns9:ActivityError>
                                </xsl:if>
                            </ns9:Error>
                        </xsl:otherwise>
                    </xsl:choose>
                </ns9:Errors>
            </ErrorTraceIn>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Try Catch process">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>117</pd:x>
        <pd:y>16</pd:y>
        <pd:width>788</pd:width>
        <pd:height>191</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>CreateMsgID</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Soap Reply</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:description>no trace </pd:description>
            <pd:from>CreateMsgID</pd:from>
            <pd:to>Call_ina</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Call_ina</pd:from>
            <pd:to>Parse Response</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:description>Trace (activity role) incoming SOAP message from EpiphanyCRB</pd:description>
            <pd:from>CreateMsgID</pd:from>
            <pd:to>Log Soap Request</pd:to>
            <pd:xpathDescription>Trace</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>eai:isTraceOn('IKK-04001')</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Log Soap Request</pd:from>
            <pd:to>Call_ina</pd:to>
            <pd:xpathDescription/>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Parse Response</pd:from>
            <pd:to>Map Soap Reply</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map Soap Reply</pd:from>
            <pd:to>Log Soap Response</pd:to>
            <pd:xpathDescription>Trace</pd:xpathDescription>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>eai:isTraceOn('IKK-04002')</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Log Soap Response</pd:from>
            <pd:to>Soap Reply</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map Soap Reply</pd:from>
            <pd:to>Soap Reply</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:activity name="CreateMsgID">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:description>Create unique gui id.</pd:description>
            <pd:x>179</pd:x>
            <pd:y>76</pd:y>
            <config>
                <element>
                    <xsd:element name="Guid_field" type="xsd:string"/>
                </element>
            </config>
            <pd:inputBindings>
                <Guid_field>
                    <xsl:value-of select="eai:createGUID()"/>
                </Guid_field>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Call_ina">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:description>RV Request to CustomerServices</pd:description>
            <pd:x>385</pd:x>
            <pd:y>74</pd:y>
            <config>
                <processName>/Common/Sub Processes/Sub_Requester.process</processName>
            </config>
            <pd:inputBindings>
                <RequesterIn>
                    <Destination>
                        <xsl:value-of select="concat($_globalVariables/ns4:GlobalVariables/Env, &#xA;&quot;.&quot;,&#xA; $_globalVariables/ns4:GlobalVariables/IKKAdapter/InAAdapter/MsgSubject,&quot;.StoreOfferResponse.1&quot;)"/>
                    </Destination>
                    <Timeout>
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IKKAdapter/InAAdapter/TimeOut"/>
                    </Timeout>
                    <Body>
                        <ns16:StoreOfferResponse>
                            <ns1:CMH>
                                <ns1:ID>
                                    <xsl:value-of select="&quot;495&quot;"/>
                                </ns1:ID>
                                <ns1:NAME>
                                    <xsl:value-of select="&quot;StoreOfferResponse&quot;"/>
                                </ns1:NAME>
                                <ns1:FID>
                                    <xsl:value-of select="concat($SoapEvent/inputMessage/pfx20:StoreOfferResponseRequest/pfx20:item[1]/pfx20:CkrNr &#xA;,&quot;,&quot;&#xA;, $SoapEvent/inputMessage/pfx20:StoreOfferResponseRequest/pfx20:item[1]/pfx20:MobielNummer   )"/>
                                </ns1:FID>
                                <ns1:MID>
                                    <xsl:value-of select="&quot;495.10&quot;"/>
                                </ns1:MID>
                                <ns1:PARADIGM>
                                    <xsl:value-of select="&quot;REQUEST&quot;"/>
                                </ns1:PARADIGM>
                                <ns1:OBJECT>
                                    <xsl:value-of select="&quot;OfferResponse&quot;"/>
                                </ns1:OBJECT>
                                <ns1:VERSION>
                                    <xsl:value-of select="&quot;1.0&quot;"/>
                                </ns1:VERSION>
                                <ns1:FROM>
                                    <xsl:attribute name="ns1:COMPONENT_ID">
                                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/Common/ComponentId"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="ns1:COMPONENT_VERSION">
                                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/Common/ComponentVersion"/>
                                    </xsl:attribute>
                                </ns1:FROM>
                                <ns1:TO>
                                    <xsl:attribute name="ns1:DESTINATION">
                                        <xsl:value-of select="concat($_globalVariables/ns4:GlobalVariables/Env&#xA;, &quot;.&quot;&#xA;, $_globalVariables/ns4:GlobalVariables/IKKAdapter/InAAdapter/MsgSubject,&quot;.StoreOfferResponse.1&quot;)"/>
                                    </xsl:attribute>
                                </ns1:TO>
                                <ns1:TRACKING>
                                    <ns1:MESSAGE_ID>
                                        <xsl:value-of select="$CreateMsgID/Guid_field"/>
                                    </ns1:MESSAGE_ID>
                                    <ns1:ITEM>
                                        <xsl:attribute name="ns1:APPINFO">
                                            <xsl:value-of select="concat( $_globalVariables/ns4:GlobalVariables/IKKAdapter/ComponentID, &quot;.&quot;, $_globalVariables/ns4:GlobalVariables/IKKAdapter/ComponentDomain)"/>
                                        </xsl:attribute>
                                        <xsl:attribute name="ns1:EVENT">
                                            <xsl:value-of select="&quot;StoreOfferResponse&quot;"/>
                                        </xsl:attribute>
                                        <xsl:attribute name="ns1:TIMESTAMP">
                                            <xsl:value-of select="tib:timestamp()"/>
                                        </xsl:attribute>
                                    </ns1:ITEM>
                                </ns1:TRACKING>
                            </ns1:CMH>
                            <xsl:for-each select="$SoapEvent/inputMessage/pfx20:StoreOfferResponseRequest/pfx20:item">
                                <ns16:OFFER_RESPONSE>
                                    <ns16:RUNTIME_PARAMETER>
                                        <ns16:SERVER_ID>
                                            <xsl:value-of select="current()/pfx20:ServerId"/>
                                        </ns16:SERVER_ID>
                                        <ns16:SESSION_ID>
                                            <xsl:value-of select="current()/pfx20:SessionId"/>
                                        </ns16:SESSION_ID>
                                    </ns16:RUNTIME_PARAMETER>
                                    <xsl:if test="(exists(current()/pfx20:ContextString) &#xA;&#x9;and not(empty(current()/pfx20:ContextString)))&#xA;or &#xA;(exists(current()/pfx20:Reden) &#xA;&#x9;and not(empty(current()/pfx20:Reden)))">
                                        <ns16:CONTEXT>
                                            <xsl:if test="current()/pfx20:ContextString">
                                                <ns16:DESCRIPTION>
                                                    <xsl:value-of select="current()/pfx20:ContextString"/>
                                                </ns16:DESCRIPTION>
                                            </xsl:if>
                                            <xsl:if test="current()/pfx20:Reden">
                                                <ns16:REASON>
                                                    <xsl:value-of select="current()/pfx20:Reden"/>
                                                </ns16:REASON>
                                            </xsl:if>
                                        </ns16:CONTEXT>
                                    </xsl:if>
                                    <xsl:if test="exists(current()/pfx20:CkrNr)&#xA;and&#xA;not(current()/pfx20:CkrNr=&quot;&quot;)">
                                        <ns16:CUSTOMER>
                                            <xsl:if test="current()/pfx20:CkrNr">
                                                <ns16:ID>
                                                    <xsl:attribute name="ns16:CONTEXT">
                                                        <xsl:value-of select="&quot;Fixed&quot;"/>
                                                    </xsl:attribute>
                                                    <xsl:value-of select="current()/pfx20:CkrNr"/>
                                                </ns16:ID>
                                            </xsl:if>
                                        </ns16:CUSTOMER>
                                    </xsl:if>
                                    <xsl:if test="exists(current()/pfx20:MobielNummer)&#xA;and&#xA;not(current()/pfx20:MobielNummer=&quot;&quot;)">
                                        <ns16:MOBILE_CONNECTION>
                                            <xsl:if test="current()/pfx20:MobielNummer">
                                                <ns16:INA_ID>
                                                    <xsl:value-of select="current()/pfx20:MobielNummer"/>
                                                </ns16:INA_ID>
                                            </xsl:if>
                                        </ns16:MOBILE_CONNECTION>
                                    </xsl:if>
                                    <ns16:SALES_CHANNEL>
                                        <ns16:DOMAIN>
                                            <xsl:value-of select="current()/pfx20:ChannelType"/>
                                        </ns16:DOMAIN>
                                        <xsl:if test="current()/pfx20:ChannelId">
                                            <ns16:ID>
                                                <xsl:value-of select="current()/pfx20:ChannelId"/>
                                            </ns16:ID>
                                        </xsl:if>
                                    </ns16:SALES_CHANNEL>
                                    <xsl:if test="exists(current()/pfx20:TeamId)&#xA;and not(empty(current()/pfx20:TeamId))">
                                        <ns16:ORGANIZATION>
                                            <xsl:if test="current()/pfx20:TeamId">
                                                <ns16:TEAM_ID>
                                                    <xsl:value-of select="current()/pfx20:TeamId"/>
                                                </ns16:TEAM_ID>
                                            </xsl:if>
                                        </ns16:ORGANIZATION>
                                    </xsl:if>
                                    <ns16:PRODUCT_OFFERING>
                                        <ns16:NAME>
                                            <xsl:value-of select="current()/pfx20:OfferNaam"/>
                                        </ns16:NAME>
                                        <ns16:STATUS>
                                            <xsl:value-of select="current()/pfx20:OfferStatus"/>
                                        </ns16:STATUS>
                                    </ns16:PRODUCT_OFFERING>
                                </ns16:OFFER_RESPONSE>
                            </xsl:for-each>
                        </ns16:StoreOfferResponse>
                    </Body>
                </RequesterIn>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Parse Response">
            <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
            <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
            <pd:x>475</pd:x>
            <pd:y>76</pd:y>
            <config>
                <inputStyle>text</inputStyle>
                <xsdVersion>default</xsdVersion>
                <validateOutput>true</validateOutput>
                <term ref="pfx19:StoreOfferResponse"/>
            </config>
            <pd:inputBindings>
                <xmlString>
                    <xsl:value-of select="$Call_ina/RequesterOut/Body"/>
                </xmlString>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log Soap Request">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:description>Log incoming SOAP request for service FindCustomer</pd:description>
            <pd:x>298</pd:x>
            <pd:y>134</pd:y>
            <config>
                <processName>/Common/Sub Processes/Sub_Trace.process</processName>
            </config>
            <pd:inputBindings>
                <TraceIn>
                    <MsgCode>
                        <xsl:value-of select="&quot;IKK-04001&quot;"/>
                    </MsgCode>
                    <MsgId>
                        <xsl:value-of select="$CreateMsgID/Guid_field"/>
                    </MsgId>
                    <Parameter>
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IKKAdapter/Outbound/SOAP/Port"/>
                    </Parameter>
                    <Parameter>
                        <xsl:value-of select="tib:render-xml($SoapEvent/inputMessage/pfx20:StoreOfferResponseRequest, false(), true())"/>
                    </Parameter>
                </TraceIn>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Map Soap Reply">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:description>Map incoming RV Response to Outgoing SOAP response</pd:description>
            <pd:x>619</pd:x>
            <pd:y>76</pd:y>
            <config>
                <element ref="pfx20:StoreOfferResponseResponse"/>
            </config>
            <pd:inputBindings>
                <pfx20:StoreOfferResponseResponse>
                    <pfx20:item>
                        <pfx20:STATUS_CODE>
                            <xsl:value-of select="$Parse-Response/pfx19:StoreOfferResponse/pfx19:RESULT_STATUS/ns17:STATUS_CODE"/>
                        </pfx20:STATUS_CODE>
                        <xsl:if test="$Parse-Response/pfx19:StoreOfferResponse/pfx19:RESULT_STATUS/ns17:ERROR_CODE">
                            <pfx20:ERROR_CODE>
                                <xsl:value-of select="$Parse-Response/pfx19:StoreOfferResponse/pfx19:RESULT_STATUS/ns17:ERROR_CODE"/>
                            </pfx20:ERROR_CODE>
                        </xsl:if>
                        <xsl:if test="$Parse-Response/pfx19:StoreOfferResponse/pfx19:RESULT_STATUS/ns17:ERROR_DESCRIPTION">
                            <pfx20:ERROR_DESCRIPTION>
                                <xsl:value-of select="$Parse-Response/pfx19:StoreOfferResponse/pfx19:RESULT_STATUS/ns17:ERROR_DESCRIPTION"/>
                            </pfx20:ERROR_DESCRIPTION>
                        </xsl:if>
                    </pfx20:item>
                    <xsl:for-each select="$Parse-Response/pfx19:StoreOfferResponse/pfx19:RESULT_STATUS/ns17:STATUS_MSG">
                        <pfx20:item>
                            <pfx20:STATUS_CODE>
                                <xsl:value-of select="current()/ns17:STATUS_CODE"/>
                            </pfx20:STATUS_CODE>
                            <pfx20:MSG_CODE>
                                <xsl:value-of select="current()/ns17:MSG_CODE"/>
                            </pfx20:MSG_CODE>
                            <pfx20:ERROR_DESCRIPTION>
                                <xsl:value-of select="concat(current()/ns17:SERVICE_NAME, current()/ns17:IDENTIFIER[1],current()/ns17:DESCRIPTION)"/>
                            </pfx20:ERROR_DESCRIPTION>
                        </pfx20:item>
                    </xsl:for-each>
                </pfx20:StoreOfferResponseResponse>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log Soap Response">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:description>Trace outgoing SOAP message</pd:description>
            <pd:x>765</pd:x>
            <pd:y>149</pd:y>
            <config>
                <processName>/Common/Sub Processes/Sub_Trace.process</processName>
            </config>
            <pd:inputBindings>
                <TraceIn>
                    <MsgCode>
                        <xsl:value-of select="&quot;IKK-04002&quot;"/>
                    </MsgCode>
                    <MsgId>
                        <xsl:value-of select="$CreateMsgID/Guid_field"/>
                    </MsgId>
                    <Parameter>
                        <xsl:value-of select="tib:render-xml($Map-Soap-Reply/pfx20:StoreOfferResponseResponse, false(), true())"/>
                    </Parameter>
                </TraceIn>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Soap Reply">
            <pd:type>com.tibco.plugin.soap.SOAPSendReplyActivity</pd:type>
            <pd:resourceType>ae.activities.SOAPSendReplyUI</pd:resourceType>
            <pd:x>832</pd:x>
            <pd:y>79</pd:y>
            <config>
                <eventSource>SoapEvent</eventSource>
            </config>
            <pd:inputBindings>
                <outputMessage>
                    <xsl:copy-of select="$Map-Soap-Reply/pfx20:StoreOfferResponseResponse"/>
                </outputMessage>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="IgnoreErr">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>1032</pd:x>
        <pd:y>343</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Map Soap Err Reply">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>622</pd:x>
        <pd:y>349</pd:y>
        <config>
            <element ref="pfx20:StoreOfferResponseResponse"/>
        </config>
        <pd:inputBindings>
            <pfx20:StoreOfferResponseResponse>
                <xsl:choose>
                    <xsl:when test="exists($_error_SoapEvent)">
                        <pfx20:item>
                            <pfx20:STATUS_CODE>
                                <xsl:value-of select="1"/>
                            </pfx20:STATUS_CODE>
                            <pfx20:MSG_CODE>
                                <xsl:value-of select="&quot;IKK-03005&quot;"/>
                            </pfx20:MSG_CODE>
                            <pfx20:ERROR_DESCRIPTION>
                                <xsl:value-of select="&quot;General SOAP request validation error&quot;"/>
                            </pfx20:ERROR_DESCRIPTION>
                        </pfx20:item>
                    </xsl:when>
                    <xsl:when test="exists($_error_Call_ina)">
                        <pfx20:item>
                            <pfx20:STATUS_CODE>
                                <xsl:value-of select="1"/>
                            </pfx20:STATUS_CODE>
                            <pfx20:MSG_CODE>
                                <xsl:value-of select="$_error_Call_ina/ns9:Error/ns9:MsgCode"/>
                            </pfx20:MSG_CODE>
                            <pfx20:ERROR_DESCRIPTION>
                                <xsl:value-of select="&quot;General RV error&quot;"/>
                            </pfx20:ERROR_DESCRIPTION>
                        </pfx20:item>
                    </xsl:when>
                    <xsl:when test="exists($Parse-Response)">
                        <pfx20:item>
                            <pfx20:STATUS_CODE>
                                <xsl:value-of select="1"/>
                            </pfx20:STATUS_CODE>
                            <pfx20:MSG_CODE>
                                <xsl:value-of select="&quot;IKK-03006&quot;"/>
                            </pfx20:MSG_CODE>
                            <pfx20:ERROR_DESCRIPTION>
                                <xsl:value-of select="&quot;General parse error&quot;"/>
                            </pfx20:ERROR_DESCRIPTION>
                        </pfx20:item>
                    </xsl:when>
                    <xsl:when test="exists($_error_Soap-Reply)">
                        <pfx20:item>
                            <pfx20:STATUS_CODE>
                                <xsl:value-of select="1"/>
                            </pfx20:STATUS_CODE>
                            <pfx20:MSG_CODE>
                                <xsl:value-of select="&quot;03007&quot;"/>
                            </pfx20:MSG_CODE>
                            <pfx20:ERROR_DESCRIPTION>
                                <xsl:value-of select="&quot;General SOAP reply error&quot;"/>
                            </pfx20:ERROR_DESCRIPTION>
                        </pfx20:item>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx20:item>
                            <pfx20:STATUS_CODE>
                                <xsl:value-of select="1"/>
                            </pfx20:STATUS_CODE>
                            <pfx20:MSG_CODE>
                                <xsl:value-of select="&quot;IKK-03008&quot;"/>
                            </pfx20:MSG_CODE>
                            <pfx20:ERROR_DESCRIPTION>
                                <xsl:value-of select="&quot;General error&quot;"/>
                            </pfx20:ERROR_DESCRIPTION>
                        </pfx20:item>
                    </xsl:otherwise>
                </xsl:choose>
            </pfx20:StoreOfferResponseResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Soap Err Reply">
        <pd:type>com.tibco.plugin.soap.SOAPSendReplyActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReplyUI</pd:resourceType>
        <pd:x>904</pd:x>
        <pd:y>344</pd:y>
        <config>
            <eventSource>SoapEvent</eventSource>
        </config>
        <pd:inputBindings>
            <outputMessage>
                <xsl:copy-of select="$Map-Soap-Err-Reply/pfx20:StoreOfferResponseResponse"/>
            </outputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log Soap Err Reply">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>789</pd:x>
        <pd:y>401</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_Trace.process</processName>
        </config>
        <pd:inputBindings>
            <TraceIn>
                <MsgCode>
                    <xsl:value-of select="&quot;IKK-04002&quot;"/>
                </MsgCode>
                <xsl:if test="$CreateMsgID/Guid_field">
                    <MsgId>
                        <xsl:value-of select="$CreateMsgID/Guid_field"/>
                    </MsgId>
                </xsl:if>
                <Parameter>
                    <xsl:value-of select="tib:render-xml($Map-Soap-Err-Reply/pfx20:StoreOfferResponseResponse, false(), true())"/>
                </Parameter>
            </TraceIn>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>SoapEvent</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SoapEvent</pd:from>
        <pd:to>Try Catch process</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Try Catch process</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>IgnoreErr</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log Error</pd:from>
        <pd:to>Map Soap Err Reply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Soap Err Reply</pd:from>
        <pd:to>Soap Err Reply</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Soap Err Reply</pd:from>
        <pd:to>Log Soap Err Reply</pd:to>
        <pd:xpathDescription>trace</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>eai:isTraceOn('IKK-04002')</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Log Soap Err Reply</pd:from>
        <pd:to>Soap Err Reply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Soap Err Reply</pd:from>
        <pd:to>IgnoreErr</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Soap Err Reply</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Soap Err Reply</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52378</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Try Catch process</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>