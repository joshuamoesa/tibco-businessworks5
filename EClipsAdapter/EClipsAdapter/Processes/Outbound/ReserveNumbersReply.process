<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://wsdl.kpn.com/fixed/ckradapter/FindCustomer.wsdl" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx2="urn:FIND_CUSTOMER" xmlns:ns="http://www.tibco.com/pe/EngineTypes" xmlns:pfx3="http://xmlns.kpn.com/fixed/ckradapter/request/FindCustomer.xsd" xmlns:pfx4="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" xmlns:ns1="http://xmlns.kpn.com/common/cdm/Base.xsd" xmlns:ns2="http://xmlns.kpn.com/fixed/ckradapter/common/CKRResponse.xsd" xmlns:ns3="http://xmlns.kpn.com/fixed/ckradapter/common/Customer.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns5="http://xmlns.kpn.com/fixed/ckradapter/common/CKRRequest.xsd" xmlns:pfx5="http://xmlns.kpn.com/fixed/ckradapter/common/CustomerReference.xsd" xmlns:pfx6="http://xmlns.kpn.com/fixed/ckradapter/common/ExternalCustomerReference.xsd" xmlns:pfx7="http://xmlns.kpn.com/fixed/ckradapter/common/PropertyAddress.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns6="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" xmlns:pfx8="urn:FindCustomer" xmlns:pfx9="http://xmlns.example.com/unique/default/namespace/1095237788188" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns7="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx10="urn:StartNumberInporting" xmlns:pfx11="http://xmlns.kpn.com/fixed/portingserviceswf/request/StartNumberInporting.xsd" xmlns:pfx12="http://xmlns.kpn.com/fixed/portingserviceswf/response/StartNumberInporting.xsd" xmlns:pfx13="http://xmlns.kpn.com/common/cdm/ErrorMessage.xsd" xmlns:pfx14="urn:NotifyNumberInportingComplete" xmlns:ns8="http://xmlns.kpn.com/fixed/ckradapter/common/OrganizationName.xsd" xmlns:ns82="http://xmlns.kpn.com/fixed/ckradapter/common/IndividualName.xsd" xmlns:ns83="http://xmlns.kpn.com/fixed/portingserviceswf/common/NumberSerie.xsd" xmlns:ns84="http://xmlns.kpn.com/fixed/portingserviceswf/common/TariffInfo.xsd" xmlns:pfx15="http://xmlns.kpn.com/fixed/portingserviceswf/request/StartNumberInPorting.xsd" xmlns:pfx16="http://xmlns.kpn.com/fixed/portingserviceswf/response/StartNumberInPorting.xsd" xmlns:ns9="http://xmlns.kpn.com/fixed/portingserviceswf/common/Customer.xsd" xmlns:ns10="http://xmlns.kpn.com/fixed/portingserviceswf/common/OrganizationName.xsd" xmlns:ns102="http://xmlns.kpn.com/fixed/portingserviceswf/common/IndividualName.xsd" xmlns:ns103="http://xmlns.kpn.com/fixed/portingserviceswf/common/PropertyAddress.xsd" xmlns:ns12="http://xmlns.kpn.com/fixed/portingserviceswf/common/ExternalCustomerReference.xsd" xmlns:ns11="http://xmlns.kpn.com/fixed/portingserviceswf/common/CustomerReference.xsd" xmlns:pfx17="urn:RequestPlannedNumberActivation" xmlns:pfx18="http://xmlns.kpn.com/fixed/coinadapter/request/RequestPlannedNumberActivation.xsd" xmlns:ns13="http://xmlns.tibco.com/encodings/mime" xmlns:pfx19="http://xmlns.kpn.com/fixed/coinadapter/response/RequestPlannedNumberActivation.xsd" xmlns:pfx20="urn:RequestPlannedNumberDeactivation" xmlns:pfx21="http://xmlns.kpn.com/fixed/coinadapter/request/RequestPlannedNumberDeactivation.xsd" xmlns:pfx22="http://xmlns.kpn.com/fixed/coinadapter/response/RequestPlannedNumberDeactivation.xsd" xmlns:eai="java://com.kpn.eai.component.common.CommonXPathFunctions" xmlns:ns14="http://xmlns.kpn.com/eai/common/errors" xmlns:pfx23="http://webservices.kpn-lls.com/V0.2/EcnsPortingServices.wsdl" xmlns:ns15="EcPsXsd_V0.2" xmlns:ns16="http://xmlns.kpn.com/fixed/portingserviceswf/request/RequestPlannedNumberDeactivation.xsd" xmlns:pfx24="http://xmlns.kpn.com/fixed/portingserviceswf/response/RequestPlannedNumberDeactivation.xsd" xmlns:ns17="http://xmlns.kpn.com/fixed/portingserviceswf/request/RequestPlannedNumberActivation.xsd" xmlns:pfx25="http://xmlns.kpn.com/fixed/portingserviceswf/response/RequestPlannedNumberActivation.xsd" xmlns:pfx26="http://xmlns.example.com/1180085627082" xmlns:pfx27="http://xmlns.example.com/1180085627082/OperationImpl" xmlns:ns18="http://xmlns.example.com/unique/default/namespace/1180085424414" xmlns:pfx28="http://xmlns.example.com/unique/default/namespace/1180085546999" xmlns:pfx29="http://webservices.kpn-lls.com/V0.2/EcnsOrdering.wsdl" xmlns:ns19="EcnsXsd_V0.2" xmlns:pfx30="http://xmlns.kpn.com/fixed/EClipsAdapter/Publish/PublishNumberOutportingComplete.xsd" xmlns:ns20="http://xmlns.kpn.com/EAI/fixed/0324_PublishNumberOutportingComplete/1.0/Publish" xmlns:pfx31="http://webservices.kpn-lls.com/V0.2/MmspOrdering.wsdl" xmlns:pfx32="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/CreateSubscriberResponse.xsd" xmlns:ns21="MmspXsd_V0.2" xmlns:ns22="http://xmlns.kpn.com/EAI/fixed/0292_CreateSubscriber/1.0/Response" xmlns:pfx33="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/ReserveNumbersResponse.xsd" xmlns:ns23="http://xmlns.kpn.com/EAI/fixed/0299_ReserveNumbers/1.0/Response" xmlns:pfx34="http://xmlns.kpn.com/Inbound/Subscribe/UpdateOrderStatus.xsd" xmlns:ns24="http://xmlns.kpn.com/imported/ordermessage.xsd">
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/FindCustomer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" schemaLocation="/XSDSchemas/Common/ResultStatus.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/Base.xsd" schemaLocation="/XSDSchemas/Common/Base.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/request/FindCustomer.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Request/FindCustomer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ErrorMessage.xsd" schemaLocation="/XSDSchemas/Common/ErrorMessage.xsd"/>
    <xsd:import namespace="urn:StartNumberInporting" schemaLocation="/WSDL/StartNumberInporting.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/request/StartNumberInPorting.xsd" schemaLocation="/XSDSchemas/PortingServices/Request/StartNumberInPorting.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/response/StartNumberInPorting.xsd" schemaLocation="/XSDSchemas/PortingServices/Response/StartNumberInPorting.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/request/StartNumberInPorting.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Request/StartNumberInPorting.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/response/StartNumberInPorting.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Response/StartNumberInPorting.xsd"/>
    <xsd:import namespace="EcPsXsd_V0.2" schemaLocation="/WSDL/EcnsPortingServices.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/request/RequestPlannedNumberDeactivation.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Request/RequestPlannedNumberDeactivation.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/response/RequestPlannedNumberDeactivation.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Response/RequestPlannedNumberDeactivation.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/request/RequestPlannedNumberActivation.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Request/RequestPlannedNumberActivation.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/response/RequestPlannedNumberActivation.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Response/RequestPlannedNumberActivation.xsd"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1180085424414" schemaLocation="/XSDSchemas/PortingServicesWF/Request/PublishNumberOutportingComplete.xsd"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1180085546999" schemaLocation="/XSDSchemas/PortingServicesWF/Response/PublishNumberOutportingComplete.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Publish/PublishNumberOutportingComplete.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Publish/PublishNumberOutportingComplete.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/CreateSubscriberResponse.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Response/CreateSubscriber.xsd"/>
    <xsd:import namespace="MmspXsd_V0.2" schemaLocation="/WSDL/MmspOrdering.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/ReserveNumbersResponse.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Response/ReserveNumbers.xsd"/>
    <xsd:import namespace="EcnsXsd_V0.2" schemaLocation="/WSDL/EcnsOrdering.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/Inbound/Subscribe/UpdateOrderStatus.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Response/UpdateOrderStatus.xsd"/>
    <wsdl:import namespace="urn:FindCustomer" location="/WSDL/OARAdapter/FindCustomer.wsdl"/>
    <wsdl:import namespace="urn:StartNumberInporting" location="/WSDL/StartNumberInporting.wsdl"/>
    <wsdl:import namespace="urn:RequestPlannedNumberActivation" location="/WSDL/RequestPlannedNumberActivation.wsdl"/>
    <wsdl:import namespace="urn:RequestPlannedNumberDeactivation" location="/WSDL/RequestPlannedNumberDeactivation.wsdl"/>
    <wsdl:import namespace="http://webservices.kpn-lls.com/V0.2/EcnsPortingServices.wsdl" location="/WSDL/EcnsPortingServices.wsdl"/>
    <wsdl:import namespace="http://xmlns.example.com/1180085627082/OperationImpl" location="/WSDL/PublishNumberOutportingComplete.wsdl"/>
    <wsdl:import namespace="http://webservices.kpn-lls.com/V0.2/MmspOrdering.wsdl" location="/WSDL/MmspOrdering.wsdl"/>
    <wsdl:import namespace="http://webservices.kpn-lls.com/V0.2/EcnsOrdering.wsdl" location="/WSDL/EcnsOrdering.wsdl"/>
    <pd:name>EClipsAdapter/Processes/Outbound/ReserveNumbersReply.process</pd:name>
    <pd:description>Start the planned numberActivation process</pd:description>
    <pd:startName>SOAPEvent</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="SOAPEvent">
        <pd:type>com.tibco.plugin.soap.SOAPEventSource</pd:type>
        <pd:resourceType>ae.activities.SOAPEventSourceUI</pd:resourceType>
        <pd:x>134</pd:x>
        <pd:y>311</pd:y>
        <config>
            <_eventTimeout>60000</_eventTimeout>
            <service>pfx29:EcnsOrdering</service>
            <operation>ResultReserveNumberSeriesOperation</operation>
            <attachmentStyle>none</attachmentStyle>
            <wsdlNamespaceRoot>http://webservices.kpn-lls.com/V0.2/EcnsOrdering.wsdl/ResultReserveNumberSeriesOperationImpl</wsdlNamespaceRoot>
            <operationStyle>document</operationStyle>
            <soapUse>literal</soapUse>
            <inputNamespace/>
            <outputNamespace/>
            <faultNamespace/>
            <embedWsdlComponents>true</embedWsdlComponents>
            <embedSchemaComponents>true</embedSchemaComponents>
            <soapAction>""</soapAction>
            <sharedChannel>/EClipsAdapter/Shared Resources/HTTP Server Connection.sharedhttp</sharedChannel>
            <sharedChannels>
                <httpChannel>
                    <useBasicAuthentication>%%EClipsAdapter/BasicAuthentication%%</useBasicAuthentication>
                </httpChannel>
            </sharedChannels>
            <useBasicAuthentication>%%EClipsAdapter/BasicAuthentication%%</useBasicAuthentication>
            <portAddressPrefix/>
            <inputAttachmentBindings/>
            <outputAttachmentBindings/>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1270</pd:endX>
    <pd:endY>309</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:activity name="SOAPReply">
        <pd:type>com.tibco.plugin.soap.SOAPSendReplyActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReplyUI</pd:resourceType>
        <pd:x>1129</pd:x>
        <pd:y>310</pd:y>
        <config>
            <eventSource>SOAPEvent</eventSource>
        </config>
        <pd:inputBindings>
            <outputMessage>
                <ns19:EcnsStandardResponse>
                    <ns19:ErrorCode>
                        <xsl:value-of select="0"/>
                    </ns19:ErrorCode>
                    <ns19:ErrorDescription>
                        <xsl:value-of select="&quot;ok&quot;"/>
                    </ns19:ErrorDescription>
                </ns19:EcnsStandardResponse>
            </outputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogSOAPResponse">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>1057</pd:x>
        <pd:y>198</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_Trace.process</processName>
        </config>
        <pd:inputBindings>
            <TraceIn>
                <MsgCode>
                    <xsl:value-of select="&quot;EClips-04005&quot;"/>
                </MsgCode>
                <xsl:choose>
                    <xsl:when test="exists($SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:RequestKey)">
                        <xsl:if test="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:RequestKey">
                            <MsgId>
                                <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:RequestKey"/>
                            </MsgId>
                        </xsl:if>
                    </xsl:when>
                    <xsl:otherwise>
                        <MsgId>
                            <xsl:value-of select="$Generate-MessageId/MessageId"/>
                        </MsgId>
                    </xsl:otherwise>
                </xsl:choose>
                <Parameter>
                    <xsl:value-of select="&quot;Published Message Successfully&quot;"/>
                </Parameter>
            </TraceIn>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Request Publish">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>976</pd:x>
        <pd:y>313</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_Publisher.process</processName>
        </config>
        <pd:inputBindings>
            <PublisherIn>
                <Destination>
                    <xsl:value-of select="$Fill-CMH/CMH/ns1:TO/@ns1:DESTINATION"/>
                </Destination>
                <Body>
                    <xsl:copy-of select="$Map-JMSPublish/pfx34:UpdateOrderStatus"/>
                </Body>
            </PublisherIn>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SOAPErrorReply">
        <pd:type>com.tibco.plugin.soap.SOAPSendReplyActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReplyUI</pd:resourceType>
        <pd:x>850</pd:x>
        <pd:y>563</pd:y>
        <config>
            <eventSource>SOAPEvent</eventSource>
        </config>
        <pd:inputBindings>
            <outputMessage>
                <xsl:copy-of select="$Map-Data/ns19:EcnsStandardResponse"/>
            </outputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="IgnoreErrorReply">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>995</pd:x>
        <pd:y>503</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Log Error">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>531</pd:x>
        <pd:y>564</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_ErrorTrace.process</processName>
        </config>
        <pd:inputBindings>
            <ErrorTraceIn>
                <ns14:Errors>
                    <xsl:choose>
                        <xsl:when test="exists($_error_Request-Publish)">
                            <xsl:copy-of select="$_error_Request-Publish/ns14:Error"/>
                        </xsl:when>
                        <xsl:when test="exists($_error_SOAPEvent)">
                            <ns14:Error>
                                <ns14:MsgCode>
                                    <xsl:value-of select="&quot;EClips-03001&quot;"/>
                                </ns14:MsgCode>
                                <xsl:if test="$_error/ns:ErrorReport/Msg">
                                    <ns14:Params>
                                        <xsl:value-of select="$_error/ns:ErrorReport/Msg"/>
                                    </ns14:Params>
                                </xsl:if>
                                <ns14:MsgId>
                                    <xsl:value-of select="eai:createGUID()"/>
                                </ns14:MsgId>
                                <ns:ErrorReport>
                                    <xsl:copy-of select="$_error/ns:ErrorReport/ancestor-or-self::*/namespace::node()"/>
                                    <xsl:copy-of select="$_error/ns:ErrorReport/@*"/>
                                    <xsl:copy-of select="$_error/ns:ErrorReport/node()"/>
                                </ns:ErrorReport>
                                <ns14:ActivityError>
                                    <xsl:copy-of select="$_error_SOAPEvent/ActivityErrors/ancestor-or-self::*/namespace::node()"/>
                                    <xsl:copy-of select="$_error_SOAPEvent/ActivityErrors/@*"/>
                                    <xsl:copy-of select="$_error_SOAPEvent/ActivityErrors/node()"/>
                                </ns14:ActivityError>
                            </ns14:Error>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns14:Error>
                                <ns14:MsgCode>
                                    <xsl:value-of select="&quot;EClips-03002&quot;"/>
                                </ns14:MsgCode>
                                <ns14:Params>
                                    <xsl:value-of select="if (exists($SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries)) then&#xA;tib:render-xml($SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries, false(), true())&#xA;else&#xA;tib:render-xml($_error/ns:ErrorReport/Data/*, false(), true())"/>
                                </ns14:Params>
                                <xsl:if test="$Generate-MessageId/MessageId">
                                    <ns14:MsgId>
                                        <xsl:value-of select="$Generate-MessageId/MessageId"/>
                                    </ns14:MsgId>
                                </xsl:if>
                                <xsl:copy-of select="$_error/ns:ErrorReport"/>
                            </ns14:Error>
                        </xsl:otherwise>
                    </xsl:choose>
                </ns14:Errors>
            </ErrorTraceIn>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map Data">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>718</pd:x>
        <pd:y>566</pd:y>
        <config>
            <element ref="ns19:EcnsStandardResponse"/>
        </config>
        <pd:inputBindings>
            <ns19:EcnsStandardResponse>
                <ns19:ErrorCode>
                    <xsl:value-of select="&quot;20&quot;"/>
                </ns19:ErrorCode>
                <ns19:ErrorDescription>
                    <xsl:value-of select="&quot;FUNCTIONAL ERROR&quot;"/>
                </ns19:ErrorDescription>
                <ns19:ErrorDetails>
                    <xsl:value-of select="$_error/ns:ErrorReport/Msg"/>
                </ns19:ErrorDetails>
            </ns19:EcnsStandardResponse>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogErrorSOAPReply">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>781</pd:x>
        <pd:y>680</pd:y>
        <config>
            <processName>/Common/Sub Processes/Sub_Trace.process</processName>
        </config>
        <pd:inputBindings>
            <TraceIn>
                <MsgCode>
                    <xsl:value-of select="&quot;EClips-04008&quot;"/>
                </MsgCode>
                <xsl:if test="$Generate-MessageId/MessageId">
                    <MsgId>
                        <xsl:value-of select="$Generate-MessageId/MessageId"/>
                    </MsgId>
                </xsl:if>
                <Parameter>
                    <xsl:value-of select="tib:render-xml($Map-Data/ns19:EcnsStandardResponse,  false(), true())"/>
                </Parameter>
            </TraceIn>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>347</pd:x>
        <pd:y>176</pd:y>
        <pd:width>520</pd:width>
        <pd:height>260</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Generate MessageId</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map JMSPublish</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogSOAPRequest</pd:from>
            <pd:to>Map JMSPublish</pd:to>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Generate MessageId</pd:from>
            <pd:to>Fill CMH</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Fill CMH</pd:from>
            <pd:to>LogSOAPRequest</pd:to>
            <pd:xpathDescription>Trace</pd:xpathDescription>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>eai:isTraceOn("EClips-04003")</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Fill CMH</pd:from>
            <pd:to>Map JMSPublish</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:activity name="LogSOAPRequest">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>635</pd:x>
            <pd:y>241</pd:y>
            <config>
                <processName>/Common/Sub Processes/Sub_Trace.process</processName>
            </config>
            <pd:inputBindings>
                <TraceIn>
                    <MsgCode>
                        <xsl:value-of select="&quot;EClips-04003&quot;"/>
                    </MsgCode>
                    <xsl:choose>
                        <xsl:when test="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:RequestKey">
                            <xsl:if test="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:RequestKey">
                                <MsgId>
                                    <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:RequestKey"/>
                                </MsgId>
                            </xsl:if>
                        </xsl:when>
                        <xsl:otherwise>
                            <MsgId>
                                <xsl:value-of select="$Generate-MessageId/MessageId"/>
                            </MsgId>
                        </xsl:otherwise>
                    </xsl:choose>
                    <Parameter>
                        <xsl:value-of select="tib:render-xml($SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries,false(), true())"/>
                    </Parameter>
                </TraceIn>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Map JMSPublish">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>769</pd:x>
            <pd:y>312</pd:y>
            <config>
                <element ref="pfx34:UpdateOrderStatus"/>
            </config>
            <pd:inputBindings>
                <pfx34:UpdateOrderStatus>
                    <xsl:for-each select="$Fill-CMH/CMH">
                        <ns1:CMH>
                            <ns1:ID>
                                <xsl:value-of select="ns1:ID"/>
                            </ns1:ID>
                            <ns1:NAME>
                                <xsl:value-of select="ns1:NAME"/>
                            </ns1:NAME>
                            <xsl:if test="ns1:FID">
                                <ns1:FID>
                                    <xsl:value-of select="ns1:FID"/>
                                </ns1:FID>
                            </xsl:if>
                            <xsl:if test="ns1:MID">
                                <ns1:MID>
                                    <xsl:value-of select="ns1:MID"/>
                                </ns1:MID>
                            </xsl:if>
                            <ns1:PARADIGM>
                                <xsl:value-of select="ns1:PARADIGM"/>
                            </ns1:PARADIGM>
                            <ns1:OBJECT>
                                <xsl:value-of select="ns1:OBJECT"/>
                            </ns1:OBJECT>
                            <ns1:VERSION>
                                <xsl:value-of select="ns1:VERSION"/>
                            </ns1:VERSION>
                            <xsl:for-each select="ns1:FROM">
                                <ns1:FROM>
                                    <xsl:attribute name="ns1:COMPONENT_ID">
                                        <xsl:value-of select="@ns1:COMPONENT_ID"/>
                                    </xsl:attribute>
                                    <xsl:if test="@ns1:COMPONENT_VERSION">
                                        <xsl:attribute name="ns1:COMPONENT_VERSION">
                                            <xsl:value-of select="@ns1:COMPONENT_VERSION"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="@ns1:END_USER_INFO">
                                        <xsl:attribute name="ns1:END_USER_INFO">
                                            <xsl:value-of select="@ns1:END_USER_INFO"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="@ns1:SOURCE_ADDRESS">
                                        <xsl:attribute name="ns1:SOURCE_ADDRESS">
                                            <xsl:value-of select="@ns1:SOURCE_ADDRESS"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                </ns1:FROM>
                            </xsl:for-each>
                            <xsl:for-each select="ns1:TO">
                                <ns1:TO>
                                    <xsl:attribute name="ns1:DESTINATION">
                                        <xsl:value-of select="@ns1:DESTINATION"/>
                                    </xsl:attribute>
                                </ns1:TO>
                            </xsl:for-each>
                            <xsl:for-each select="ns1:TRACKING">
                                <ns1:TRACKING>
                                    <xsl:choose>
                                        <xsl:when test="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:RequestKey">
                                            <ns1:MESSAGE_ID>
                                                <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:RequestKey"/>
                                            </ns1:MESSAGE_ID>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <ns1:MESSAGE_ID>
                                                <xsl:value-of select="ns1:MESSAGE_ID"/>
                                            </ns1:MESSAGE_ID>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:if test="ns1:EXTERNAL_REF">
                                        <ns1:EXTERNAL_REF>
                                            <xsl:value-of select="ns1:EXTERNAL_REF"/>
                                        </ns1:EXTERNAL_REF>
                                    </xsl:if>
                                    <xsl:for-each select="ns1:ITEM">
                                        <ns1:ITEM>
                                            <xsl:attribute name="ns1:APPINFO">
                                                <xsl:value-of select="@ns1:APPINFO"/>
                                            </xsl:attribute>
                                            <xsl:attribute name="ns1:EVENT">
                                                <xsl:value-of select="@ns1:EVENT"/>
                                            </xsl:attribute>
                                            <xsl:attribute name="ns1:TIMESTAMP">
                                                <xsl:value-of select="@ns1:TIMESTAMP"/>
                                            </xsl:attribute>
                                        </ns1:ITEM>
                                    </xsl:for-each>
                                    <xsl:for-each select="ns1:SEQUENCE_NO">
                                        <ns1:SEQUENCE_NO>
                                            <xsl:value-of select="."/>
                                        </ns1:SEQUENCE_NO>
                                    </xsl:for-each>
                                </ns1:TRACKING>
                            </xsl:for-each>
                            <ns1:ATTRIBUTE>
                                <xsl:attribute name="ns1:NAME">
                                    <xsl:value-of select="&quot;SENDER&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="ns1:VALUE">
                                    <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:EcnsHeaderStruct/ns19:Sender"/>
                                </xsl:attribute>
                            </ns1:ATTRIBUTE>
                            <ns1:ATTRIBUTE>
                                <xsl:attribute name="ns1:NAME">
                                    <xsl:value-of select="&quot;RECEIVER&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="ns1:VALUE">
                                    <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:EcnsHeaderStruct/ns19:Receiver"/>
                                </xsl:attribute>
                            </ns1:ATTRIBUTE>
                        </ns1:CMH>
                    </xsl:for-each>
                    <ns24:BODY>
                        <ORDER>
                            <ORDER_HEADER>
                                <ORDER_TYPE>
                                    <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/EClipsAdapter/ReplyParameters/ReserveNumbers/ORDER_TYPE"/>
                                </ORDER_TYPE>
                                <ORDER_ID>
                                    <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:NsnOrderId"/>
                                </ORDER_ID>
                                <CUSTOMER_ID>
                                    <ID_PACKAGER>
                                        <EXTERNAL>
                                            <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:PackagerCode"/>
                                        </EXTERNAL>
                                    </ID_PACKAGER>
                                </CUSTOMER_ID>
                                <EXTERNAL_REFERENCE>
                                    <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:PackagerOrderId"/>
                                </EXTERNAL_REFERENCE>
                                <ORDER_STATUS>
                                    <DELIVERY_STATUS_CODE>
                                        <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:EcnsOrderFeedbackStruct/ns19:OrderSituationCode"/>
                                    </DELIVERY_STATUS_CODE>
                                    <DELIVERY_STATUS_DESCRIPTION>
                                        <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:EcnsOrderFeedbackStruct/ns19:OrderSituationDescription"/>
                                    </DELIVERY_STATUS_DESCRIPTION>
                                    <DELIVERY_STATUS_ADDITIONAL_INFORMATION>
                                        <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:EcnsOrderFeedbackStruct/ns19:AdditionalSituationInfo"/>
                                    </DELIVERY_STATUS_ADDITIONAL_INFORMATION>
                                    <STATUS_CODE>
                                        <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:EcnsOrderFeedbackStruct/ns19:StatusCode"/>
                                    </STATUS_CODE>
                                    <STATUS_DESCRIPTION>
                                        <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:EcnsOrderFeedbackStruct/ns19:StatusDescription"/>
                                    </STATUS_DESCRIPTION>
                                </ORDER_STATUS>
                                <CREATION_DATE>
                                    <xsl:value-of select="current-dateTime()"/>
                                </CREATION_DATE>
                            </ORDER_HEADER>
                            <ORDER_ITEM>
                                <ORDER_ITEM_HEADER>
                                    <ORDER_ITEM_TYPE>
                                        <xsl:value-of select="&quot;PRODUCT&quot;"/>
                                    </ORDER_ITEM_TYPE>
                                </ORDER_ITEM_HEADER>
                                <PRODUCT_CATEGORY>
                                    <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/EClipsAdapter/ReplyParameters/ReserveNumbers/PRODUCT_CATEGORY"/>
                                </PRODUCT_CATEGORY>
                                <PRODUCT>
                                    <MULTI_MEDIA_PRODUCT>
                                        <SERVICES>
                                            <MULTI_MEDIA_SERVICE>
                                                <SERVICE_PROVIDER_ID>
                                                    <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:TelcoCode"/>
                                                </SERVICE_PROVIDER_ID>
                                            </MULTI_MEDIA_SERVICE>
                                        </SERVICES>
                                        <RESOURCES>
                                            <xsl:for-each select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:NumberSeriesList/ns19:NumberSeriesListItem">
                                                <PHONE_NUMBER_SERIES>
                                                    <NUMBER_HIGH>
                                                        <xsl:value-of select="ns19:NrHigh"/>
                                                    </NUMBER_HIGH>
                                                    <NUMBER_LOW>
                                                        <xsl:value-of select="ns19:NrLow"/>
                                                    </NUMBER_LOW>
                                                </PHONE_NUMBER_SERIES>
                                            </xsl:for-each>
                                        </RESOURCES>
                                    </MULTI_MEDIA_PRODUCT>
                                </PRODUCT>
                            </ORDER_ITEM>
                        </ORDER>
                    </ns24:BODY>
                </pfx34:UpdateOrderStatus>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Fill CMH">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>524</pd:x>
            <pd:y>313</pd:y>
            <config>
                <processName>/EClipsAdapter/Processes/Sub_FillCMH.process</processName>
            </config>
            <pd:inputBindings>
                <CMH-IN>
                    <NewCMH>
                        <ID>
                            <xsl:value-of select="&quot;0299&quot;"/>
                        </ID>
                        <NAME>
                            <xsl:value-of select="&quot;ReserveNumbers&quot;"/>
                        </NAME>
                        <FID>
                            <xsl:value-of select="$SOAPEvent/inputMessage/ns19:EcnsResultReserveNumberSeries/ns19:ResultReserveNumberSeriesReqStruct/ns19:PackagerOrderId"/>
                        </FID>
                        <MID>
                            <xsl:value-of select="&quot;704.31&quot;"/>
                        </MID>
                        <PARADIGM>
                            <xsl:value-of select="&quot;RESPONSE&quot;"/>
                        </PARADIGM>
                        <OBJECT>
                            <xsl:value-of select="&quot;PhoneNumbers&quot;"/>
                        </OBJECT>
                        <VERSION>
                            <xsl:value-of select="&quot;1.0&quot;"/>
                        </VERSION>
                        <COMPONENT-ID>
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/EClipsAdapter/ComponentId"/>
                        </COMPONENT-ID>
                        <COMPONENT-VERSION>
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/EClipsAdapter/ComponentVersion"/>
                        </COMPONENT-VERSION>
                        <DESTINATION>
                            <xsl:value-of select="concat($_globalVariables/ns4:GlobalVariables/Env,&quot;.FIXED.&quot;,$_globalVariables/ns4:GlobalVariables/EClipsAdapter/ComponentDomain,&quot;.&quot;,$_globalVariables/ns4:GlobalVariables/EClipsAdapter/ComponentId, &quot;.Response.ReserveNumbers.1&quot;)"/>
                        </DESTINATION>
                    </NewCMH>
                </CMH-IN>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Generate MessageId">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>427</pd:x>
            <pd:y>313</pd:y>
            <config>
                <element>
                    <xsd:element name="MessageId" type="xsd:string"/>
                </element>
            </config>
            <pd:inputBindings>
                <MessageId>
                    <xsl:value-of select="eai:createGUID()"/>
                </MessageId>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="IgnoreReply">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>1207</pd:x>
        <pd:y>200</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>LogSOAPResponse</pd:from>
        <pd:to>SOAPReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPErrorReply</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPReply</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Request Publish</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Request Publish</pd:from>
        <pd:to>LogSOAPResponse</pd:to>
        <pd:xpathDescription>Trace</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>eai:isTraceOn("EClips-04003")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Request Publish</pd:from>
        <pd:to>SOAPReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPErrorReply</pd:from>
        <pd:to>IgnoreErrorReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>IgnoreErrorReply</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log Error</pd:from>
        <pd:to>Map Data</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>SOAPErrorReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map Data</pd:from>
        <pd:to>LogErrorSOAPReply</pd:to>
        <pd:xpathDescription>Trace</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>eai:isTraceOn("EClips-04003")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>LogErrorSOAPReply</pd:from>
        <pd:to>SOAPErrorReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPEvent</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Request Publish</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPEvent</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Log Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPReply</pd:from>
        <pd:to>IgnoreReply</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>IgnoreReply</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>