<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:eai="java://com.kpn.eai.component.common.CommonXPathFunctions" xmlns:ns="http://www.tibco.com/pe/CheckpointSchema" xmlns:ns1="http://java.sun.com/products/oss/xml/Common" xmlns:ns2="http://java.sun.com/products/oss/xml/ServiceActivation" xmlns:pfx="http://xmlns.kpn.com/eai/common/errors" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:ns12="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx2="http://xmlns.kpn.com/fixed/xAuthorityAdapter/ModifyMultiMediaLocationRegistration.xsd" xmlns:ns4="http://xmlns.kpn.com/common/cdm/Base.xsd" xmlns:pfx3="http://xmlns.kpn.com/fixed/xAuthorityAdapter/ModifyMultiMediaSubscriptionRegistration.xsd" xmlns:ns5="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns6="http://Enterprise.BVoIPOSSJ.VoIP.BuildingBlocks.ServiceLibrary" xmlns:ns8="http://xmlns.kpn.com/fixed/xAuthorityAdapter/CreateMultiMediaCombinedRegistration.xsd" xmlns:pfx5="http://xmlns.kpn.com/Outbound/Publish/SubmitOrder.xsd" xmlns:ns7="http://xmlns.kpn.com/imported/ordermessage.xsd" xmlns:ns9="http://xmlns.kpn.com/EAI/fixed/xAuthorityAdapter/Product_Enterprise.xsd" xmlns:ns10="http://xmlns.kpn.com/imported/ordermessage_Site_Enterprise.xsd">
    <xsd:import namespace="http://xmlns.kpn.com/eai/common/errors" schemaLocation="/Common/Shared Resources/Errors.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/xAuthorityAdapter/ModifyMultiMediaLocationRegistration.xsd" schemaLocation="/XSDSchemas/xAuthorityAdapter/ModifyMultiMediaLocationRegistration.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/xAuthorityAdapter/ModifyMultiMediaSubscriptionRegistration.xsd" schemaLocation="/XSDSchemas/xAuthorityAdapter/ModifyMultiMediaSubscriptionRegistration.xsd"/>
    <xsd:import namespace="http://Enterprise.BVoIPOSSJ.VoIP.BuildingBlocks.ServiceLibrary" schemaLocation="/XSDSchemas/xAuthority/BVoIPEnterpriseDataServiceValue.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/xAuthorityAdapter/CreateMultiMediaCombinedRegistration.xsd" schemaLocation="/XSDSchemas/xAuthorityAdapter/CreateMultiMediaCombinedRegistration.xsd"/>
    <xsd:import namespace="http://java.sun.com/products/oss/xml/ServiceActivation" schemaLocation="/XSDSchemas/xAuthority/AllTypes.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/xAuthorityAdapter/Product_Enterprise.xsd" schemaLocation="/XSDSchemas/xAuthorityAdapter/Product_Enterprise.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/Outbound/Publish/SubmitOrder.xsd" schemaLocation="/XSDSchemas/xAuthorityAdapter/Publish/SubmitOrder.xsd"/>
    <pd:name>xAuthorityAdapter/Processes/Inbound/Subprocesses/OSS_Framework_Messages/CreateOrder_CMMSR_Enterprise.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx5:SubmitOrder"/>
    <pd:startX>55</pd:startX>
    <pd:startY>130</pd:startY>
    <pd:returnBindings>
        <output>
            <type>
                <xsl:value-of select="$Wait-for-createOrderByValueResponse/Group/ns2:createOrderByValueResponse/ns2:orderKey/ns1:type"/>
            </type>
            <primaryKey>
                <xsl:value-of select="$Wait-for-createOrderByValueResponse/Group/ns2:createOrderByValueResponse/ns2:orderKey/ns2:primaryKey"/>
            </primaryKey>
        </output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="output">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="type" type="xsd:string"/>
                    <xsd:element name="primaryKey" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>603</pd:endX>
    <pd:endY>129</pd:endY>
    <pd:errorSchemas>
        <Error ref="pfx:Error"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:activity name="JMS MessageID">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>150</pd:x>
        <pd:y>125</pd:y>
        <config>
            <element>
                <xsd:element name="JMS">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="messageID" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <JMS>
                <messageID>
                    <xsl:value-of select="eai:createGUID()"/>
                </messageID>
            </JMS>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Create Order">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>373</pd:x>
        <pd:y>129</pd:y>
        <config>
            <processName>/xAuthorityAdapter/Processes/Inbound/Subprocesses/Requests/createOrderByValueRequest.process</processName>
            <processNameXPath/>
        </config>
        <pd:inputBindings>
            <input>
                <correlationID>
                    <xsl:value-of select="$JMS-MessageID/JMS/messageID"/>
                </correlationID>
                <xsl:copy-of select="$Map-to-OSS-Enterprise/ns2:createOrderByValueRequest"/>
            </input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Wait for createOrderByValueResponse">
        <pd:type>com.tibco.plugin.waitnotify.WaitActivity</pd:type>
        <pd:resourceType>ae.activities.waitActivity</pd:resourceType>
        <pd:x>483</pd:x>
        <pd:y>132</pd:y>
        <config>
            <sharedConfig>/xAuthorityAdapter/Shared Resources/Inbound/Responses.sharednotify</sharedConfig>
        </config>
        <pd:inputBindings>
            <input>
                <key>
                    <xsl:value-of select="$JMS-MessageID/JMS/messageID"/>
                </key>
                <timeout>
                    <xsl:value-of select="$_globalVariables/ns5:GlobalVariables/xAuthorityAdapter/OSSJMessages/timeout"/>
                </timeout>
            </input>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Map-to-OSS-Enterprise">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>272</pd:x>
        <pd:y>124</pd:y>
        <config>
            <element ref="ns2:createOrderByValueRequest"/>
        </config>
        <pd:inputBindings>
            <ns2:createOrderByValueRequest>
                <ns2:orderValue xsi:type="ns2:CreateOrderValue">
                    <ns2:apiClientId>
                        <xsl:value-of select="$_globalVariables/ns5:GlobalVariables/xAuthorityAdapter/OSSTechnicalMessages/createOrderRequest/apiClientId"/>
                    </ns2:apiClientId>
                    <xsl:if test="exists($Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_HEADER/EXTERNAL_REFERENCE)">
                        <ns2:purchaseOrder>
                            <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_HEADER/EXTERNAL_REFERENCE"/>
                        </ns2:purchaseOrder>
                    </xsl:if>
                    <ns2:services>
                        <ns2:item xsi:type="ns6:BVoIPEnterpriseDataServiceValue">
                            <xsl:if test="exists($Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/ENTERPRISE_ACCOUNT/ID)">
                                <ns2:subscriberId>
                                    <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/ENTERPRISE_ACCOUNT/ID"/>
                                </ns2:subscriberId>
                            </xsl:if>
                            <ns2:attribute1>
                                <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/RUNTIME_PARAMETERS/NAME_VALUE_PAIR[NAME=&quot;attribute1&quot;]/VALUE[1]"/>
                            </ns2:attribute1>
                            <ns2:attribute2>
                                <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/RUNTIME_PARAMETERS/NAME_VALUE_PAIR[NAME=&quot;attribute2&quot;]/VALUE[1]"/>
                            </ns2:attribute2>
                            <ns2:attribute3>
                                <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/RUNTIME_PARAMETERS/NAME_VALUE_PAIR[NAME=&quot;attribute3&quot;]/VALUE[1]"/>
                            </ns2:attribute3>
                            <ns2:attribute4>
                                <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/RUNTIME_PARAMETERS/NAME_VALUE_PAIR[NAME=&quot;attribute4&quot;]/VALUE[1]"/>
                            </ns2:attribute4>
                            <data>
                                <serviceState xsi:nil="true"/>
                                <xsl:choose>
                                    <xsl:when test="exists($Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/ENTERPRISE_ACCOUNT/ID)">
                                        <subscriberId>
                                            <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/ENTERPRISE_ACCOUNT/ID"/>
                                        </subscriberId>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <subscriberId xsi:nil="true"/>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <serviceId xsi:nil="true"/>
                                <serviceOffering>
                                    <xsl:value-of select="$_globalVariables/ns5:GlobalVariables/xAuthorityAdapter/CreateOrderParams/ServiceOffering"/>
                                </serviceOffering>
                                <customerKey xsi:nil="true"/>
                                <xsl:choose>
                                    <xsl:when test="exists($Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/RUNTIME_PARAMETERS/SYNCHRONIZE_MODE)">
                                        <synchronizeMode>
                                            <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/RUNTIME_PARAMETERS/SYNCHRONIZE_MODE"/>
                                        </synchronizeMode>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <synchronizeMode>
                                            <xsl:value-of select="false()"/>
                                        </synchronizeMode>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <serviceOfferingVersion>
                                    <xsl:value-of select="$_globalVariables/ns5:GlobalVariables/xAuthorityAdapter/CreateOrderParams/ServiceOfferingVersion"/>
                                </serviceOfferingVersion>
                                <serviceOfferingPublication>
                                    <xsl:value-of select="$_globalVariables/ns5:GlobalVariables/xAuthorityAdapter/CreateOrderParams/ServiceOfferingPublication"/>
                                </serviceOfferingPublication>
                                <customerParentGroups>
                                    <xsl:if test="$_globalVariables/ns5:GlobalVariables/xAuthorityAdapter/CreateOrderParams/CustomerParentGroups!=&quot;&quot;">
                                        <item>
                                            <xsl:value-of select="$_globalVariables/ns5:GlobalVariables/xAuthorityAdapter/CreateOrderParams/CustomerParentGroups"/>
                                        </item>
                                    </xsl:if>
                                </customerParentGroups>
                                <customerName>
                                    <xsl:choose>
                                        <xsl:when test="exists($Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/ENTERPRISE_ACCOUNT/ID)">
                                            <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/ENTERPRISE_ACCOUNT/ID"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </customerName>
                                <customerId>
                                    <xsl:choose>
                                        <xsl:when test="exists($Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/ENTERPRISE_ACCOUNT/NAME)">
                                            <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/ENTERPRISE_ACCOUNT/NAME"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </customerId>
                                <customerDomain>
                                    <xsl:choose>
                                        <xsl:when test="exists($Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/ENTERPRISE_ACCOUNT/ID)">
                                            <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/ENTERPRISE_ACCOUNT/ID"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </customerDomain>
                                <notifyCSR>
                                    <xsl:value-of select="if(exists($Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM/PRODUCT/ENTERPRISE_PRODUCT/SEND_NOTIFICATIONS_TO)) then&#xA;&#x9;true()&#xA;else&#xA;&#x9;false()"/>
                                </notifyCSR>
                                <xsl:choose>
                                    <xsl:when test="exists($Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/SEND_NOTIFICATIONS_TO)">
                                        <notifyTo>
                                            <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/SEND_NOTIFICATIONS_TO"/>
                                        </notifyTo>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <notifyTo xsi:nil="true"/>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:choose>
                                    <xsl:when test="exists($Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/RUNTIME_PARAMETERS/SIP_DOMAIN)">
                                        <sipDomain>
                                            <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/RUNTIME_PARAMETERS/SIP_DOMAIN"/>
                                        </sipDomain>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <sipDomain xsi:nil="true"/>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:choose>
                                    <xsl:when test="exists($Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/ENABLE_VOICEMAIL)">
                                        <enableVoicemail>
                                            <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/ENABLE_VOICEMAIL"/>
                                        </enableVoicemail>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <enableVoicemail>
                                            <xsl:value-of select="false()"/>
                                        </enableVoicemail>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <featurePackages>
                                    <xsl:for-each select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM/PRODUCT/ENTERPRISE_PRODUCT/FEATURE_PACKAGE_CONFIG">
                                        <item>
                                            <selectionSetID xsi:nil="true"/>
                                            <packageType>
                                                <xsl:value-of select="TYPE"/>
                                            </packageType>
                                            <packageID>
                                                <xsl:value-of select="ID"/>
                                            </packageID>
                                            <xsl:choose>
                                                <xsl:when test="exists(LIMIT)">
                                                    <limit>
                                                        <xsl:value-of select="LIMIT"/>
                                                    </limit>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <limit>
                                                        <xsl:value-of select="0"/>
                                                    </limit>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                            <addOnPackages>
                                                <xsl:for-each select="ADD_ON_PACKAGE">
                                                    <item>
                                                        <xsl:choose>
                                                            <xsl:when test="exists(SELECTION_SET_ID)">
                                                                <selectionSetID>
                                                                    <xsl:value-of select="SELECTION_SET_ID"/>
                                                                </selectionSetID>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <selectionSetID xsi:nil="true"/>
                                                            </xsl:otherwise>
                                                        </xsl:choose>
                                                        <packageType xsi:nil="true"/>
                                                        <packageID>
                                                            <xsl:value-of select="ID"/>
                                                        </packageID>
                                                        <xsl:choose>
                                                            <xsl:when test="exists(LIMIT)">
                                                                <limit>
                                                                    <xsl:value-of select="LIMIT"/>
                                                                </limit>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                                <limit>
                                                                    <xsl:value-of select="0"/>
                                                                </limit>
                                                            </xsl:otherwise>
                                                        </xsl:choose>
                                                        <addOnPackages/>
                                                    </item>
                                                </xsl:for-each>
                                            </addOnPackages>
                                        </item>
                                    </xsl:for-each>
                                </featurePackages>
                                <customAttributes/>
                                <adminUsername>
                                    <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/ADMIN_LOGIN/USER_NAME"/>
                                </adminUsername>
                                <adminPassword>
                                    <xsl:value-of select="$Start/pfx5:SubmitOrder/ns7:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/ENTERPRISE_PRODUCT/ADMIN_LOGIN/PASSWORD"/>
                                </adminPassword>
                                <authUserName>
                                    <xsl:value-of select="$_globalVariables/ns5:GlobalVariables/xAuthorityAdapter/OSSTechnicalMessages/createOrderRequest/authUserName"/>
                                </authUserName>
                                <authDomain>
                                    <xsl:value-of select="$_globalVariables/ns5:GlobalVariables/xAuthorityAdapter/OSSTechnicalMessages/createOrderRequest/authDomain"/>
                                </authDomain>
                                <authPassword>
                                    <xsl:value-of select="$_globalVariables/ns5:GlobalVariables/xAuthorityAdapter/OSSTechnicalMessages/createOrderRequest/authPassword"/>
                                </authPassword>
                            </data>
                        </ns2:item>
                    </ns2:services>
                </ns2:orderValue>
            </ns2:createOrderByValueRequest>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>481</pd:x>
        <pd:y>287</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Generate Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>275</pd:x>
        <pd:y>293</pd:y>
        <config>
            <faultName>Error</faultName>
        </config>
        <pd:inputBindings>
            <ns12:ActivityInput>
                <data>
                    <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="exists($_error_Create-Order)">
                            <xsl:copy-of select="$_error_Create-Order/pfx:Error"/>
                        </xsl:when>
                        <xsl:when test="exists($_error_Wait-for-createOrderByValueResponse)">
                            <pfx:Error>
                                <pfx:MsgCode>
                                    <xsl:value-of select="&quot;XAuth-03012&quot;"/>
                                </pfx:MsgCode>
                                <pfx:Params>
                                    <xsl:value-of select="&quot;createOrderResponse&quot;"/>
                                </pfx:Params>
                                <xsl:copy-of select="$_error/ns3:ErrorReport"/>
                            </pfx:Error>
                        </xsl:when>
                        <xsl:when test="exists($Wait-for-createOrderByValueResponse)">
                            <pfx:Error>
                                <pfx:MsgCode>
                                    <xsl:value-of select="&quot;XAuth-03019&quot;"/>
                                </pfx:MsgCode>
                                <pfx:Params>
                                    <xsl:value-of select="&quot;createOrderResponse&quot;"/>
                                </pfx:Params>
                                <xsl:choose>
                                    <xsl:when test="exists($Wait-for-createOrderByValueResponse/Group/ns2:createOrderByValueException/ns2:createException)">
                                        <pfx:ApplicationError>
                                            <xsl:value-of select="$Wait-for-createOrderByValueResponse/Group/ns2:createOrderByValueException/ns2:createException/ns1:message"/>
                                        </pfx:ApplicationError>
                                    </xsl:when>
                                    <xsl:when test="exists($Wait-for-createOrderByValueResponse/Group/ns2:createOrderByValueException/ns2:illegalArgumentException)">
                                        <pfx:ApplicationError>
                                            <xsl:value-of select="$Wait-for-createOrderByValueResponse/Group/ns2:createOrderByValueException/ns2:illegalArgumentException/ns1:message"/>
                                        </pfx:ApplicationError>
                                    </xsl:when>
                                    <xsl:when test="exists($Wait-for-createOrderByValueResponse/Group/ns2:createOrderByValueException/ns2:remoteException)">
                                        <pfx:ApplicationError>
                                            <xsl:value-of select="$Wait-for-createOrderByValueResponse/Group/ns2:createOrderByValueException/ns2:remoteException/ns1:message"/>
                                        </pfx:ApplicationError>
                                    </xsl:when>
                                    <xsl:when test="exists($Wait-for-createOrderByValueResponse/Group/ns2:createOrderByValueException/ns2:illegalAttributeValueException)">
                                        <pfx:ApplicationError>
                                            <xsl:value-of select="concat($Wait-for-createOrderByValueResponse/Group/ns2:createOrderByValueException/ns2:illegalAttributeValueException/ns1:message,&quot; &quot;,$Wait-for-createOrderByValueResponse/Group/ns2:createOrderByValueException/ns2:illegalAttributeValueException/ns1:illegalAttributeName)"/>
                                        </pfx:ApplicationError>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx:ApplicationError>
                                            <xsl:value-of select="&quot;&quot;"/>
                                        </pfx:ApplicationError>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </pfx:Error>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx:Error>
                                <pfx:MsgCode>
                                    <xsl:value-of select="&quot;XAuth-03014&quot;"/>
                                </pfx:MsgCode>
                                <pfx:Params>
                                    <xsl:value-of select="&quot;createOrder&quot;"/>
                                </pfx:Params>
                                <xsl:copy-of select="$_error/ns3:ErrorReport"/>
                            </pfx:Error>
                        </xsl:otherwise>
                    </xsl:choose>
                </data>
            </ns12:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Create Order</pd:from>
        <pd:to>Wait for createOrderByValueResponse</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Wait for createOrderByValueResponse</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>JMS MessageID</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS MessageID</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Create Order</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Wait for createOrderByValueResponse</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS MessageID</pd:from>
        <pd:to>Map-to-OSS-Enterprise</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-to-OSS-Enterprise</pd:from>
        <pd:to>Create Order</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Map-to-OSS-Enterprise</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Wait for createOrderByValueResponse</pd:from>
        <pd:to>Null</pd:to>
        <pd:xpathDescription>EXCEPTION</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>contains(local-name($Wait-for-createOrderByValueResponse/Group/*),"Exception")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Generate Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>