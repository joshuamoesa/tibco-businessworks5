<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <pd:name>Process Definition.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="Orders">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="Order" minOccurs="0" maxOccurs="unbounded">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="custId" type="xsd:string"/>
                                <xsd:element name="product" type="xsd:string"/>
                                <xsd:element name="quantity" type="xsd:string"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>150</pd:startX>
    <pd:startY>64</pd:startY>
    <pd:returnBindings>
        <OrderList>
            <xsl:for-each-group select="$Start/Orders/Order" group-by="custId">
                <Orders>
                    <Customer>
                        <xsl:value-of select="custId"/>
                    </Customer>
                    <xsl:for-each select="current-group()">
                        <Order>
                            <quantity>
                                <xsl:value-of select="quantity"/>
                            </quantity>
                            <productName>
                                <xsl:value-of select="product"/>
                            </productName>
                        </Order>
                    </xsl:for-each>
                </Orders>
            </xsl:for-each-group>
        </OrderList>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="OrderList">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="Orders" minOccurs="0" maxOccurs="unbounded">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="Customer" type="xsd:string"/>
                                <xsd:element name="Order" minOccurs="0" maxOccurs="unbounded">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="quantity" type="xsd:string"/>
                                            <xsd:element name="productName" type="xsd:string"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>367</pd:endX>
    <pd:endY>65</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1400828306015</pd:targetNamespace>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>