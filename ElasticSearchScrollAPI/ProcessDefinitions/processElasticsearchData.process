<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:ns3="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/JSON_GEN_Schemas/REQUEST_search_scroll.xsd" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/JSON_GEN_Schemas/RESPONSE_query_match_all_scroll.xsd" xmlns:pfx="http://www.tibco.com/ns/no_namespace_schema_location/JSON_GEN_Schemas/REQUEST_query_match_all.xsd">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/JSON_GEN_Schemas/REQUEST_query_match_all.xsd" schemaLocation="/JSON_GEN_Schemas/REQUEST_query_match_all.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/JSON_GEN_Schemas/RESPONSE_query_match_all_scroll.xsd" schemaLocation="/JSON_GEN_Schemas/RESPONSE_query_match_all_scroll.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/JSON_GEN_Schemas/REQUEST_search_scroll.xsd" schemaLocation="/JSON_GEN_Schemas/REQUEST_search_scroll.xsd"/>
    <pd:name>processElasticsearchData.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startX>95</pd:startX>
    <pd:startY>225</pd:startY>
    <pd:returnBindings/>
    <pd:endName>End</pd:endName>
    <pd:endX>1581</pd:endX>
    <pd:endY>228</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <VariableScrollID>
            <xsd:element name="ScrollID" type="xsd:string"/>
        </VariableScrollID>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1472674170914</pd:targetNamespace>
    <pd:group name="While hits exist">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>715</pd:x>
        <pd:y>105</pd:y>
        <pd:width>785</pd:width>
        <pd:height>232</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>while</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:activityOutputName/>
            <pd:whileCondition>(string-length($Parse-JSON-response)&lt;1 and count($Parse-initial-JSON-response/ns:ActivityOutputClass/JSON/hits/hits)=$_globalVariables/ns3:GlobalVariables/ElasticSearchAdapter/query_resultsize)
or
(string-length($Parse-JSON-response)&gt;0 and count($Parse-JSON-response/ns:ActivityOutputClass/JSON/hits/hits[count(child::*)&gt;0])&gt;0)</pd:whileCondition>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Render JSON request</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Assign ScrollID</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Render JSON request</pd:from>
            <pd:to>Search with scroll_id</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Search with scroll_id</pd:from>
            <pd:to>Parse JSON response</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Parse JSON response</pd:from>
            <pd:to>Log JSON response</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Log JSON response</pd:from>
            <pd:to>Assign ScrollID</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Assign ScrollID">
            <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
            <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
            <pd:x>1382</pd:x>
            <pd:y>231</pd:y>
            <config>
                <variableName>VariableScrollID</variableName>
            </config>
            <pd:inputBindings>
                <ScrollID>
                    <xsl:value-of select="$Parse-JSON-response/ns:ActivityOutputClass/JSON/_scroll_id"/>
                </ScrollID>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Search with scroll_id">
            <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
            <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
            <pd:x>973</pd:x>
            <pd:y>237</pd:y>
            <config>
                <enableProtocolUI>None</enableProtocolUI>
                <restMethodUI>POST</restMethodUI>
                <restResponseType>JSON</restResponseType>
                <authChoiceUI>No Authentication</authChoiceUI>
                <WADLPaths/>
                <WADLBaseURL/>
                <restMethodIDUI/>
                <restURI>http://%%ElasticSearchAdapter/host%%/_search/scroll</restURI>
                <restInputReferNode>
                    <xsd:element name="Parameters">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="Query" minOccurs="0">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                                <xsd:element name="Header" minOccurs="0">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                                <xsd:element name="Body" minOccurs="0">
                                    <xsd:complexType>
                                        <xsd:sequence>
                                            <xsd:element name="Form" minOccurs="0">
                                                <xsd:complexType>
                                                    <xsd:sequence>
                                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                    </xsd:sequence>
                                                </xsd:complexType>
                                            </xsd:element>
                                            <xsd:element name="Text" minOccurs="0">
                                                <xsd:complexType>
                                                    <xsd:sequence>
                                                        <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                    </xsd:sequence>
                                                </xsd:complexType>
                                            </xsd:element>
                                            <xsd:element name="Binary" minOccurs="0">
                                                <xsd:complexType>
                                                    <xsd:sequence>
                                                        <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                    </xsd:sequence>
                                                </xsd:complexType>
                                            </xsd:element>
                                            <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                                <xsd:complexType>
                                                    <xsd:sequence>
                                                        <xsd:element name="content-disposition" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                        <xsd:element name="content" minOccurs="0">
                                                            <xsd:complexType>
                                                                <xsd:choice>
                                                                    <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                    <xsd:element name="text" type="xsd:string"/>
                                                                    <xsd:element name="fileName" type="xsd:string"/>
                                                                </xsd:choice>
                                                            </xsd:complexType>
                                                        </xsd:element>
                                                    </xsd:sequence>
                                                </xsd:complexType>
                                            </xsd:element>
                                        </xsd:sequence>
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </restInputReferNode>
                <restOutputReferNode>
                    <xsd:element name="header">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="Server" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Content-Range" type="xsd:string" minOccurs="0"/>
                                <xsd:element name="Last-Modifie" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </restOutputReferNode>
            </config>
            <pd:inputBindings>
                <ns:ActivityInput>
                    <ns:Parameters>
                        <Body>
                            <Text>
                                <type>
                                    <xsl:value-of select="&quot;text/plain&quot;"/>
                                </type>
                                <content>
                                    <xsl:value-of select="$Render-JSON-request/ns:ActivityOutputClass/jsonString"/>
                                </content>
                            </Text>
                        </Body>
                    </ns:Parameters>
                </ns:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Parse JSON response">
            <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
            <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
            <pd:x>1108</pd:x>
            <pd:y>239</pd:y>
            <config>
                <SchemaType>xsdType</SchemaType>
                <BadgerfishCheck>false</BadgerfishCheck>
                <ActivityOutputEditor ref="pfx2:JSON"/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInputClass>
                    <jsonString>
                        <xsl:value-of select="$Search-with-scroll_id/ns:RESTOutput/msg"/>
                    </jsonString>
                </ns:ActivityInputClass>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Render JSON request">
            <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
            <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
            <pd:x>842</pd:x>
            <pd:y>236</pd:y>
            <config>
                <SchemaType>xsdType</SchemaType>
                <BadgerfishCheck>false</BadgerfishCheck>
                <removeRootElementForInput>true</removeRootElementForInput>
                <ActivityInputEditor ref="pfx3:JSON"/>
            </config>
            <pd:inputBindings>
                <ns:ActivityInputClass>
                    <JSON>
                        <scroll>
                            <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/ElasticSearchAdapter/scroll_expirytime"/>
                        </scroll>
                        <scroll_id>
                            <xsl:value-of select="$VariableScrollID/ScrollID"/>
                        </scroll_id>
                    </JSON>
                </ns:ActivityInputClass>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log JSON response">
            <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
            <pd:resourceType>ae.activities.log</pd:resourceType>
            <pd:x>1245</pd:x>
            <pd:y>232</pd:y>
            <config>
                <role>User</role>
            </config>
            <pd:inputBindings>
                <ns2:ActivityInput>
                    <message>
                        <xsl:value-of select="tib:render-xml($Parse-JSON-response/ns:ActivityOutputClass/JSON/hits)"/>
                    </message>
                </ns2:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Assign initial ScrollID">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>492</pd:x>
        <pd:y>233</pd:y>
        <config>
            <variableName>VariableScrollID</variableName>
        </config>
        <pd:inputBindings>
            <ScrollID>
                <xsl:value-of select="$Parse-initial-JSON-response/ns:ActivityOutputClass/JSON/_scroll_id"/>
            </ScrollID>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log initial JSON response">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>624</pd:x>
        <pd:y>233</pd:y>
        <config>
            <role>User</role>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <message>
                    <xsl:value-of select="tib:render-xml($Parse-initial-JSON-response/ns:ActivityOutputClass/JSON/hits)"/>
                </message>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse initial JSON response">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>351</pd:x>
        <pd:y>233</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityOutputEditor ref="pfx2:JSON"/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$Search-with-initial-scroll-request/ns:RESTOutput/msg"/>
                </jsonString>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Search with initial scroll request">
        <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
        <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
        <pd:x>216</pd:x>
        <pd:y>240</pd:y>
        <config>
            <enableProtocolUI>None</enableProtocolUI>
            <restMethodUI>POST</restMethodUI>
            <restResponseType>JSON</restResponseType>
            <authChoiceUI>No Authentication</authChoiceUI>
            <WADLPaths/>
            <WADLBaseURL/>
            <restMethodIDUI/>
            <restURI>http://%%ElasticSearchAdapter/host%%/%%ElasticSearchAdapter/type%%/user/_search?scroll=%%ElasticSearchAdapter/scroll_expirytime%%</restURI>
            <restInputReferNode>
                <xsd:element name="Parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Query" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Header" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Body" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Form" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Text" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Binary" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="content-disposition" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" minOccurs="0">
                                                        <xsd:complexType>
                                                            <xsd:choice>
                                                                <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                <xsd:element name="text" type="xsd:string"/>
                                                                <xsd:element name="fileName" type="xsd:string"/>
                                                            </xsd:choice>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restInputReferNode>
            <restOutputReferNode>
                <xsd:element name="header">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Server" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Range" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Last-Modifie" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restOutputReferNode>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <ns:Parameters>
                    <Body>
                        <Text>
                            <type>
                                <xsl:value-of select="&quot;text/plain&quot;"/>
                            </type>
                            <content>
                                <xsl:value-of select="concat('{  &quot;query&quot; : {  &quot;match_all&quot; : {}  }, &quot;size&quot;:', $_globalVariables/ns3:GlobalVariables/ElasticSearchAdapter/query_resultsize, ', &quot;fields&quot;: [] }' )"/>
                            </content>
                        </Text>
                    </Body>
                </ns:Parameters>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Search with initial scroll request</pd:from>
        <pd:to>Parse initial JSON response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Search with initial scroll request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse initial JSON response</pd:from>
        <pd:to>Assign initial ScrollID</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>While hits exist</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign initial ScrollID</pd:from>
        <pd:to>Log initial JSON response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log initial JSON response</pd:from>
        <pd:to>While hits exist</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>
