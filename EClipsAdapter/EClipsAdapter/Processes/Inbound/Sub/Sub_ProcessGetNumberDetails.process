<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/DeployedVarsType" xmlns:pfx="http://xmlns.example.com/unique/default/namespace/1137414045923" xmlns:ns1="http://xmlns.kpn.com/common/cdm/Base.xsd" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns3="http://www.tibco.com/pe/EngineTypes" xmlns:ns4="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx2="http://xmlns.kpn.com/eai/common/errors" xmlns:pfx3="http://xmlns.kpn.com/fixed/common/test/request/TestRequestService" xmlns:ns5="http://xmlns.kpn.com/fixed/common/test/response/TestRequestService" xmlns:ns6="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" xmlns:eai="java://com.kpn.eai.tools.Tools" xmlns:ns41="http://xmlns.kpn.com/fixed/common/test/notify/TestNotificationService" xmlns:pfx4="http://xmlns.example.com/unique/default/namespace/1168876013400" xmlns:pfx5="http://xmlns.example.com/unique/default/namespace/1169120057621" xmlns:pfx6="http://xmlns.example.com/unique/default/namespace/1168879614243" xmlns:pfx7="http://engine.servicescanner.edgetech.nl" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pfx8="java://com.kpn.eai.component.common.CommonXPathFunctions" xmlns:pfx9="http://xmlns.kpn.com/fixed/servicescanneradapter/request/PerformQualityOfServiceScan.xsd" xmlns:pfx10="http://xmlns.kpn.com/fixed/servicescanneradapter/response/PerformQualityOfServiceScan.xsd" xmlns:pfx11="http://xmlns.kpn.com/fixed/servicescanneradapter/request/PerformQualityOfServiceScan_SOAPRequest.xsd" xmlns:pfx12="http://xmlns.kpn.com/fixed/annetadapter/request/PerformQualityOfServiceScan.xsd" xmlns:pfx13="http://xmlns.kpn.com/fixed/annetadapter/request/PerformQualityOfServiceScan_SOAPRequest.xsd" xmlns:pfx14="http://xmlns.kpn.com/fixed/annetadapter/response/PerformQualityOfServiceScan.xsd" xmlns:pfx15="urn:GetLogicalPortServiceInformation" xmlns:pfx16="urn:GET_DPMBSISDN2" xmlns:ns7="http://xmlns.kpn.com/fixed/portingserviceswf/response/RequestNumberInPortingSynchronisation.xsd" xmlns:pfx17="http://webservices.kpn-lls.com/V0.2/EcnsPortingServices.wsdl" xmlns:ns8="EcPsXsd_V0.2" xmlns:pfx18="http://webservices.kpn-lls.com/V0.2/MmspOrdering.wsdl" xmlns:ns9="MmspXsd_V0.2" xmlns:ns10="http://xmlns.tibco.com/encodings/mime" xmlns:pfx19="http://xmlns.example.com/unique/default/namespace/1180332836643" xmlns:pfx20="http://xmlns.example.com/unique/default/namespace/1180333473569" xmlns:pfx21="urn:StartNumberInporting" xmlns:pfx22="http://xmlns.kpn.com/EAI/fixed/0293_GetSubscriberDetails/1.0/Request" xmlns:pfx23="http://xmlns.kpn.com/EAI/fixed/0293_GetSubscriberDetails/1.0/Response" xmlns:pfx24="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/GetSubscriberDetailsResponse.xsd" xmlns:pfx25="http://webservices.kpn-lls.com/V0.2/EcnsOrdering.wsdl" xmlns:pfx26="http://xmlns.kpn.com/EAI/fixed/0292_CreateSubscriber/1.0/Request" xmlns:pfx27="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/GetSubscriberDetailsRequest.xsd" xmlns:ns0="http://tibco.com/namespaces/tnt/plugins/soap" xmlns:pfx28="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/GetAvailabilityLogicalResourceRequest.xsd" xmlns:ns11="http://xmlns.kpn.com/EAI/fixed/0294_GetAvailabilityLogicalResource/1.0/Request" xmlns:pfx29="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/GetAvailabilityLogicalResourceResponse.xsd" xmlns:pfx30="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/UpdateSubscriptionFeatureSettingsRequest.xsd" xmlns:ns12="http://xmlns.kpn.com/EAI/fixed/0296_UpdateSubscriptionFeatureSettings/1.0/Request" xmlns:pfx31="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/UpdateSubscriptionFeatureSettingsResponse.xsd" xmlns:pfx32="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/UpdateSubscriberPasswordRequest.xsd" xmlns:ns13="http://xmlns.kpn.com/EAI/fixed/0297_UpdateSubscriberPassword/1.0/Request" xmlns:pfx33="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/UpdateSubscriberPasswordResponse.xsd" xmlns:ns14="http://xmlns.kpn.com/EAI/fixed/0296_UpdateSubscriptionFeatureSettings/1.0/Response" xmlns:pfx34="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/GetNumberDetailsRequest.xsd" xmlns:pfx35="EcnsXsd_V0.2" xmlns:ns15="http://xmlns.kpn.com/EAI/fixed/0301_GetNumberDetails/1.0/Request" xmlns:pfx36="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/GetNumberDetailsResponse.xsd" xmlns:ns16="http://xmlns.kpn.com/EAI/fixed/0301_GetNumberDetails/1.0/Response" xmlns:ns17="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns18="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions" xmlns:pfx37="http://xmlns.kpn.com/Outbound/Publish/SubmitOrder.xsd" xmlns:ns19="http://xmlns.kpn.com/imported/ordermessage.xsd" xmlns:pfx38="http://xmlns.kpn.com/Inbound/Subscribe/UpdateOrderStatus.xsd">
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1137414045923" schemaLocation="/Processes/Test Resources/TestPublish.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/eai/common/errors" schemaLocation="/Common/Shared Resources/Errors.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/common/test/request/TestRequestService" schemaLocation="/Common/Test Resources/XSDSchemas/TestComponent2/Request/TestRequestService.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/common/test/response/TestRequestService" schemaLocation="/Common/Test Resources/XSDSchemas/TestComponent2/Response/TestRequestService.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/servicescanneradapter/request/PerformQualityOfServiceScan.xsd" schemaLocation="/XSDSchemas/ServiceScannerAdapter/Request/PerformQualityOfServiceScan.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/servicescanneradapter/response/PerformQualityOfServiceScan.xsd" schemaLocation="/XSDSchemas/ServiceScannerAdapter/Response/PerformQualityOfServiceScan.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/servicescanneradapter/request/PerformQualityOfServiceScan_SOAPRequest.xsd" schemaLocation="/XSDSchemas/ServiceScannerAdapterInternal/PerformQualityOfServiceScan_SOAPRequest.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/annetadapter/request/PerformQualityOfServiceScan.xsd" schemaLocation="/XSDSchemas/AnnetAdapter/Request/PerformQualityOfServiceScan.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/annetadapter/request/PerformQualityOfServiceScan_SOAPRequest.xsd" schemaLocation="/XSDSchemas/AnnetadapterInternal/PerformQualityOfServiceScan_SOAPRequest.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/annetadapter/response/PerformQualityOfServiceScan.xsd" schemaLocation="/XSDSchemas/AnnetAdapter/Response/PerformQualityOfServiceScan.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/portingserviceswf/response/RequestNumberInPortingSynchronisation.xsd" schemaLocation="/XSDSchemas/PortingServicesWF/Response/RequestNumberInPortingSynchronisation.xsd"/>
    <xsd:import namespace="EcPsXsd_V0.2" schemaLocation="/WSDL/EcnsPortingServices.xsd"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1180332836643" schemaLocation="/XSDSchemas/PortingServicesWF/Request/GetSubscriberDetails.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0293_GetSubscriberDetails/1.0/Request" schemaLocation="/XSDSchemas/PortingServicesWF/Request/0293_GetSubscriberDetails_1.0_Request_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0293_GetSubscriberDetails/1.0/Response" schemaLocation="/XSDSchemas/PortingServicesWF/Response/0293_GetSubscriberDetails_1.0_Response_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0293_GetSubscriberDetails/1.0/Response" schemaLocation="/XSDSchemas/EClipsAdapter/Imported/0293_GetSubscriberDetails_1.0_Response_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/UpdateSubscriberPasswordRequest.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Request/UpdateSubscriberPassword.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/UpdateSubscriberPasswordResponse.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Response/UpdateSubscriberPassword.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/GetAvailabilityLogicalResourceRequest.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Request/GetAvailabilityLogicalResource.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/GetAvailabilityLogicalResourceResponse.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Response/GetAvailabilityLogicalResource.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/UpdateSubscriptionFeatureSettingsRequest.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Request/UpdateSubscriptionFeatureSettings.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/UpdateSubscriptionFeatureSettingsResponse.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Response/UpdateSubscriptionFeatureSettings.xsd"/>
    <xsd:import namespace="MmspXsd_V0.2" schemaLocation="/WSDL/MmspOrdering.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/GetSubscriberDetailsRequest.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Request/GetSubscriberDetails.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/GetSubscriberDetailsResponse.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Response/GetSubscriberDetails.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Request/GetNumberDetailsRequest.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Request/GetNumberDetails.xsd"/>
    <xsd:import namespace="EcnsXsd_V0.2" schemaLocation="/WSDL/EcnsOrdering.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/EClipsAdapter/Response/GetNumberDetailsResponse.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Response/GetNumberDetails.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/Outbound/Publish/SubmitOrder.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Request/SubmitOrder.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/Inbound/Subscribe/UpdateOrderStatus.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Response/UpdateOrderStatus.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/imported/ordermessage.xsd" schemaLocation="/XSDSchemas/EClipsAdapter/Imported/OrderMessage.xsd"/>
    <wsdl:import namespace="http://engine.servicescanner.edgetech.nl" location="/WSDL/ANNETAdapter/ServiceScanExecutionEngine.wsdl"/>
    <wsdl:import namespace="http://webservices.kpn-lls.com/V0.2/EcnsPortingServices.wsdl" location="/WSDL/EcnsPortingServices.wsdl"/>
    <wsdl:import namespace="http://webservices.kpn-lls.com/V0.2/MmspOrdering.wsdl" location="/WSDL/MmspOrdering.wsdl"/>
    <wsdl:import namespace="http://webservices.kpn-lls.com/V0.2/EcnsOrdering.wsdl" location="/WSDL/EcnsOrdering.wsdl"/>
    <pd:name>EClipsAdapter/Processes/Inbound/Sub/Sub_ProcessGetNumberDetails.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="ServiceIn">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="Body" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>69</pd:startX>
    <pd:startY>267</pd:startY>
    <pd:returnBindings>
        <xsl:copy-of select="$Map-Reply/pfx38:UpdateOrderStatus"/>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx38:UpdateOrderStatus"/>
    <pd:endX>1053</pd:endX>
    <pd:endY>271</pd:endY>
    <pd:errorSchemas>
        <Exception ref="pfx2:ErrorReply"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:activity name="Parse Request">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>179</pd:x>
        <pd:y>266</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx37:SubmitOrder"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Start/ServiceIn/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Throw Exception">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>168</pd:x>
        <pd:y>520</pd:y>
        <config>
            <faultName>Exception</faultName>
        </config>
        <pd:inputBindings>
            <ns4:ActivityInput>
                <xsl:choose>
                    <xsl:when test="exists($_error_SOAPRequestReply)">
                        <messageCode>
                            <xsl:value-of select="&quot;EClips-03001&quot;"/>
                        </messageCode>
                    </xsl:when>
                    <xsl:when test="exists($_error_Parse-Request) or &#xA;$_error/ns3:ErrorReport/Msg = &quot;Output data invalid&quot;">
                        <messageCode>
                            <xsl:value-of select="&quot;EClips-03006&quot;"/>
                        </messageCode>
                    </xsl:when>
                    <xsl:otherwise>
                        <messageCode>
                            <xsl:value-of select="&quot;EClips-03002&quot;"/>
                        </messageCode>
                    </xsl:otherwise>
                </xsl:choose>
                <data>
                    <pfx2:ErrorReply>
                        <pfx2:Body>
                            <pfx38:UpdateOrderStatus>
                                <ns1:CMH>
                                    <xsl:choose>
                                        <xsl:when test="exists($Parse-Request/pfx37:SubmitOrder/ns1:CMH/ns1:ID)">
                                            <ns1:ID>
                                                <xsl:value-of select="$Parse-Request/pfx37:SubmitOrder/ns1:CMH/ns1:ID"/>
                                            </ns1:ID>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <ns1:ID>
                                                <xsl:value-of select="&quot;0301&quot;"/>
                                            </ns1:ID>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <ns1:NAME>
                                        <xsl:value-of select="&quot;GetNumberDetails&quot;"/>
                                    </ns1:NAME>
                                    <xsl:choose>
                                        <xsl:when test="exists($Parse-Request/pfx37:SubmitOrder/ns1:CMH/ns1:FID)">
                                            <ns1:FID>
                                                <xsl:value-of select="$Parse-Request/pfx37:SubmitOrder/ns1:CMH/ns1:FID"/>
                                            </ns1:FID>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <ns1:FID>
                                                <xsl:value-of select="&quot;UNKNOWN&quot;"/>
                                            </ns1:FID>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <ns1:MID>
                                        <xsl:value-of select="&quot;706.30&quot;"/>
                                    </ns1:MID>
                                    <ns1:PARADIGM>
                                        <xsl:value-of select="&quot;RESPONSE&quot;"/>
                                    </ns1:PARADIGM>
                                    <ns1:OBJECT>
                                        <xsl:value-of select="&quot;PhoneNumbers&quot;"/>
                                    </ns1:OBJECT>
                                    <ns1:VERSION>
                                        <xsl:value-of select="&quot;1.0&quot;"/>
                                    </ns1:VERSION>
                                    <ns1:FROM>
                                        <xsl:attribute name="ns1:COMPONENT_ID">
                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/EClipsAdapter/ComponentId"/>
                                        </xsl:attribute>
                                        <xsl:attribute name="ns1:COMPONENT_VERSION">
                                            <xsl:value-of select="$_globalVariables/ns:GlobalVariables/EClipsAdapter/ComponentVersion"/>
                                        </xsl:attribute>
                                    </ns1:FROM>
                                    <ns1:TO>
                                        <xsl:attribute name="ns1:DESTINATION">
                                            <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/Env,&quot;.FIXED.EClipsAdapter/ComponentDomain.&quot;,$_globalVariables/ns:GlobalVariables/EClipsAdapter/ComponentId,&quot;.Response.GetNumberDetails.1&quot;)"/>
                                        </xsl:attribute>
                                    </ns1:TO>
                                    <ns1:TRACKING>
                                        <ns1:MESSAGE_ID>
                                            <xsl:value-of select="pfx8:getMessageId($Start/ServiceIn/Body)"/>
                                        </ns1:MESSAGE_ID>
                                        <xsl:if test="exists($Parse-Request/pfx37:SubmitOrder/ns1:CMH/ns1:TRACKING/ns1:ITEM)">
                                            <xsl:for-each select="$Parse-Request/pfx37:SubmitOrder/ns1:CMH/ns1:TRACKING/ns1:ITEM">
                                                <ns1:ITEM>
                                                    <xsl:attribute name="ns1:APPINFO">
                                                        <xsl:value-of select="@ns1:APPINFO"/>
                                                    </xsl:attribute>
                                                    <xsl:attribute name="ns1:EVENT">
                                                        <xsl:value-of select="@ns1:EVENT"/>
                                                    </xsl:attribute>
                                                    <xsl:attribute name="ns1:TIMESTAMP">
                                                        <xsl:value-of select="@ns1:TIMESTAMP"/>
                                                    </xsl:attribute>
                                                </ns1:ITEM>
                                            </xsl:for-each>
                                        </xsl:if>
                                        <ns1:ITEM>
                                            <xsl:attribute name="ns1:APPINFO">
                                                <xsl:value-of select="concat($_globalVariables/ns:GlobalVariables/EClipsAdapter/ComponentDomain, &quot;.&quot;, $_globalVariables/ns:GlobalVariables/EClipsAdapter/ComponentId)"/>
                                            </xsl:attribute>
                                            <xsl:attribute name="ns1:EVENT">
                                                <xsl:value-of select="&quot;GetNumberDetails&quot;"/>
                                            </xsl:attribute>
                                            <xsl:attribute name="ns1:TIMESTAMP">
                                                <xsl:value-of select="tib:timestamp()"/>
                                            </xsl:attribute>
                                        </ns1:ITEM>
                                    </ns1:TRACKING>
                                    <xsl:if test="exists($Parse-Request/pfx37:SubmitOrder/ns1:CMH/ns1:ATTRIBUTE)">
                                        <xsl:for-each select="$Parse-Request/pfx37:SubmitOrder/ns1:CMH/ns1:ATTRIBUTE">
                                            <ns1:ATTRIBUTE>
                                                <xsl:attribute name="ns1:NAME">
                                                    <xsl:value-of select="@ns1:NAME"/>
                                                </xsl:attribute>
                                                <xsl:attribute name="ns1:VALUE">
                                                    <xsl:value-of select="@ns1:VALUE"/>
                                                </xsl:attribute>
                                            </ns1:ATTRIBUTE>
                                        </xsl:for-each>
                                    </xsl:if>
                                </ns1:CMH>
                                <ns19:BODY>
                                    <ORDER>
                                        <ORDER_HEADER>
                                            <xsl:choose>
                                                <xsl:when test="exists($Parse-Request/pfx37:SubmitOrder/ns19:BODY/ORDER/ORDER_HEADER/ORDER_TYPE)">
                                                    <ORDER_TYPE>
                                                        <xsl:value-of select="$Parse-Request/pfx37:SubmitOrder/ns19:BODY/ORDER/ORDER_HEADER/ORDER_TYPE"/>
                                                    </ORDER_TYPE>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <ORDER_TYPE>
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/EClipsAdapter/ReplyParameters/GetNumberDetails/ORDER_TYPE"/>
                                                    </ORDER_TYPE>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                            <CREATION_DATE>
                                                <xsl:value-of select="current-dateTime()"/>
                                            </CREATION_DATE>
                                        </ORDER_HEADER>
                                        <ORDER_ITEM>
                                            <ORDER_ITEM_HEADER>
                                                <xsl:choose>
                                                    <xsl:when test="exists($Parse-Request/pfx37:SubmitOrder/ns19:BODY/ORDER/ORDER_ITEM/ORDER_ITEM_HEADER/ORDER_ITEM_TYPE)">
                                                        <ORDER_ITEM_TYPE>
                                                            <xsl:value-of select="$Parse-Request/pfx37:SubmitOrder/ns19:BODY/ORDER/ORDER_ITEM[1]/ORDER_ITEM_HEADER/ORDER_ITEM_TYPE"/>
                                                        </ORDER_ITEM_TYPE>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <ORDER_ITEM_TYPE>
                                                            <xsl:value-of select="&quot;PRODUCT&quot;"/>
                                                        </ORDER_ITEM_TYPE>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </ORDER_ITEM_HEADER>
                                            <xsl:choose>
                                                <xsl:when test="exists($Parse-Request/pfx37:SubmitOrder/ns19:BODY/ORDER/ORDER_ITEM/PRODUCT_CATEGORY)">
                                                    <PRODUCT_CATEGORY>
                                                        <xsl:value-of select="$Parse-Request/pfx37:SubmitOrder/ns19:BODY/ORDER/ORDER_ITEM[1]/PRODUCT_CATEGORY"/>
                                                    </PRODUCT_CATEGORY>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <PRODUCT_CATEGORY>
                                                        <xsl:value-of select="$_globalVariables/ns:GlobalVariables/EClipsAdapter/ReplyParameters/GetNumberDetails/PRODUCT_CATEGORY"/>
                                                    </PRODUCT_CATEGORY>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </ORDER_ITEM>
                                    </ORDER>
                                </ns19:BODY>
                            </pfx38:UpdateOrderStatus>
                        </pfx2:Body>
                        <xsl:choose>
                            <xsl:when test="exists($_error_SOAPRequestReply)">
                                <pfx2:Errors>
                                    <pfx2:Error>
                                        <pfx2:MsgCode>
                                            <xsl:value-of select="&quot;EClips-03001&quot;"/>
                                        </pfx2:MsgCode>
                                        <pfx2:Params>
                                            <xsl:value-of select="tib:render-xml($Parse-Request/pfx37:SubmitOrder, false(), true())"/>
                                        </pfx2:Params>
                                        <xsl:copy-of select="$_error/ns3:ErrorReport"/>
                                    </pfx2:Error>
                                </pfx2:Errors>
                            </xsl:when>
                            <xsl:when test="exists($_error_Parse-Request) or &#xA;$_error/ns3:ErrorReport/Msg = &quot;Output data invalid&quot;">
                                <pfx2:Errors>
                                    <pfx2:Error>
                                        <pfx2:MsgCode>
                                            <xsl:value-of select="&quot;EClips-03006&quot;"/>
                                        </pfx2:MsgCode>
                                        <pfx2:Params>
                                            <xsl:value-of select="$Start/ServiceIn/Body"/>
                                        </pfx2:Params>
                                        <xsl:copy-of select="$_error/ns3:ErrorReport"/>
                                    </pfx2:Error>
                                </pfx2:Errors>
                            </xsl:when>
                            <xsl:otherwise>
                                <pfx2:Errors>
                                    <pfx2:Error>
                                        <pfx2:MsgCode>
                                            <xsl:value-of select="&quot;EClips-03002&quot;"/>
                                        </pfx2:MsgCode>
                                        <pfx2:Params>
                                            <xsl:value-of select="&quot;: Incorrect data supplied in message&quot;"/>
                                        </pfx2:Params>
                                        <xsl:copy-of select="$_error/ns3:ErrorReport"/>
                                    </pfx2:Error>
                                </pfx2:Errors>
                            </xsl:otherwise>
                        </xsl:choose>
                    </pfx2:ErrorReply>
                </data>
            </ns4:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>305</pd:x>
        <pd:y>101</pd:y>
        <pd:width>647</pd:width>
        <pd:height>318</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Map to SOAP Request</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map Reply</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map to SOAP Request</pd:from>
            <pd:to>Log SOAP Request</pd:to>
            <pd:xpathDescription>Trace</pd:xpathDescription>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>pfx8:isTraceOn("EAI-04005")</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Log SOAP Response</pd:from>
            <pd:to>Map Reply</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map to SOAP Request</pd:from>
            <pd:to>SOAPRequestReply</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SOAPRequestReply</pd:from>
            <pd:to>Map Reply</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SOAPRequestReply</pd:from>
            <pd:to>Log SOAP Response</pd:to>
            <pd:xpathDescription>Trace</pd:xpathDescription>
            <pd:lineType>Multiple Bends</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>pfx8:isTraceOn("EAI-04005")</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>Log SOAP Request</pd:from>
            <pd:to>SOAPRequestReply</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Map to SOAP Request">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>386</pd:x>
            <pd:y>276</pd:y>
            <config>
                <element ref="pfx35:EcnsReadTelnrReq"/>
            </config>
            <pd:inputBindings>
                <pfx35:EcnsReadTelnrReq>
                    <pfx35:EcnsHeaderStruct>
                        <pfx35:Sender>
                            <xsl:value-of select="$Parse-Request/pfx37:SubmitOrder/ns1:CMH/ns1:ATTRIBUTE[@ns1:NAME ='SENDER']/@ns1:VALUE"/>
                        </pfx35:Sender>
                        <pfx35:Receiver>
                            <xsl:value-of select="$Parse-Request/pfx37:SubmitOrder/ns1:CMH/ns1:ATTRIBUTE[@ns1:NAME ='RECEIVER']/@ns1:VALUE"/>
                        </pfx35:Receiver>
                    </pfx35:EcnsHeaderStruct>
                    <pfx35:ReadTelnrReqStruct>
                        <xsl:if test="$Parse-Request/pfx37:SubmitOrder/ns19:BODY/ORDER/ORDER_HEADER/CUSTOMER_ID/ID_PACKAGER/INTERNAL">
                            <pfx35:RequesterPackagerCode>
                                <xsl:value-of select="$Parse-Request/pfx37:SubmitOrder/ns19:BODY/ORDER/ORDER_HEADER/CUSTOMER_ID/ID_PACKAGER/INTERNAL"/>
                            </pfx35:RequesterPackagerCode>
                        </xsl:if>
                        <pfx35:PackagerCode>
                            <xsl:value-of select="$Parse-Request/pfx37:SubmitOrder/ns19:BODY/ORDER/ORDER_HEADER/CUSTOMER_ID/ID_PACKAGER/EXTERNAL"/>
                        </pfx35:PackagerCode>
                        <pfx35:PackagerOrderId>
                            <xsl:value-of select="$Parse-Request/pfx37:SubmitOrder/ns19:BODY/ORDER/ORDER_HEADER/EXTERNAL_REFERENCE"/>
                        </pfx35:PackagerOrderId>
                        <pfx35:TelcoCode>
                            <xsl:value-of select="$Parse-Request/pfx37:SubmitOrder/ns19:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/MULTI_MEDIA_PRODUCT/SERVICES/MULTI_MEDIA_SERVICE/SERVICE_PROVIDER_ID"/>
                        </pfx35:TelcoCode>
                        <pfx35:TelephoneNumber>
                            <xsl:value-of select="$Parse-Request/pfx37:SubmitOrder/ns19:BODY/ORDER/ORDER_ITEM[1]/PRODUCT/MULTI_MEDIA_PRODUCT/RESOURCES/PHONE_NUMBER/UNFORMATTED"/>
                        </pfx35:TelephoneNumber>
                    </pfx35:ReadTelnrReqStruct>
                </pfx35:EcnsReadTelnrReq>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Map Reply">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>706</pd:x>
            <pd:y>269</pd:y>
            <config>
                <element ref="pfx38:UpdateOrderStatus"/>
            </config>
            <pd:inputBindings>
                <pfx38:UpdateOrderStatus>
                    <xsl:for-each select="$Parse-Request/pfx37:SubmitOrder/ns1:CMH">
                        <ns1:CMH>
                            <ns1:ID>
                                <xsl:value-of select="ns1:ID"/>
                            </ns1:ID>
                            <ns1:NAME>
                                <xsl:value-of select="ns1:NAME"/>
                            </ns1:NAME>
                            <ns1:FID>
                                <xsl:value-of select="&quot;706.30&quot;"/>
                            </ns1:FID>
                            <xsl:if test="ns1:MID">
                                <ns1:MID>
                                    <xsl:value-of select="ns1:MID"/>
                                </ns1:MID>
                            </xsl:if>
                            <ns1:PARADIGM>
                                <xsl:value-of select="&quot;RESPONSE&quot;"/>
                            </ns1:PARADIGM>
                            <ns1:OBJECT>
                                <xsl:value-of select="ns1:OBJECT"/>
                            </ns1:OBJECT>
                            <ns1:VERSION>
                                <xsl:value-of select="ns1:VERSION"/>
                            </ns1:VERSION>
                            <xsl:for-each select="ns1:FROM">
                                <ns1:FROM>
                                    <xsl:attribute name="ns1:COMPONENT_ID">
                                        <xsl:value-of select="@ns1:COMPONENT_ID"/>
                                    </xsl:attribute>
                                    <xsl:if test="@ns1:COMPONENT_VERSION">
                                        <xsl:attribute name="ns1:COMPONENT_VERSION">
                                            <xsl:value-of select="@ns1:COMPONENT_VERSION"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="@ns1:END_USER_INFO">
                                        <xsl:attribute name="ns1:END_USER_INFO">
                                            <xsl:value-of select="@ns1:END_USER_INFO"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="@ns1:SOURCE_ADDRESS">
                                        <xsl:attribute name="ns1:SOURCE_ADDRESS">
                                            <xsl:value-of select="@ns1:SOURCE_ADDRESS"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                </ns1:FROM>
                            </xsl:for-each>
                            <xsl:for-each select="ns1:TO">
                                <ns1:TO>
                                    <xsl:attribute name="ns1:DESTINATION">
                                        <xsl:value-of select="@ns1:DESTINATION"/>
                                    </xsl:attribute>
                                </ns1:TO>
                            </xsl:for-each>
                            <xsl:for-each select="ns1:TRACKING">
                                <ns1:TRACKING>
                                    <ns1:MESSAGE_ID>
                                        <xsl:value-of select="ns1:MESSAGE_ID"/>
                                    </ns1:MESSAGE_ID>
                                    <xsl:if test="ns1:EXTERNAL_REF">
                                        <ns1:EXTERNAL_REF>
                                            <xsl:value-of select="ns1:EXTERNAL_REF"/>
                                        </ns1:EXTERNAL_REF>
                                    </xsl:if>
                                    <xsl:for-each select="ns1:ITEM">
                                        <ns1:ITEM>
                                            <xsl:attribute name="ns1:APPINFO">
                                                <xsl:value-of select="@ns1:APPINFO"/>
                                            </xsl:attribute>
                                            <xsl:attribute name="ns1:EVENT">
                                                <xsl:value-of select="@ns1:EVENT"/>
                                            </xsl:attribute>
                                            <xsl:attribute name="ns1:TIMESTAMP">
                                                <xsl:value-of select="@ns1:TIMESTAMP"/>
                                            </xsl:attribute>
                                        </ns1:ITEM>
                                    </xsl:for-each>
                                    <xsl:for-each select="ns1:SEQUENCE_NO">
                                        <ns1:SEQUENCE_NO>
                                            <xsl:value-of select="."/>
                                        </ns1:SEQUENCE_NO>
                                    </xsl:for-each>
                                </ns1:TRACKING>
                            </xsl:for-each>
                            <xsl:for-each select="ns1:ATTRIBUTE">
                                <ns1:ATTRIBUTE>
                                    <xsl:attribute name="ns1:NAME">
                                        <xsl:value-of select="@ns1:NAME"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="ns1:VALUE">
                                        <xsl:value-of select="@ns1:VALUE"/>
                                    </xsl:attribute>
                                </ns1:ATTRIBUTE>
                            </xsl:for-each>
                        </ns1:CMH>
                    </xsl:for-each>
                    <ns19:BODY>
                        <ORDER>
                            <ORDER_HEADER>
                                <ORDER_TYPE>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/EClipsAdapter/ReplyParameters/GetNumberDetails/ORDER_TYPE"/>
                                </ORDER_TYPE>
                                <ORDER_ID>
                                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:NumberServiceOrderId"/>
                                </ORDER_ID>
                                <CUSTOMER_ID>
                                    <ID_PACKAGER>
                                        <EXTERNAL>
                                            <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:PackagerCode"/>
                                        </EXTERNAL>
                                    </ID_PACKAGER>
                                </CUSTOMER_ID>
                                <EXTERNAL_REFERENCE>
                                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:PackagerOrderId"/>
                                </EXTERNAL_REFERENCE>
                                <ORDER_STATUS>
                                    <ERROR_CODE>
                                        <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:EcnsErrorResponseStruct/pfx35:ErrorCode"/>
                                    </ERROR_CODE>
                                    <ERROR_DESCRIPTION>
                                        <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:EcnsErrorResponseStruct/pfx35:ErrorDescription"/>
                                    </ERROR_DESCRIPTION>
                                    <DELIVERY_STATUS_CODE>
                                        <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:EcnsOrderFeedbackStruct/pfx35:OrderSituationCode"/>
                                    </DELIVERY_STATUS_CODE>
                                    <DELIVERY_STATUS_DESCRIPTION>
                                        <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:EcnsOrderFeedbackStruct/pfx35:OrderSituationDescription"/>
                                    </DELIVERY_STATUS_DESCRIPTION>
                                    <DELIVERY_STATUS_ADDITIONAL_INFORMATION>
                                        <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:EcnsOrderFeedbackStruct/pfx35:AdditionalSituationInfo"/>
                                    </DELIVERY_STATUS_ADDITIONAL_INFORMATION>
                                    <STATUS_CODE>
                                        <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:EcnsOrderFeedbackStruct/pfx35:StatusCode"/>
                                    </STATUS_CODE>
                                    <STATUS_DESCRIPTION>
                                        <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:EcnsOrderFeedbackStruct/pfx35:StatusDescription"/>
                                    </STATUS_DESCRIPTION>
                                </ORDER_STATUS>
                                <CREATION_DATE>
                                    <xsl:value-of select="current-dateTime()"/>
                                </CREATION_DATE>
                            </ORDER_HEADER>
                            <ORDER_ITEM>
                                <ORDER_ITEM_HEADER>
                                    <ORDER_ITEM_TYPE>
                                        <xsl:value-of select="&quot;PRODUCT&quot;"/>
                                    </ORDER_ITEM_TYPE>
                                </ORDER_ITEM_HEADER>
                                <PRODUCT_CATEGORY>
                                    <xsl:value-of select="$_globalVariables/ns:GlobalVariables/EClipsAdapter/ReplyParameters/GetNumberDetails/PRODUCT_CATEGORY"/>
                                </PRODUCT_CATEGORY>
                                <PRODUCT>
                                    <MULTI_MEDIA_PRODUCT>
                                        <SERVICES>
                                            <MULTI_MEDIA_SERVICE>
                                                <xsl:if test="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:TelcoCode">
                                                    <SERVICE_PROVIDER_ID>
                                                        <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:TelcoCode"/>
                                                    </SERVICE_PROVIDER_ID>
                                                </xsl:if>
                                                <STATUS_CODE>
                                                    <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:NsnStatusCode"/>
                                                </STATUS_CODE>
                                                <xsl:choose>
                                                    <xsl:when test="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:ActualTelcoYN=&quot;Y&quot;">
                                                        <IS_CURRENT_SERVICE_PROVIDER>
                                                            <xsl:value-of select="true()"/>
                                                        </IS_CURRENT_SERVICE_PROVIDER>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <IS_CURRENT_SERVICE_PROVIDER>
                                                            <xsl:value-of select="false()"/>
                                                        </IS_CURRENT_SERVICE_PROVIDER>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </MULTI_MEDIA_SERVICE>
                                        </SERVICES>
                                        <RESOURCES>
                                            <PHONE_NUMBER>
                                                <xsl:choose>
                                                    <xsl:when test="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:CurrentOrderYN=&quot;Y&quot;">
                                                        <HAS_ACTIVE_ORDER>
                                                            <xsl:value-of select="true()"/>
                                                        </HAS_ACTIVE_ORDER>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <HAS_ACTIVE_ORDER>
                                                            <xsl:value-of select="false()"/>
                                                        </HAS_ACTIVE_ORDER>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                                <xsl:if test="exists($SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:TelephoneNumber)">
                                                    <UNFORMATTED>
                                                        <xsl:value-of select="$SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp/pfx35:ReadTelnrRespStruct/pfx35:TelephoneNumber"/>
                                                    </UNFORMATTED>
                                                </xsl:if>
                                            </PHONE_NUMBER>
                                        </RESOURCES>
                                    </MULTI_MEDIA_PRODUCT>
                                </PRODUCT>
                            </ORDER_ITEM>
                        </ORDER>
                    </ns19:BODY>
                </pfx38:UpdateOrderStatus>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log SOAP Request">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>477</pd:x>
            <pd:y>165</pd:y>
            <config>
                <processName>/Common/Sub Processes/Sub_Trace.process</processName>
            </config>
            <pd:inputBindings>
                <TraceIn>
                    <MsgCode>
                        <xsl:value-of select="&quot;EClips-04001&quot;"/>
                    </MsgCode>
                    <xsl:if test="$Parse-Request/pfx37:SubmitOrder/ns1:CMH/ns1:TRACKING/ns1:MESSAGE_ID">
                        <MsgId>
                            <xsl:value-of select="$Parse-Request/pfx37:SubmitOrder/ns1:CMH/ns1:TRACKING/ns1:MESSAGE_ID"/>
                        </MsgId>
                    </xsl:if>
                    <Parameter>
                        <xsl:value-of select="tib:render-xml($Map-to-SOAP-Request/pfx35:EcnsReadTelnrReq, false(), true())"/>
                    </Parameter>
                </TraceIn>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Log SOAP Response">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>701</pd:x>
            <pd:y>168</pd:y>
            <config>
                <processName>/Common/Sub Processes/Sub_Trace.process</processName>
            </config>
            <pd:inputBindings>
                <TraceIn>
                    <MsgCode>
                        <xsl:value-of select="&quot;EClips-04002&quot;"/>
                    </MsgCode>
                    <xsl:if test="$Parse-Request/pfx37:SubmitOrder/ns1:CMH/ns1:TRACKING/ns1:MESSAGE_ID">
                        <MsgId>
                            <xsl:value-of select="$Parse-Request/pfx37:SubmitOrder/ns1:CMH/ns1:TRACKING/ns1:MESSAGE_ID"/>
                        </MsgId>
                    </xsl:if>
                    <Parameter>
                        <xsl:value-of select="tib:render-xml($SOAPRequestReply/outputMessage/pfx35:EcnsReadTelnrResp, false(), true())"/>
                    </Parameter>
                </TraceIn>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="SOAPRequestReply">
            <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
            <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
            <pd:x>549</pd:x>
            <pd:y>270</pd:y>
            <config>
                <timeout>%%EClipsAdapter/Inbound/SOAP/Timeout%%</timeout>
                <service>pfx25:EcnsOrderingService</service>
                <servicePort>InportTelnrsHttpPort</servicePort>
                <operation>ReadTelnrOperation</operation>
                <soapAction>/ProcessDefinitions/V0.2/ReadTelnrServer</soapAction>
                <endpointURL>%%EClipsAdapter/Inbound/SOAP/EndPointURL/EcnsOrderingService/GNDEndPoint%%</endpointURL>
                <useProxy>false</useProxy>
                <requireBasicAuth>false</requireBasicAuth>
                <basicHttpAuthIdentity/>
                <ns20:ssl xmlns:ns20="http://www.tibco.com/xmlns/aemeta/services/2002">
                    <ns20:strongCipherSuitesOnly>true</ns20:strongCipherSuitesOnly>
                    <ns20:cert isRef="true">/EClipsAdapter/Shared Resources/Trusted Certificates/.folder</ns20:cert>
                </ns20:ssl>
            </config>
            <pd:inputBindings>
                <inputMessage>
                    <pfx35:EcnsReadTelnrReq>
                        <xsl:copy-of select="$Map-to-SOAP-Request/pfx35:EcnsReadTelnrReq/pfx35:EcnsHeaderStruct"/>
                        <xsl:copy-of select="$Map-to-SOAP-Request/pfx35:EcnsReadTelnrReq/pfx35:ReadTelnrReqStruct"/>
                    </pfx35:EcnsReadTelnrReq>
                </inputMessage>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Throw Exception</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Request</pd:from>
        <pd:to>Throw Exception</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse Request</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Request</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>Throw Exception</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-52429</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>