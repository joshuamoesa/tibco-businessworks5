<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://wsdl.kpn.com/fixed/ckradapter/FindCustomer.wsdl" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx2="urn:FIND_CUSTOMER" xmlns:ns="http://www.tibco.com/pe/EngineTypes" xmlns:pfx3="http://xmlns.kpn.com/fixed/ckradapter/request/FindCustomer.xsd" xmlns:pfx4="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" xmlns:ns1="http://xmlns.kpn.com/common/cdm/Base.xsd" xmlns:ns2="http://xmlns.kpn.com/fixed/ckradapter/common/CKRResponse.xsd" xmlns:ns3="http://xmlns.kpn.com/fixed/ckradapter/common/Customer.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns5="http://xmlns.kpn.com/fixed/ckradapter/common/CKRRequest.xsd" xmlns:pfx5="http://xmlns.kpn.com/fixed/ckradapter/common/CustomerReference.xsd" xmlns:pfx6="http://xmlns.kpn.com/fixed/ckradapter/common/ExternalCustomerReference.xsd" xmlns:pfx7="http://xmlns.kpn.com/fixed/ckradapter/common/PropertyAddress.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns6="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" xmlns:pfx8="urn:FindCustomer" xmlns:pfx9="http://xmlns.example.com/unique/default/namespace/1095237788188" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns7="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx13="http://xmlns.kpn.com/common/cdm/ErrorMessage.xsd" xmlns:ns8="http://xmlns.kpn.com/fixed/ckradapter/common/OrganizationName.xsd" xmlns:ns82="http://xmlns.kpn.com/fixed/ckradapter/common/IndividualName.xsd" xmlns:ns13="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions" xmlns:ns14="http://schemas.tibco.com/bw/plugins/tibrv/5.0/tibrvExceptions" xmlns:ns15="http://xmlns.kpn.com/fixed/common/AnyXMLMessage.xsd" xmlns:pfx17="urn:OrderManagerAdapter.FindCustomer" xmlns:pfx10="urn:OrderManagerAdapter.GetCustomerBillRecipient" xmlns:pfx11="urn:OrderManagerAdapter.AddCustomerLocationAGOP" xmlns:pfx12="urn:OrderManagerAdapter.RemoveCustomerReferences" xmlns:ns9="http://xmlns.kpn.com/fixed/ordermanageradapter/namespace/1121158287078" xmlns:pfx14="http://xmlns.kpn.com/fixed/ckradapter/request/AddCustomerLocationAGOP.xsd" xmlns:pfx15="http://xmlns.kpn.com/fixed/ckradapter/response/AddCustomerLocationAGOP.xsd" xmlns:pfx16="urn:OrderManagerAdapter.AddCustomerReference" xmlns:pfx18="urn:IKKAdapter.GetTickets" xmlns:pfx19="urn:IKKAdapter.GetCustomerDetails" xmlns:pfx20="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/CKRAdapter/Services/GetCustomerDetails.xsd" xmlns:pfx23="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/CKRAdapter/Services/GetTickets.xsd" xmlns:pfx24="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/IKKAdapter/Common/AnyXMLMessage.xsd" xmlns:pfx21="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/CKRAdapter/Request/GetTickets.xsd" xmlns:pfx22="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/CKRAdapter/Response/GetTickets.xsd" xmlns:pfx25="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/KanvasContractAdapter/Request/GetTickets.xsd" xmlns:pfx26="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/KanvasContractAdapter/Response/GetTickets.xsd" xmlns:pfx27="urn:IKKAdapter.GetLineFacilities" xmlns:pfx28="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/EnginAdapter/Request/GetTickets.xsd" xmlns:pfx29="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/EnginAdapter/Response/GetTickets.xsd" xmlns:pfx30="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/Common/CMH.xsd" xmlns:pfx31="http://xmlns.example.com/unique/default/namespace/1086798344886" xmlns:pfx32="http://xmlns.example.com/unique/default/namespace/1086802707930" xmlns:ns10="http://xmlns.example.com/unique/default/namespace/1087368660275" xmlns:ns11="http://xmlns.example.com/unique/default/namespace/1087727167217" xmlns:ns12="http://xmlns.example.com/unique/default/namespace/1087726986577" xmlns:ns16="http://xmlns.example.com/unique/default/namespace/1087727306677" xmlns:ns17="http://xmlns.example.com/unique/default/namespace/1087731458057" xmlns:ns18="http://xmlns.example.com/unique/default/namespace/1087731847987" xmlns:ns19="http://xmlns.example.com/unique/default/namespace/1087727411248" xmlns:ns20="http://xmlns.example.com/unique/default/namespace/1087727473027" xmlns:pfx33="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Request/GetTickets.xsd" xmlns:pfx34="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Response/GetTickets.xsd" xmlns:ns21="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/MELD_S-0100.xsd" xmlns:ns22="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/ASTRIDResponse.xsd" xmlns:ns23="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/KLANT_S-0100.xsd" xmlns:ns24="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/KLACHT_S-0102.xsd" xmlns:ns25="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/WERK_S-0100.xsd" xmlns:ns26="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/VERPL_S-0100.xsd" xmlns:ns27="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/MEET_S-0100.xsd" xmlns:ns28="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/TECH_S-0100.xsd" xmlns:ns29="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/STRBOX_S-0100.xsd" xmlns:ns30="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/VOROND_S-0100.xsd" xmlns:ns31="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/KLASEL_S-0100.xsd" xmlns:ns32="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/STATUS_S-0100.xsd">
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/Base.xsd" schemaLocation="/XSDSchemas/Common/Base.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ErrorMessage.xsd" schemaLocation="/XSDSchemas/Common/ErrorMessage.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/FindCustomer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/request/FindCustomer.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Request/FindCustomer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/response/AddCustomerLocationAGOP.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/AddCustomerLocationAGOP.xsd"/>
    <xsd:import namespace="urn:OrderManagerAdapter.AddCustomerLocationAGOP" schemaLocation="/WSDL/OrderManagerAdapter/AddCustomerLocationAGOPService.wsdl"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/request/AddCustomerLocationAGOP.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Request/AddCustomerLocationAGOP.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" schemaLocation="/XSDSchemas/Common/ResultStatus.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/CKRAdapter/Services/GetCustomerDetails.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Services/GetCustomerDetails.xsd"/>
    <xsd:import namespace="urn:IKKAdapter.GetCustomerDetails" schemaLocation="/WSDL/IKKAdapter/GetCustomerDetails.wsdl"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/IKKAdapter/Common/AnyXMLMessage.xsd" schemaLocation="/XSDSchemas/IKKAdapter/Common/AnyXMLMessage.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/CKRAdapter/Services/GetTickets.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Services/GetTickets.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/CKRAdapter/Request/GetTickets.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Request/GetTickets.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/CKRAdapter/Response/GetTickets.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/GetTickets.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/KanvasContractAdapter/Request/GetTickets.xsd" schemaLocation="/XSDSchemas/KanvasContractAdapter/Request/GetTickets.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/KanvasContractAdapter/Response/GetTickets.xsd" schemaLocation="/XSDSchemas/KanvasContractAdapter/Response/GetTickets.xsd"/>
    <xsd:import namespace="urn:IKKAdapter.GetTickets" schemaLocation="/WSDL/IKKAdapter/GetTickets.wsdl"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/Common/CMH.xsd" schemaLocation="/XSDSchemas/Common/CMH.xsd"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1086798344886" schemaLocation="/XSDSchemas/EnginAdapter/Request/GetTickets.xsd"/>
    <xsd:import namespace="http://xmlns.example.com/unique/default/namespace/1086802707930" schemaLocation="/XSDSchemas/EnginAdapter/Response/GetTickets.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Request/GetTickets.xsd" schemaLocation="/XSDSchemas/ASTRIDAdapter/Request/GetTickets.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ASTRIDAdapter/Response/GetTickets.xsd" schemaLocation="/XSDSchemas/ASTRIDAdapter/Response/GetTickets.xsd"/>
    <wsdl:import namespace="" location=""/>
    <wsdl:import namespace="urn:OrderManagerAdapter.FindCustomer" location="/WSDL/OrderManagerAdapter/FindCustomerService.wsdl"/>
    <wsdl:import namespace="urn:OrderManagerAdapter.AddCustomerLocationAGOP" location="/WSDL/OrderManagerAdapter/AddCustomerLocationAGOPService.wsdl"/>
    <wsdl:import namespace="urn:IKKAdapter.GetCustomerDetails" location="/WSDL/IKKAdapter/GetCustomerDetails.wsdl"/>
    <wsdl:import namespace="urn:IKKAdapter.GetTickets" location="/WSDL/IKKAdapter/GetTickets.wsdl"/>
    <pd:name>IKKAdapter/Processes/GetTickets.process</pd:name>
    <pd:description/>
    <pd:startName>SOAPEvent</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="SOAPEvent">
        <pd:type>com.tibco.plugin.soap.SOAPEventSource</pd:type>
        <pd:resourceType>ae.activities.SOAPEventSourceUI</pd:resourceType>
        <pd:x>45</pd:x>
        <pd:y>193</pd:y>
        <config>
            <_eventTimeout>60000</_eventTimeout>
            <service>pfx18:GetTicketsPortType</service>
            <operation>GetTickets</operation>
            <attachmentStyle>none</attachmentStyle>
            <wsdlNamespaceRoot>urn:IKKAdapter.GetTickets/GetTicketsImpl</wsdlNamespaceRoot>
            <operationStyle>document</operationStyle>
            <soapUse>literal</soapUse>
            <inputNamespace/>
            <outputNamespace/>
            <faultNamespace/>
            <embedWsdlComponents>true</embedWsdlComponents>
            <embedSchemaComponents>true</embedSchemaComponents>
            <soapAction>""</soapAction>
            <sharedChannel>/IKKAdapter/Shared Resources/IKK SOAP HTTP Connection.sharedhttp</sharedChannel>
            <sharedChannels>
                <httpChannel>
                    <useBasicAuthentication>false</useBasicAuthentication>
                </httpChannel>
            </sharedChannels>
            <useBasicAuthentication>false</useBasicAuthentication>
            <inputHeadersMessage/>
            <outputHeadersMessage/>
            <portAddressPrefix/>
            <inputAttachmentBindings/>
            <outputAttachmentBindings/>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>948</pd:endX>
    <pd:endY>335</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:activity name="LogPrecessErrorRv">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>473</pd:x>
        <pd:y>329</pd:y>
        <config>
            <processName>/IKKAdapter/Sub Processes/Sub_LogErrorRv.process</processName>
        </config>
        <pd:inputBindings>
            <params>
                <AnyXMLMessage>
                    <xsl:copy-of select="$_error/ns:ErrorReport"/>
                </AnyXMLMessage>
                <StringMessage>
                    <xsl:value-of select="&quot;Process exception&quot;"/>
                </StringMessage>
                <InitCMH>
                    <xsl:copy-of select="$InitCMH/CMH/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$InitCMH/CMH/@*"/>
                    <xsl:copy-of select="$InitCMH/CMH/node()"/>
                </InitCMH>
                <BuiltCMH>
                    <xsl:copy-of select="$BuildCMH/CMH/ancestor-or-self::*/namespace::node()"/>
                    <xsl:copy-of select="$BuildCMH/CMH/@*"/>
                    <xsl:copy-of select="$BuildCMH/CMH/node()"/>
                </BuiltCMH>
            </params>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="TryCatch">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>323</pd:x>
        <pd:y>13</pd:y>
        <pd:width>711</pd:width>
        <pd:height>237</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>BuildCMH</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogSOAPReplyOK</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MapEAIRequest</pd:from>
            <pd:to>LogRvRequest</pd:to>
            <pd:xpathDescription/>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogRvRequest</pd:from>
            <pd:to>EAI-CKR</pd:to>
            <pd:xpathDescription/>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>EAI-CKR</pd:from>
            <pd:to>LogRvResponse</pd:to>
            <pd:xpathDescription/>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogRvResponse</pd:from>
            <pd:to>MapEAIReply</pd:to>
            <pd:xpathDescription/>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MapEAIReply</pd:from>
            <pd:to>LogSoapReplyMsg</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogSoapReplyMsg</pd:from>
            <pd:to>SOAPReply</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>BuildCMH</pd:from>
            <pd:to>LogBuildCMH</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogSoapEvent</pd:from>
            <pd:to>MapEAIRequest</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SOAPReply</pd:from>
            <pd:to>LogSOAPReplyOK</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogBuildCMH</pd:from>
            <pd:to>MapSOAPEvent</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MapSOAPEvent</pd:from>
            <pd:to>LogSoapEvent</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="MapEAIRequest">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>580</pd:x>
            <pd:y>173</pd:y>
            <config>
                <element ref="pfx31:GetTickets"/>
            </config>
            <pd:inputBindings>
                <pfx31:GetTickets>
                    <xsl:for-each select="$BuildCMH/CMH">
                        <ns1:CMH>
                            <ns1:ID>
                                <xsl:value-of select="ID"/>
                            </ns1:ID>
                            <ns1:NAME>
                                <xsl:value-of select="NAME"/>
                            </ns1:NAME>
                            <xsl:if test="FID">
                                <ns1:FID>
                                    <xsl:value-of select="FID"/>
                                </ns1:FID>
                            </xsl:if>
                            <xsl:if test="MID">
                                <ns1:MID>
                                    <xsl:value-of select="MID"/>
                                </ns1:MID>
                            </xsl:if>
                            <ns1:PARADIGM>
                                <xsl:value-of select="PARADIGM"/>
                            </ns1:PARADIGM>
                            <ns1:OBJECT>
                                <xsl:value-of select="OBJECT"/>
                            </ns1:OBJECT>
                            <ns1:VERSION>
                                <xsl:value-of select="VERSION"/>
                            </ns1:VERSION>
                            <xsl:for-each select="FROM">
                                <ns1:FROM>
                                    <xsl:attribute name="ns1:COMPONENT_ID">
                                        <xsl:value-of select="@COMPONENT_ID"/>
                                    </xsl:attribute>
                                    <xsl:if test="@COMPONENT_VERSION">
                                        <xsl:attribute name="ns1:COMPONENT_VERSION">
                                            <xsl:value-of select="@COMPONENT_VERSION"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="@END_USER_INFO">
                                        <xsl:attribute name="ns1:END_USER_INFO">
                                            <xsl:value-of select="@END_USER_INFO"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="@SOURCE_ADDRESS">
                                        <xsl:attribute name="ns1:SOURCE_ADDRESS">
                                            <xsl:value-of select="@SOURCE_ADDRESS"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                </ns1:FROM>
                            </xsl:for-each>
                            <xsl:for-each select="TO">
                                <ns1:TO>
                                    <xsl:attribute name="ns1:DESTINATION">
                                        <xsl:value-of select="@DESTINATION"/>
                                    </xsl:attribute>
                                </ns1:TO>
                            </xsl:for-each>
                            <xsl:for-each select="TRACKING">
                                <ns1:TRACKING>
                                    <ns1:MESSAGE_ID>
                                        <xsl:value-of select="MESSAGE_ID"/>
                                    </ns1:MESSAGE_ID>
                                    <xsl:if test="EXTERNAL_REF">
                                        <ns1:EXTERNAL_REF>
                                            <xsl:value-of select="EXTERNAL_REF"/>
                                        </ns1:EXTERNAL_REF>
                                    </xsl:if>
                                    <xsl:for-each select="ITEM">
                                        <ns1:ITEM>
                                            <xsl:attribute name="ns1:APPINFO">
                                                <xsl:value-of select="@APPINFO"/>
                                            </xsl:attribute>
                                            <xsl:attribute name="ns1:EVENT">
                                                <xsl:value-of select="@EVENT"/>
                                            </xsl:attribute>
                                            <xsl:attribute name="ns1:TIMESTAMP">
                                                <xsl:value-of select="@TIMESTAMP"/>
                                            </xsl:attribute>
                                        </ns1:ITEM>
                                    </xsl:for-each>
                                    <xsl:for-each select="SEQUENCE_NO">
                                        <ns1:SEQUENCE_NO>
                                            <xsl:value-of select="."/>
                                        </ns1:SEQUENCE_NO>
                                    </xsl:for-each>
                                </ns1:TRACKING>
                            </xsl:for-each>
                            <xsl:for-each select="ATTRIBUTE">
                                <ns1:ATTRIBUTE>
                                    <xsl:attribute name="ns1:NAME">
                                        <xsl:value-of select="@NAME"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="ns1:VALUE">
                                        <xsl:value-of select="@VALUE"/>
                                    </xsl:attribute>
                                </ns1:ATTRIBUTE>
                            </xsl:for-each>
                        </ns1:CMH>
                    </xsl:for-each>
                    <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:activeTickets">
                        <ACTIVE_TICKETS>
                            <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:activeTickets"/>
                        </ACTIVE_TICKETS>
                    </xsl:if>
                    <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:historicalTickets">
                        <HISTORICAL_TICKETS>
                            <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:historicalTickets"/>
                        </HISTORICAL_TICKETS>
                    </xsl:if>
                    <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:streetName">
                        <STREET_NAME>
                            <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:streetName"/>
                        </STREET_NAME>
                    </xsl:if>
                    <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:cityName">
                        <CITY_NAME>
                            <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:cityName"/>
                        </CITY_NAME>
                    </xsl:if>
                    <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:fromDate">
                        <FROM_DATE>
                            <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:fromDate"/>
                        </FROM_DATE>
                    </xsl:if>
                    <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:untilDate">
                        <UNTIL_DATE>
                            <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:untilDate"/>
                        </UNTIL_DATE>
                    </xsl:if>
                    <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:customerRefNo">
                        <CUSTOMER_REF_NO>
                            <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:customerRefNo"/>
                        </CUSTOMER_REF_NO>
                    </xsl:if>
                    <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:centralCustomerId">
                        <CENTRAL_CUSTOMER_ID>
                            <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:centralCustomerId"/>
                        </CENTRAL_CUSTOMER_ID>
                    </xsl:if>
                </pfx31:GetTickets>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogRvRequest">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>633</pd:x>
            <pd:y>80</pd:y>
            <config>
                <processName>/IKKAdapter/Sub Processes/Sub_LogMessage.process</processName>
            </config>
            <pd:inputBindings>
                <param>
                    <AnyXMLMessage>
                        <xsl:copy-of select="$MapEAIRequest/pfx31:GetTickets"/>
                    </AnyXMLMessage>
                    <StringMessage>
                        <xsl:value-of select="&quot;RvRequestLog&quot;"/>
                    </StringMessage>
                    <LogLevel>
                        <xsl:value-of select="&quot;INFO&quot;"/>
                    </LogLevel>
                </param>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogRvResponse">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>741</pd:x>
            <pd:y>80</pd:y>
            <config>
                <processName>/IKKAdapter/Sub Processes/Sub_LogMessage.process</processName>
            </config>
            <pd:inputBindings>
                <param>
                    <AnyXMLMessage>
                        <xsl:copy-of select="$EAI-CKR/ActivityOutput/body"/>
                    </AnyXMLMessage>
                    <StringMessage>
                        <xsl:value-of select="&quot;RvResposeLog&quot;"/>
                    </StringMessage>
                    <LogLevel>
                        <xsl:value-of select="&quot;INFO&quot;"/>
                    </LogLevel>
                </param>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="SOAPReply">
            <pd:type>com.tibco.plugin.soap.SOAPSendReplyActivity</pd:type>
            <pd:resourceType>ae.activities.SOAPSendReplyUI</pd:resourceType>
            <pd:x>913</pd:x>
            <pd:y>166</pd:y>
            <config>
                <eventSource>SOAPEvent</eventSource>
            </config>
            <pd:inputBindings>
                <outputMessage>
                    <xsl:copy-of select="$MapEAIReply/pfx18:GetTicketsResponse"/>
                </outputMessage>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="EAI-CKR">
            <pd:type>com.tibco.plugin.tibrv.RVRequestActivity</pd:type>
            <pd:resourceType>ae.rvpalette.RVRequestActivity</pd:resourceType>
            <pd:x>687</pd:x>
            <pd:y>171</pd:y>
            <config>
                <wantsValidationForOutput>true</wantsValidationForOutput>
                <wantsFiltrationForOutput>false</wantsFiltrationForOutput>
                <wantsXMLCompliantFieldNames>false</wantsXMLCompliantFieldNames>
                <wantsXMLCompliantFieldNamesOutput>false</wantsXMLCompliantFieldNamesOutput>
                <subject/>
                <operationTimeout>%%IKKAdapter/CKRAdapter/Timeout%%</operationTimeout>
                <xmlEncoding>true</xmlEncoding>
                <sharedChannel>/IKKAdapter/Shared Resources/EAI Rendezvous Transport.rvtransport</sharedChannel>
                <inputXsdString ref="pfx31:GetTickets"/>
                <outputXsdString ref="pfx32:GetTickets"/>
            </config>
            <pd:inputBindings>
                <ActivityInput>
                    <xsl:if test="$BuildCMH/CMH/TO/@DESTINATION">
                        <subject>
                            <xsl:value-of select="$BuildCMH/CMH/TO/@DESTINATION"/>
                        </subject>
                    </xsl:if>
                    <timeout>
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IKKAdapter/CKRAdapter/Timeout"/>
                    </timeout>
                    <body>
                        <xsl:copy-of select="$MapEAIRequest/pfx31:GetTickets/ancestor-or-self::*/namespace::node()"/>
                        <xsl:copy-of select="$MapEAIRequest/pfx31:GetTickets/@*"/>
                        <xsl:copy-of select="$MapEAIRequest/pfx31:GetTickets/node()"/>
                    </body>
                </ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogSoapReplyMsg">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>854</pd:x>
            <pd:y>82</pd:y>
            <config>
                <processName>/IKKAdapter/Sub Processes/Sub_LogMessage.process</processName>
            </config>
            <pd:inputBindings>
                <param>
                    <AnyXMLMessage>
                        <xsl:copy-of select="$MapEAIReply/pfx18:GetTicketsResponse"/>
                    </AnyXMLMessage>
                    <StringMessage>
                        <xsl:value-of select="&quot;SoapReplyMsgLog&quot;"/>
                    </StringMessage>
                    <LogLevel>
                        <xsl:value-of select="&quot;INFO&quot;"/>
                    </LogLevel>
                </param>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="MapEAIReply">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>796</pd:x>
            <pd:y>170</pd:y>
            <config>
                <element ref="pfx18:GetTicketsResponse"/>
            </config>
            <pd:inputBindings>
                <pfx18:GetTicketsResponse>
                    <pfx18:herkomstCode>
                        <xsl:value-of select="$EAI-CKR/ActivityOutput/body/RESULT_STATUS/@ns6:STATUS"/>
                    </pfx18:herkomstCode>
                    <xsl:if test="$EAI-CKR/ActivityOutput/body/RESULT_STATUS/@ns6:ERROR_CODE">
                        <pfx18:transactieStatus>
                            <xsl:value-of select="$EAI-CKR/ActivityOutput/body/RESULT_STATUS/@ns6:ERROR_CODE"/>
                        </pfx18:transactieStatus>
                    </xsl:if>
                    <xsl:if test="$EAI-CKR/ActivityOutput/body/RESULT_STATUS/@ns6:ERROR_DESCRIPTION">
                        <pfx18:errorMessage>
                            <xsl:value-of select="$EAI-CKR/ActivityOutput/body/RESULT_STATUS/@ns6:ERROR_DESCRIPTION"/>
                        </pfx18:errorMessage>
                    </xsl:if>
                    <pfx18:GUID>
                        <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:GUID"/>
                    </pfx18:GUID>
                    <pfx18:TicketList>
                        <xsl:for-each select="$EAI-CKR/ActivityOutput/body/TROUBLE_REPORT">
                            <pfx18:Ticket>
                                <xsl:choose>
                                    <xsl:when test="exists(ns10:ACCEPT_DATE_TIME)">
                                        <pfx18:ACCEPT_DATE_TIME>
                                            <xsl:value-of select="ns10:ACCEPT_DATE_TIME"/>
                                        </pfx18:ACCEPT_DATE_TIME>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx18:ACCEPT_DATE_TIME>
                                            <xsl:value-of select="&quot;1970-01-01T00:00:00&quot;"/>
                                        </pfx18:ACCEPT_DATE_TIME>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:if test="ns10:ANALYSIS_INFORMATION">
                                    <pfx18:ANALYSIS_INFORMATION>
                                        <xsl:value-of select="ns10:ANALYSIS_INFORMATION"/>
                                    </pfx18:ANALYSIS_INFORMATION>
                                </xsl:if>
                                <xsl:if test="ns10:ANALYSIS_INFORMATION_SUMMARY">
                                    <pfx18:ANALYSIS_INFORMATION_SUMMARY>
                                        <xsl:value-of select="ns10:ANALYSIS_INFORMATION_SUMMARY"/>
                                    </pfx18:ANALYSIS_INFORMATION_SUMMARY>
                                </xsl:if>
                                <xsl:if test="ns10:ANALYST_ID">
                                    <pfx18:ANALYST_ID>
                                        <xsl:value-of select="ns10:ANALYST_ID"/>
                                    </pfx18:ANALYST_ID>
                                </xsl:if>
                                <xsl:if test="ns10:APPOINTMENT_ENGINEER_AREA">
                                    <pfx18:APPOINTMENT_ENGINEER_AREA>
                                        <xsl:value-of select="ns10:APPOINTMENT_ENGINEER_AREA"/>
                                    </pfx18:APPOINTMENT_ENGINEER_AREA>
                                </xsl:if>
                                <xsl:if test="ns10:ASSIGNED_DATE_TIME">
                                    <pfx18:ASSIGNED_DATE_TIME>
                                        <xsl:value-of select="ns10:ASSIGNED_DATE_TIME"/>
                                    </pfx18:ASSIGNED_DATE_TIME>
                                </xsl:if>
                                <xsl:if test="ns10:CLOSED_DATE">
                                    <pfx18:CLOSED_DATE>
                                        <xsl:value-of select="ns10:CLOSED_DATE"/>
                                    </pfx18:CLOSED_DATE>
                                </xsl:if>
                                <xsl:if test="ns10:CLOSURE_REPORT_CODE">
                                    <pfx18:CLOSURE_REPORT_CODE>
                                        <xsl:value-of select="ns10:CLOSURE_REPORT_CODE"/>
                                    </pfx18:CLOSURE_REPORT_CODE>
                                </xsl:if>
                                <xsl:if test="ns10:CREATED_ON_DATE">
                                    <pfx18:CREATED_ON_DATE>
                                        <xsl:value-of select="ns10:CREATED_ON_DATE"/>
                                    </pfx18:CREATED_ON_DATE>
                                </xsl:if>
                                <xsl:if test="ns10:CUSTOMER_ACK_COMPLETE_DATETIME">
                                    <pfx18:CUSTOMER_ACK_COMPLETE_DATETIME>
                                        <xsl:value-of select="ns10:CUSTOMER_ACK_COMPLETE_DATETIME"/>
                                    </pfx18:CUSTOMER_ACK_COMPLETE_DATETIME>
                                </xsl:if>
                                <xsl:if test="ns10:EMPLOYEE_LOGIN_NAME">
                                    <pfx18:EMPLOYEE_LOGIN_NAME>
                                        <xsl:value-of select="ns10:EMPLOYEE_LOGIN_NAME"/>
                                    </pfx18:EMPLOYEE_LOGIN_NAME>
                                </xsl:if>
                                <xsl:if test="ns10:EXTERNAL_CUSTOMER_REF_NO">
                                    <pfx18:EXTERNAL_CUSTOMER_REF_NO>
                                        <xsl:value-of select="ns10:EXTERNAL_CUSTOMER_REF_NO"/>
                                    </pfx18:EXTERNAL_CUSTOMER_REF_NO>
                                </xsl:if>
                                <xsl:if test="ns10:FORMULA_ID">
                                    <pfx18:FORMULA_ID>
                                        <xsl:value-of select="ns10:FORMULA_ID"/>
                                    </pfx18:FORMULA_ID>
                                </xsl:if>
                                <xsl:if test="ns10:ISDN_SUB_NUMBER">
                                    <pfx18:ISDN_SUB_NUMBER>
                                        <xsl:value-of select="ns10:ISDN_SUB_NUMBER"/>
                                    </pfx18:ISDN_SUB_NUMBER>
                                </xsl:if>
                                <xsl:if test="ns10:MM007C_TROUBLE_URGENCY_FLAG">
                                    <pfx18:MM007C_TROUBLE_URGENCY_FLAG>
                                        <xsl:value-of select="ns10:MM007C_TROUBLE_URGENCY_FLAG"/>
                                    </pfx18:MM007C_TROUBLE_URGENCY_FLAG>
                                </xsl:if>
                                <xsl:if test="ns10:MM007C_TROUBLE_URGENCY_ID">
                                    <pfx18:MM007C_TROUBLE_URGENCY_ID>
                                        <xsl:value-of select="ns10:MM007C_TROUBLE_URGENCY_ID"/>
                                    </pfx18:MM007C_TROUBLE_URGENCY_ID>
                                </xsl:if>
                                <xsl:if test="ns10:MM007R_PRODUCT_TYPE_DESCRIPTION">
                                    <pfx18:MM007R_PRODUCT_TYPE_DESCRIPTION>
                                        <xsl:value-of select="ns10:MM007R_PRODUCT_TYPE_DESCRIPTION"/>
                                    </pfx18:MM007R_PRODUCT_TYPE_DESCRIPTION>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_ANALYST_TEXT">
                                    <pfx18:MM007_ANALYST_TEXT>
                                        <xsl:value-of select="ns10:MM007_ANALYST_TEXT"/>
                                    </pfx18:MM007_ANALYST_TEXT>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_APPOINTMENT_DT">
                                    <pfx18:MM007_APPOINTMENT_DT>
                                        <xsl:value-of select="ns10:MM007_APPOINTMENT_DT"/>
                                    </pfx18:MM007_APPOINTMENT_DT>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_APPOINTMENT_ORG_TEXT">
                                    <pfx18:MM007_APPOINTMENT_ORG_TEXT>
                                        <xsl:value-of select="ns10:MM007_APPOINTMENT_ORG_TEXT"/>
                                    </pfx18:MM007_APPOINTMENT_ORG_TEXT>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_BAAN_CONTRACT_ID">
                                    <pfx18:MM007_BAAN_CONTRACT_ID>
                                        <xsl:value-of select="ns10:MM007_BAAN_CONTRACT_ID"/>
                                    </pfx18:MM007_BAAN_CONTRACT_ID>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_CONTRACT_BEGIN_DT">
                                    <pfx18:MM007_CONTRACT_BEGIN_DT>
                                        <xsl:value-of select="ns10:MM007_CONTRACT_BEGIN_DT"/>
                                    </pfx18:MM007_CONTRACT_BEGIN_DT>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_CONTRACT_CODE">
                                    <pfx18:MM007_CONTRACT_CODE>
                                        <xsl:value-of select="ns10:MM007_CONTRACT_CODE"/>
                                    </pfx18:MM007_CONTRACT_CODE>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_CONTRACT_HALFHOUR_IND">
                                    <pfx18:MM007_CONTRACT_HALFHOUR_IND>
                                        <xsl:value-of select="ns10:MM007_CONTRACT_HALFHOUR_IND"/>
                                    </pfx18:MM007_CONTRACT_HALFHOUR_IND>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_CUSTOMER_ACCEPTS_COSTS">
                                    <pfx18:MM007_CUSTOMER_ACCEPTS_COSTS>
                                        <xsl:value-of select="ns10:MM007_CUSTOMER_ACCEPTS_COSTS"/>
                                    </pfx18:MM007_CUSTOMER_ACCEPTS_COSTS>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_CUSTOMER_CONTRACT_COUNT">
                                    <pfx18:MM007_CUSTOMER_CONTRACT_COUNT>
                                        <xsl:value-of select="ns10:MM007_CUSTOMER_CONTRACT_COUNT"/>
                                    </pfx18:MM007_CUSTOMER_CONTRACT_COUNT>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_DISPATCH_SYSTEM">
                                    <pfx18:MM007_DISPATCH_SYSTEM>
                                        <xsl:value-of select="ns10:MM007_DISPATCH_SYSTEM"/>
                                    </pfx18:MM007_DISPATCH_SYSTEM>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_ENGINEER_WILL_VISIT_CUSTOMER">
                                    <pfx18:MM007_ENGINEER_WILL_VISIT_CUSTOMER>
                                        <xsl:value-of select="ns10:MM007_ENGINEER_WILL_VISIT_CUSTOMER"/>
                                    </pfx18:MM007_ENGINEER_WILL_VISIT_CUSTOMER>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_ORDER_TYPE_ABBREVIATION">
                                    <pfx18:MM007_ORDER_TYPE_ABBREVIATION>
                                        <xsl:value-of select="ns10:MM007_ORDER_TYPE_ABBREVIATION"/>
                                    </pfx18:MM007_ORDER_TYPE_ABBREVIATION>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_OWNED_TROUBLE_REPORT">
                                    <pfx18:MM007_OWNED_TROUBLE_REPORT>
                                        <xsl:value-of select="ns10:MM007_OWNED_TROUBLE_REPORT"/>
                                    </pfx18:MM007_OWNED_TROUBLE_REPORT>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_PART_OF_DAY_BEGIN_TM">
                                    <pfx18:MM007_PART_OF_DAY_BEGIN_TM>
                                        <xsl:value-of select="ns10:MM007_PART_OF_DAY_BEGIN_TM"/>
                                    </pfx18:MM007_PART_OF_DAY_BEGIN_TM>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_PART_OF_DAY_CODE">
                                    <pfx18:MM007_PART_OF_DAY_CODE>
                                        <xsl:value-of select="ns10:MM007_PART_OF_DAY_CODE"/>
                                    </pfx18:MM007_PART_OF_DAY_CODE>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_PART_OF_DAY_END_TM">
                                    <pfx18:MM007_PART_OF_DAY_END_TM>
                                        <xsl:value-of select="ns10:MM007_PART_OF_DAY_END_TM"/>
                                    </pfx18:MM007_PART_OF_DAY_END_TM>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_PART_OF_DAY_ORG_CODE">
                                    <pfx18:MM007_PART_OF_DAY_ORG_CODE>
                                        <xsl:value-of select="ns10:MM007_PART_OF_DAY_ORG_CODE"/>
                                    </pfx18:MM007_PART_OF_DAY_ORG_CODE>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_PRODUCT_CATEGORY_ID">
                                    <pfx18:MM007_PRODUCT_CATEGORY_ID>
                                        <xsl:value-of select="ns10:MM007_PRODUCT_CATEGORY_ID"/>
                                    </pfx18:MM007_PRODUCT_CATEGORY_ID>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_PRODUCT_ID">
                                    <pfx18:MM007_PRODUCT_ID>
                                        <xsl:value-of select="ns10:MM007_PRODUCT_ID"/>
                                    </pfx18:MM007_PRODUCT_ID>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_PRODUCT_TYPE_CODE">
                                    <pfx18:MM007_PRODUCT_TYPE_CODE>
                                        <xsl:value-of select="ns10:MM007_PRODUCT_TYPE_CODE"/>
                                    </pfx18:MM007_PRODUCT_TYPE_CODE>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_PRODUCT_TYPE_CODE_1">
                                    <pfx18:MM007_PRODUCT_TYPE_CODE_1>
                                        <xsl:value-of select="ns10:MM007_PRODUCT_TYPE_CODE_1"/>
                                    </pfx18:MM007_PRODUCT_TYPE_CODE_1>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_PRODUCT_TYPE_DESCRIPTION">
                                    <pfx18:MM007_PRODUCT_TYPE_DESCRIPTION>
                                        <xsl:value-of select="ns10:MM007_PRODUCT_TYPE_DESCRIPTION"/>
                                    </pfx18:MM007_PRODUCT_TYPE_DESCRIPTION>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_PRODUCT_TYPE_DESCRIPTION_1">
                                    <pfx18:MM007_PRODUCT_TYPE_DESCRIPTION_1>
                                        <xsl:value-of select="ns10:MM007_PRODUCT_TYPE_DESCRIPTION_1"/>
                                    </pfx18:MM007_PRODUCT_TYPE_DESCRIPTION_1>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_PRODUCT_TYPE_ID">
                                    <pfx18:MM007_PRODUCT_TYPE_ID>
                                        <xsl:value-of select="ns10:MM007_PRODUCT_TYPE_ID"/>
                                    </pfx18:MM007_PRODUCT_TYPE_ID>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_REGION_ID_SEQ_NUMBER">
                                    <pfx18:MM007_REGION_ID_SEQ_NUMBER>
                                        <xsl:value-of select="ns10:MM007_REGION_ID_SEQ_NUMBER"/>
                                    </pfx18:MM007_REGION_ID_SEQ_NUMBER>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_REPAIR_REMARKS">
                                    <pfx18:MM007_REPAIR_REMARKS>
                                        <xsl:value-of select="ns10:MM007_REPAIR_REMARKS"/>
                                    </pfx18:MM007_REPAIR_REMARKS>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_REPORT_KEY">
                                    <pfx18:MM007_REPORT_KEY>
                                        <xsl:value-of select="ns10:MM007_REPORT_KEY"/>
                                    </pfx18:MM007_REPORT_KEY>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_RESEARCH_AREA">
                                    <pfx18:MM007_RESEARCH_AREA>
                                        <xsl:value-of select="ns10:MM007_RESEARCH_AREA"/>
                                    </pfx18:MM007_RESEARCH_AREA>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_RESEARCH_DEPARTMENT_CODE">
                                    <pfx18:MM007_RESEARCH_DEPARTMENT_CODE>
                                        <xsl:value-of select="ns10:MM007_RESEARCH_DEPARTMENT_CODE"/>
                                    </pfx18:MM007_RESEARCH_DEPARTMENT_CODE>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_RESEARCH_EMPLOYEE_CODE">
                                    <pfx18:MM007_RESEARCH_EMPLOYEE_CODE>
                                        <xsl:value-of select="ns10:MM007_RESEARCH_EMPLOYEE_CODE"/>
                                    </pfx18:MM007_RESEARCH_EMPLOYEE_CODE>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_ROUTED_TO">
                                    <pfx18:MM007_ROUTED_TO>
                                        <xsl:value-of select="ns10:MM007_ROUTED_TO"/>
                                    </pfx18:MM007_ROUTED_TO>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_SERVICE_HOURS_CODE">
                                    <pfx18:MM007_SERVICE_HOURS_CODE>
                                        <xsl:value-of select="ns10:MM007_SERVICE_HOURS_CODE"/>
                                    </pfx18:MM007_SERVICE_HOURS_CODE>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_SERVICE_ID">
                                    <pfx18:MM007_SERVICE_ID>
                                        <xsl:value-of select="ns10:MM007_SERVICE_ID"/>
                                    </pfx18:MM007_SERVICE_ID>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_SERVICE_PHONE_NUMBER">
                                    <pfx18:MM007_SERVICE_PHONE_NUMBER>
                                        <xsl:value-of select="ns10:MM007_SERVICE_PHONE_NUMBER"/>
                                    </pfx18:MM007_SERVICE_PHONE_NUMBER>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_SERVICE_RESPONSE_WINDOW">
                                    <pfx18:MM007_SERVICE_RESPONSE_WINDOW>
                                        <xsl:value-of select="ns10:MM007_SERVICE_RESPONSE_WINDOW"/>
                                    </pfx18:MM007_SERVICE_RESPONSE_WINDOW>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_SOURCE">
                                    <pfx18:MM007_SOURCE>
                                        <xsl:value-of select="ns10:MM007_SOURCE"/>
                                    </pfx18:MM007_SOURCE>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_SPECIFY_DEFAULT_ANALIST">
                                    <pfx18:MM007_SPECIFY_DEFAULT_ANALIST>
                                        <xsl:value-of select="ns10:MM007_SPECIFY_DEFAULT_ANALIST"/>
                                    </pfx18:MM007_SPECIFY_DEFAULT_ANALIST>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_STRATA_NAME">
                                    <pfx18:MM007_STRATA_NAME>
                                        <xsl:value-of select="ns10:MM007_STRATA_NAME"/>
                                    </pfx18:MM007_STRATA_NAME>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_STRATA_SEQ_NUMBER">
                                    <pfx18:MM007_STRATA_SEQ_NUMBER>
                                        <xsl:value-of select="ns10:MM007_STRATA_SEQ_NUMBER"/>
                                    </pfx18:MM007_STRATA_SEQ_NUMBER>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_SUBSCRIBED_TO_NOTIFICATIONS">
                                    <pfx18:MM007_SUBSCRIBED_TO_NOTIFICATIONS>
                                        <xsl:value-of select="ns10:MM007_SUBSCRIBED_TO_NOTIFICATIONS"/>
                                    </pfx18:MM007_SUBSCRIBED_TO_NOTIFICATIONS>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_TARGET">
                                    <pfx18:MM007_TARGET>
                                        <xsl:value-of select="ns10:MM007_TARGET"/>
                                    </pfx18:MM007_TARGET>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_TROUBLE_CAUSE_CODE">
                                    <pfx18:MM007_TROUBLE_CAUSE_CODE>
                                        <xsl:value-of select="ns10:MM007_TROUBLE_CAUSE_CODE"/>
                                    </pfx18:MM007_TROUBLE_CAUSE_CODE>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_TROUBLE_URGENCY_FLAG">
                                    <pfx18:MM007_TROUBLE_URGENCY_FLAG>
                                        <xsl:value-of select="ns10:MM007_TROUBLE_URGENCY_FLAG"/>
                                    </pfx18:MM007_TROUBLE_URGENCY_FLAG>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_TROUBLE_URGENCY_ID">
                                    <pfx18:MM007_TROUBLE_URGENCY_ID>
                                        <xsl:value-of select="ns10:MM007_TROUBLE_URGENCY_ID"/>
                                    </pfx18:MM007_TROUBLE_URGENCY_ID>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_VISIT_IND_1">
                                    <pfx18:MM007_VISIT_IND_1>
                                        <xsl:value-of select="ns10:MM007_VISIT_IND_1"/>
                                    </pfx18:MM007_VISIT_IND_1>
                                </xsl:if>
                                <xsl:if test="ns10:MM007_WORK_AREA_CODE">
                                    <pfx18:MM007_WORK_AREA_CODE>
                                        <xsl:value-of select="ns10:MM007_WORK_AREA_CODE"/>
                                    </pfx18:MM007_WORK_AREA_CODE>
                                </xsl:if>
                                <xsl:if test="ns10:NOTIFICATION_COMPLETE_DATETIME">
                                    <pfx18:NOTIFICATION_COMPLETE_DATETIME>
                                        <xsl:value-of select="ns10:NOTIFICATION_COMPLETE_DATETIME"/>
                                    </pfx18:NOTIFICATION_COMPLETE_DATETIME>
                                </xsl:if>
                                <xsl:if test="ns10:PRV_TROUBLE_STATUS_CODE">
                                    <pfx18:PRV_TROUBLE_STATUS_CODE>
                                        <xsl:value-of select="ns10:PRV_TROUBLE_STATUS_CODE"/>
                                    </pfx18:PRV_TROUBLE_STATUS_CODE>
                                </xsl:if>
                                <xsl:if test="ns10:PRV_TROUBLE_STATUS_DESCRIPTION">
                                    <pfx18:PRV_TROUBLE_STATUS_DESCRIPTION>
                                        <xsl:value-of select="ns10:PRV_TROUBLE_STATUS_DESCRIPTION"/>
                                    </pfx18:PRV_TROUBLE_STATUS_DESCRIPTION>
                                </xsl:if>
                                <xsl:if test="ns10:REPAIR_DEADLINE_DATE_TIME">
                                    <pfx18:REPAIR_DEADLINE_DATE_TIME>
                                        <xsl:value-of select="ns10:REPAIR_DEADLINE_DATE_TIME"/>
                                    </pfx18:REPAIR_DEADLINE_DATE_TIME>
                                </xsl:if>
                                <xsl:choose>
                                    <xsl:when test="exists(ns10:REPAIR_REMARKS)">
                                        <pfx18:REPAIR_REMARKS>
                                            <xsl:value-of select="ns10:REPAIR_REMARKS"/>
                                        </pfx18:REPAIR_REMARKS>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx18:REPAIR_REMARKS>
                                            <xsl:value-of select="&quot;&quot;"/>
                                        </pfx18:REPAIR_REMARKS>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:if test="ns10:REPEATED_TROUBLE_FLAG">
                                    <pfx18:REPEATED_TROUBLE_FLAG>
                                        <xsl:value-of select="ns10:REPEATED_TROUBLE_FLAG"/>
                                    </pfx18:REPEATED_TROUBLE_FLAG>
                                </xsl:if>
                                <xsl:if test="ns10:REPORT_DESCR">
                                    <pfx18:REPORT_DESCR>
                                        <xsl:value-of select="ns10:REPORT_DESCR"/>
                                    </pfx18:REPORT_DESCR>
                                </xsl:if>
                                <xsl:if test="ns10:RESEARCH_DEPARTMENT_CODE">
                                    <pfx18:RESEARCH_DEPARTMENT_CODE>
                                        <xsl:value-of select="ns10:RESEARCH_DEPARTMENT_CODE"/>
                                    </pfx18:RESEARCH_DEPARTMENT_CODE>
                                </xsl:if>
                                <xsl:if test="ns10:RESEARCH_EMPLOYEE_CODE">
                                    <pfx18:RESEARCH_EMPLOYEE_CODE>
                                        <xsl:value-of select="ns10:RESEARCH_EMPLOYEE_CODE"/>
                                    </pfx18:RESEARCH_EMPLOYEE_CODE>
                                </xsl:if>
                                <xsl:if test="ns10:SLA_CLEARING_DATE_TIME">
                                    <pfx18:SLA_CLEARING_DATE_TIME>
                                        <xsl:value-of select="ns10:SLA_CLEARING_DATE_TIME"/>
                                    </pfx18:SLA_CLEARING_DATE_TIME>
                                </xsl:if>
                                <xsl:if test="ns10:SLA_CLEARING_DATE_TIME_1">
                                    <pfx18:SLA_CLEARING_DATE_TIME_1>
                                        <xsl:value-of select="ns10:SLA_CLEARING_DATE_TIME_1"/>
                                    </pfx18:SLA_CLEARING_DATE_TIME_1>
                                </xsl:if>
                                <xsl:if test="ns10:STRATA_TROUBLE_CLOSURE_METHOD">
                                    <pfx18:STRATA_TROUBLE_CLOSURE_METHOD>
                                        <xsl:value-of select="ns10:STRATA_TROUBLE_CLOSURE_METHOD"/>
                                    </pfx18:STRATA_TROUBLE_CLOSURE_METHOD>
                                </xsl:if>
                                <xsl:if test="ns10:TROUBLE_CAUSE_CODE">
                                    <pfx18:TROUBLE_CAUSE_CODE>
                                        <xsl:value-of select="ns10:TROUBLE_CAUSE_CODE"/>
                                    </pfx18:TROUBLE_CAUSE_CODE>
                                </xsl:if>
                                <xsl:choose>
                                    <xsl:when test="exists(ns10:TROUBLE_CAUSE_DESCRIPTION)">
                                        <pfx18:TROUBLE_CAUSE_DESCRIPTION>
                                            <xsl:value-of select="ns10:TROUBLE_CAUSE_DESCRIPTION"/>
                                        </pfx18:TROUBLE_CAUSE_DESCRIPTION>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx18:TROUBLE_CAUSE_DESCRIPTION>
                                            <xsl:value-of select="&quot;&quot;"/>
                                        </pfx18:TROUBLE_CAUSE_DESCRIPTION>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:if test="ns10:TROUBLE_CLOSURE_METHOD">
                                    <pfx18:TROUBLE_CLOSURE_METHOD>
                                        <xsl:value-of select="ns10:TROUBLE_CLOSURE_METHOD"/>
                                    </pfx18:TROUBLE_CLOSURE_METHOD>
                                </xsl:if>
                                <xsl:choose>
                                    <xsl:when test="exists(ns10:TROUBLE_REPORT_ID)">
                                        <pfx18:TROUBLE_REPORT_ID>
                                            <xsl:value-of select="ns10:TROUBLE_REPORT_ID"/>
                                        </pfx18:TROUBLE_REPORT_ID>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx18:TROUBLE_REPORT_ID>
                                            <xsl:value-of select="0"/>
                                        </pfx18:TROUBLE_REPORT_ID>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <xsl:if test="ns10:TROUBLE_RESOLUTION_CODE">
                                    <pfx18:TROUBLE_RESOLUTION_CODE>
                                        <xsl:value-of select="ns10:TROUBLE_RESOLUTION_CODE"/>
                                    </pfx18:TROUBLE_RESOLUTION_CODE>
                                </xsl:if>
                                <xsl:if test="ns10:TROUBLE_STATUS_CODE">
                                    <pfx18:TROUBLE_STATUS_CODE>
                                        <xsl:value-of select="ns10:TROUBLE_STATUS_CODE"/>
                                    </pfx18:TROUBLE_STATUS_CODE>
                                </xsl:if>
                                <xsl:choose>
                                    <xsl:when test="exists(ns10:TROUBLE_STATUS_DESCRIPTION)">
                                        <pfx18:TROUBLE_STATUS_DESCRIPTION>
                                            <xsl:value-of select="ns10:TROUBLE_STATUS_DESCRIPTION"/>
                                        </pfx18:TROUBLE_STATUS_DESCRIPTION>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <pfx18:TROUBLE_STATUS_DESCRIPTION>
                                            <xsl:value-of select="&quot;&quot;"/>
                                        </pfx18:TROUBLE_STATUS_DESCRIPTION>
                                    </xsl:otherwise>
                                </xsl:choose>
                                <pfx18:CONTACT_PERSON>
                                    <xsl:choose>
                                        <xsl:when test="exists(ns10:CONTACT_PERSON/ns11:FAMILY_NAME)">
                                            <pfx18:FAMILY_NAME>
                                                <xsl:value-of select="ns10:CONTACT_PERSON/ns11:FAMILY_NAME"/>
                                            </pfx18:FAMILY_NAME>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx18:FAMILY_NAME>
                                                <xsl:value-of select="&quot;&quot;"/>
                                            </pfx18:FAMILY_NAME>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:if test="ns10:CONTACT_PERSON/ns11:PHONE_NUMBER">
                                        <pfx18:PHONE_NUMBER>
                                            <xsl:value-of select="ns10:CONTACT_PERSON/ns11:PHONE_NUMBER"/>
                                        </pfx18:PHONE_NUMBER>
                                    </xsl:if>
                                </pfx18:CONTACT_PERSON>
                                <pfx18:COMPLAINT_CATEGORY>
                                    <xsl:if test="ns10:COMPLAINT_CATEGORY/ns12:COMPLAINT_GROUP_CODE">
                                        <pfx18:COMPLAINT_GROUP_CODE>
                                            <xsl:value-of select="ns10:COMPLAINT_CATEGORY/ns12:COMPLAINT_GROUP_CODE"/>
                                        </pfx18:COMPLAINT_GROUP_CODE>
                                    </xsl:if>
                                    <xsl:choose>
                                        <xsl:when test="exists(ns10:COMPLAINT_CATEGORY/ns12:COMPLAINT_SPECIFIC_DESCRIPTION)">
                                            <pfx18:COMPLAINT_SPECIFIC_DESCRIPTION>
                                                <xsl:value-of select="ns10:COMPLAINT_CATEGORY/ns12:COMPLAINT_SPECIFIC_DESCRIPTION"/>
                                            </pfx18:COMPLAINT_SPECIFIC_DESCRIPTION>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx18:COMPLAINT_SPECIFIC_DESCRIPTION>
                                                <xsl:value-of select="&quot;&quot;"/>
                                            </pfx18:COMPLAINT_SPECIFIC_DESCRIPTION>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:choose>
                                        <xsl:when test="exists(ns10:COMPLAINT_CATEGORY/ns12:COMPLAINT_STANDARD_DESCRIPTION)">
                                            <pfx18:COMPLAINT_STANDARD_DESCRIPTION>
                                                <xsl:value-of select="ns10:COMPLAINT_CATEGORY/ns12:COMPLAINT_STANDARD_DESCRIPTION"/>
                                            </pfx18:COMPLAINT_STANDARD_DESCRIPTION>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx18:COMPLAINT_STANDARD_DESCRIPTION>
                                                <xsl:value-of select="&quot;&quot;"/>
                                            </pfx18:COMPLAINT_STANDARD_DESCRIPTION>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:choose>
                                        <xsl:when test="exists(ns10:COMPLAINT_CATEGORY/ns12:COMPLAINT_SUB_GROUP_CODE)">
                                            <pfx18:COMPLAINT_SUB_GROUP_CODE>
                                                <xsl:value-of select="ns10:COMPLAINT_CATEGORY/ns12:COMPLAINT_SUB_GROUP_CODE"/>
                                            </pfx18:COMPLAINT_SUB_GROUP_CODE>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx18:COMPLAINT_SUB_GROUP_CODE>
                                                <xsl:value-of select="&quot;&quot;"/>
                                            </pfx18:COMPLAINT_SUB_GROUP_CODE>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </pfx18:COMPLAINT_CATEGORY>
                                <pfx18:IDENTIFIED_CUSTOMER>
                                    <xsl:choose>
                                        <xsl:when test="exists(ns10:IDENTIFIED_CUSTOMER/ns16:CENTRAL_CUSTOMER_ID)">
                                            <pfx18:CENTRAL_CUSTOMER_ID>
                                                <xsl:value-of select="ns10:IDENTIFIED_CUSTOMER/ns16:CENTRAL_CUSTOMER_ID"/>
                                            </pfx18:CENTRAL_CUSTOMER_ID>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <pfx18:CENTRAL_CUSTOMER_ID>
                                                <xsl:value-of select="&quot;&quot;"/>
                                            </pfx18:CENTRAL_CUSTOMER_ID>
                                        </xsl:otherwise>
                                    </xsl:choose>
                                    <xsl:if test="ns10:IDENTIFIED_CUSTOMER/ns16:PARTY_NAME">
                                        <pfx18:PARTY_NAME>
                                            <xsl:value-of select="ns10:IDENTIFIED_CUSTOMER/ns16:PARTY_NAME"/>
                                        </pfx18:PARTY_NAME>
                                    </xsl:if>
                                    <xsl:if test="ns10:IDENTIFIED_CUSTOMER/ns16:TELECOM_DISTRICT_CODE">
                                        <pfx18:TELECOM_DISTRICT_CODE>
                                            <xsl:value-of select="ns10:IDENTIFIED_CUSTOMER/ns16:TELECOM_DISTRICT_CODE"/>
                                        </pfx18:TELECOM_DISTRICT_CODE>
                                    </xsl:if>
                                    <xsl:if test="ns10:IDENTIFIED_CUSTOMER/ns16:TELECOM_REGION_CODE">
                                        <pfx18:TELECOM_REGION_CODE>
                                            <xsl:value-of select="ns10:IDENTIFIED_CUSTOMER/ns16:TELECOM_REGION_CODE"/>
                                        </pfx18:TELECOM_REGION_CODE>
                                    </xsl:if>
                                    <xsl:if test="ns10:IDENTIFIED_CUSTOMER/ns16:STRATA_TELECOM_DISTRICT_CODE">
                                        <pfx18:STRATA_TELECOM_DISTRICT_CODE>
                                            <xsl:value-of select="ns10:IDENTIFIED_CUSTOMER/ns16:STRATA_TELECOM_DISTRICT_CODE"/>
                                        </pfx18:STRATA_TELECOM_DISTRICT_CODE>
                                    </xsl:if>
                                    <pfx18:PARTY>
                                        <xsl:if test="ns10:IDENTIFIED_CUSTOMER/ns16:PARTY/ns19:LEGAL_FORM_CODE">
                                            <pfx18:LEGAL_FORM_CODE>
                                                <xsl:value-of select="ns10:IDENTIFIED_CUSTOMER/ns16:PARTY/ns19:LEGAL_FORM_CODE"/>
                                            </pfx18:LEGAL_FORM_CODE>
                                        </xsl:if>
                                    </pfx18:PARTY>
                                    <pfx18:PROPERTY_ADDRESS>
                                        <xsl:if test="ns10:IDENTIFIED_CUSTOMER/ns16:PROPERTY_ADDRESS/ns20:CITY_CODE">
                                            <pfx18:CITY_CODE>
                                                <xsl:value-of select="ns10:IDENTIFIED_CUSTOMER/ns16:PROPERTY_ADDRESS/ns20:CITY_CODE"/>
                                            </pfx18:CITY_CODE>
                                        </xsl:if>
                                        <xsl:if test="ns10:IDENTIFIED_CUSTOMER/ns16:PROPERTY_ADDRESS/ns20:CITY_NAME">
                                            <pfx18:CITY_NAME>
                                                <xsl:value-of select="ns10:IDENTIFIED_CUSTOMER/ns16:PROPERTY_ADDRESS/ns20:CITY_NAME"/>
                                            </pfx18:CITY_NAME>
                                        </xsl:if>
                                        <xsl:if test="ns10:IDENTIFIED_CUSTOMER/ns16:PROPERTY_ADDRESS/ns20:DUTCH_POSTCODE_LETTERS">
                                            <pfx18:DUTCH_POSTCODE_LETTERS>
                                                <xsl:value-of select="ns10:IDENTIFIED_CUSTOMER/ns16:PROPERTY_ADDRESS/ns20:DUTCH_POSTCODE_LETTERS"/>
                                            </pfx18:DUTCH_POSTCODE_LETTERS>
                                        </xsl:if>
                                        <xsl:if test="ns10:IDENTIFIED_CUSTOMER/ns16:PROPERTY_ADDRESS/ns20:DUTCH_POSTCODE_NUMBERS">
                                            <pfx18:DUTCH_POSTCODE_NUMBERS>
                                                <xsl:value-of select="ns10:IDENTIFIED_CUSTOMER/ns16:PROPERTY_ADDRESS/ns20:DUTCH_POSTCODE_NUMBERS"/>
                                            </pfx18:DUTCH_POSTCODE_NUMBERS>
                                        </xsl:if>
                                        <xsl:if test="ns10:IDENTIFIED_CUSTOMER/ns16:PROPERTY_ADDRESS/ns20:HOUSE_NUMBER">
                                            <pfx18:HOUSE_NUMBER>
                                                <xsl:value-of select="ns10:IDENTIFIED_CUSTOMER/ns16:PROPERTY_ADDRESS/ns20:HOUSE_NUMBER"/>
                                            </pfx18:HOUSE_NUMBER>
                                        </xsl:if>
                                        <xsl:if test="ns10:IDENTIFIED_CUSTOMER/ns16:PROPERTY_ADDRESS/ns20:HOUSE_NUMBER_EXTENSION">
                                            <pfx18:HOUSE_NUMBER_EXTENSION>
                                                <xsl:value-of select="ns10:IDENTIFIED_CUSTOMER/ns16:PROPERTY_ADDRESS/ns20:HOUSE_NUMBER_EXTENSION"/>
                                            </pfx18:HOUSE_NUMBER_EXTENSION>
                                        </xsl:if>
                                        <xsl:if test="ns10:IDENTIFIED_CUSTOMER/ns16:PROPERTY_ADDRESS/ns20:STREET_NAME">
                                            <pfx18:STREET_NAME>
                                                <xsl:value-of select="ns10:IDENTIFIED_CUSTOMER/ns16:PROPERTY_ADDRESS/ns20:STREET_NAME"/>
                                            </pfx18:STREET_NAME>
                                        </xsl:if>
                                    </pfx18:PROPERTY_ADDRESS>
                                </pfx18:IDENTIFIED_CUSTOMER>
                                <pfx18:SERVICE_VISIT>
                                    <xsl:if test="ns10:SERVICE_VISIT/ns17:START_DATE_TIME">
                                        <pfx18:START_DATE_TIME>
                                            <xsl:value-of select="ns10:SERVICE_VISIT/ns17:START_DATE_TIME"/>
                                        </pfx18:START_DATE_TIME>
                                    </xsl:if>
                                    <xsl:if test="ns10:SERVICE_VISIT/ns17:VISIT_WINDOW_START_TIME">
                                        <pfx18:VISIT_WINDOW_START_TIME>
                                            <xsl:value-of select="ns10:SERVICE_VISIT/ns17:VISIT_WINDOW_START_TIME"/>
                                        </pfx18:VISIT_WINDOW_START_TIME>
                                    </xsl:if>
                                    <xsl:if test="ns10:SERVICE_VISIT/ns17:VISIT_WINDOW_END_TIME">
                                        <pfx18:VISIT_WINDOW_END_TIME>
                                            <xsl:value-of select="ns10:SERVICE_VISIT/ns17:VISIT_WINDOW_END_TIME"/>
                                        </pfx18:VISIT_WINDOW_END_TIME>
                                    </xsl:if>
                                    <xsl:if test="ns10:SERVICE_VISIT/ns17:MM007_APPOINTMENT_OUTSIDE_CUSTOMER_NORM">
                                        <pfx18:MM007_APPOINTMENT_OUTSIDE_CUSTOMER_NORM>
                                            <xsl:value-of select="ns10:SERVICE_VISIT/ns17:MM007_APPOINTMENT_OUTSIDE_CUSTOMER_NORM"/>
                                        </pfx18:MM007_APPOINTMENT_OUTSIDE_CUSTOMER_NORM>
                                    </xsl:if>
                                    <xsl:if test="ns10:SERVICE_VISIT/ns17:MM007_APPOINTMENT_OUTSIDE_NORM_CALENDAR">
                                        <pfx18:MM007_APPOINTMENT_OUTSIDE_NORM_CALENDAR>
                                            <xsl:value-of select="ns10:SERVICE_VISIT/ns17:MM007_APPOINTMENT_OUTSIDE_NORM_CALENDAR"/>
                                        </pfx18:MM007_APPOINTMENT_OUTSIDE_NORM_CALENDAR>
                                    </xsl:if>
                                    <xsl:if test="ns10:SERVICE_VISIT/ns17:MM007_APPOINTMENT_PART_OF_DAY">
                                        <pfx18:MM007_APPOINTMENT_PART_OF_DAY>
                                            <xsl:value-of select="ns10:SERVICE_VISIT/ns17:MM007_APPOINTMENT_PART_OF_DAY"/>
                                        </pfx18:MM007_APPOINTMENT_PART_OF_DAY>
                                    </xsl:if>
                                    <xsl:if test="ns10:SERVICE_VISIT/ns17:MM007_RESEARCH_DEPARTMENT_CODE">
                                        <pfx18:MM007_RESEARCH_DEPARTMENT_CODE>
                                            <xsl:value-of select="ns10:SERVICE_VISIT/ns17:MM007_RESEARCH_DEPARTMENT_CODE"/>
                                        </pfx18:MM007_RESEARCH_DEPARTMENT_CODE>
                                    </xsl:if>
                                    <xsl:if test="ns10:SERVICE_VISIT/ns17:MM007_RESEARCH_EMPLOYEE_CODE">
                                        <pfx18:MM007_RESEARCH_EMPLOYEE_CODE>
                                            <xsl:value-of select="ns10:SERVICE_VISIT/ns17:MM007_RESEARCH_EMPLOYEE_CODE"/>
                                        </pfx18:MM007_RESEARCH_EMPLOYEE_CODE>
                                    </xsl:if>
                                    <xsl:if test="ns10:SERVICE_VISIT/ns17:RESEARCH_AGENCY_CODE">
                                        <pfx18:RESEARCH_AGENCY_CODE>
                                            <xsl:value-of select="ns10:SERVICE_VISIT/ns17:RESEARCH_AGENCY_CODE"/>
                                        </pfx18:RESEARCH_AGENCY_CODE>
                                    </xsl:if>
                                    <xsl:if test="ns10:SERVICE_VISIT/ns17:APPOINTMENT_WITHIN_NORM">
                                        <pfx18:APPOINTMENT_WITHIN_NORM>
                                            <xsl:value-of select="ns10:SERVICE_VISIT/ns17:APPOINTMENT_WITHIN_NORM"/>
                                        </pfx18:APPOINTMENT_WITHIN_NORM>
                                    </xsl:if>
                                </pfx18:SERVICE_VISIT>
                                <pfx18:WORK_ORDER>
                                    <xsl:if test="ns10:WORK_ORDER/ns18:WORK_ORDER_ACTUAL_END_DATETIME">
                                        <pfx18:WORK_ORDER_ACTUAL_END_DATETIME>
                                            <xsl:value-of select="ns10:WORK_ORDER/ns18:WORK_ORDER_ACTUAL_END_DATETIME"/>
                                        </pfx18:WORK_ORDER_ACTUAL_END_DATETIME>
                                    </xsl:if>
                                    <xsl:if test="ns10:WORK_ORDER/ns18:WORK_ORDER_ACTUAL_START_DATETIME">
                                        <pfx18:WORK_ORDER_ACTUAL_START_DATETIME>
                                            <xsl:value-of select="ns10:WORK_ORDER/ns18:WORK_ORDER_ACTUAL_START_DATETIME"/>
                                        </pfx18:WORK_ORDER_ACTUAL_START_DATETIME>
                                    </xsl:if>
                                    <xsl:if test="ns10:WORK_ORDER/ns18:WORK_ORDER_COMPLETION_DATETIME">
                                        <pfx18:WORK_ORDER_COMPLETION_DATETIME>
                                            <xsl:value-of select="ns10:WORK_ORDER/ns18:WORK_ORDER_COMPLETION_DATETIME"/>
                                        </pfx18:WORK_ORDER_COMPLETION_DATETIME>
                                    </xsl:if>
                                    <xsl:if test="ns10:WORK_ORDER/ns18:WORK_ORDER_ISSUE_DATETIME">
                                        <pfx18:WORK_ORDER_ISSUE_DATETIME>
                                            <xsl:value-of select="ns10:WORK_ORDER/ns18:WORK_ORDER_ISSUE_DATETIME"/>
                                        </pfx18:WORK_ORDER_ISSUE_DATETIME>
                                    </xsl:if>
                                    <xsl:if test="ns10:WORK_ORDER/ns18:PRV_WORK_ORDER_ISSUE_DATETIME">
                                        <pfx18:PRV_WORK_ORDER_ISSUE_DATETIME>
                                            <xsl:value-of select="ns10:WORK_ORDER/ns18:PRV_WORK_ORDER_ISSUE_DATETIME"/>
                                        </pfx18:PRV_WORK_ORDER_ISSUE_DATETIME>
                                    </xsl:if>
                                </pfx18:WORK_ORDER>
                            </pfx18:Ticket>
                        </xsl:for-each>
                    </pfx18:TicketList>
                </pfx18:GetTicketsResponse>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="BuildCMH">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>380</pd:x>
            <pd:y>170</pd:y>
            <config>
                <processName>/IKKAdapter/Sub Processes/Sub_FulFillCMH.process</processName>
            </config>
            <pd:inputBindings>
                <InputCMH>
                    <ID>
                        <xsl:value-of select="&quot;021&quot;"/>
                    </ID>
                    <NAME>
                        <xsl:value-of select="&quot;GetTickets&quot;"/>
                    </NAME>
                    <VERSION>
                        <xsl:value-of select="&quot;1.0&quot;"/>
                    </VERSION>
                    <OBJECT>
                        <xsl:value-of select="&quot;CO_GetTicketst&quot;"/>
                    </OBJECT>
                    <PARADIGM>
                        <xsl:value-of select="&quot;REQUEST&quot;"/>
                    </PARADIGM>
                    <FID>
                        <xsl:value-of select="concat($SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:streetName,&quot;-&quot;,$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:cityName,&quot;-&quot;,$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:customerRefNo)"/>
                    </FID>
                    <MID>
                        <xsl:value-of select="&quot;021.10&quot;"/>
                    </MID>
                    <FROM>
                        <xsl:attribute name="COMPONENT_ID">
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IKKAdapter/ComponentID"/>
                        </xsl:attribute>
                        <xsl:attribute name="COMPONENT_VERSION">
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IKKAdapter/ComponentVersion"/>
                        </xsl:attribute>
                    </FROM>
                    <TO>
                        <xsl:attribute name="DESTINATION">
                            <xsl:value-of select="concat($_globalVariables/ns4:GlobalVariables/Env, &quot;.&quot;, $_globalVariables/ns4:GlobalVariables/IKKAdapter/EnginAdapter/MsgSubject,&quot;.GetTickets.1&quot;)"/>
                        </xsl:attribute>
                    </TO>
                    <TRACKING>
                        <ITEM>
                            <xsl:attribute name="APPINFO">
                                <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IKKAdapter/ComponentID"/>
                            </xsl:attribute>
                            <xsl:attribute name="EVENT">
                                <xsl:value-of select="&quot;GetTickets&quot;"/>
                            </xsl:attribute>
                        </ITEM>
                    </TRACKING>
                    <ATTRIBUTE>
                        <xsl:attribute name="NAME">
                            <xsl:value-of select="&quot;originatingApplicationID&quot;"/>
                        </xsl:attribute>
                        <xsl:attribute name="VALUE">
                            <xsl:value-of select="&quot;IKK&quot;"/>
                        </xsl:attribute>
                    </ATTRIBUTE>
                    <ATTRIBUTE>
                        <xsl:attribute name="NAME">
                            <xsl:value-of select="&quot;maxNumberReturned&quot;"/>
                        </xsl:attribute>
                        <xsl:attribute name="VALUE">
                            <xsl:value-of select="&quot;100&quot;"/>
                        </xsl:attribute>
                    </ATTRIBUTE>
                </InputCMH>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogSoapEvent">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>528</pd:x>
            <pd:y>80</pd:y>
            <config>
                <processName>/IKKAdapter/Sub Processes/Sub_LogMessage.process</processName>
            </config>
            <pd:inputBindings>
                <param>
                    <AnyXMLMessage>
                        <xsl:copy-of select="$MapSOAPEvent/SOAPEventLog"/>
                    </AnyXMLMessage>
                    <StringMessage>
                        <xsl:value-of select="&quot;SoapEventLog&quot;"/>
                    </StringMessage>
                    <LogLevel>
                        <xsl:value-of select="&quot;INFO&quot;"/>
                    </LogLevel>
                </param>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogBuildCMH">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>425</pd:x>
            <pd:y>83</pd:y>
            <config>
                <processName>/IKKAdapter/Sub Processes/Sub_LogMessage.process</processName>
            </config>
            <pd:inputBindings>
                <param>
                    <AnyXMLMessage>
                        <xsl:copy-of select="$BuildCMH/CMH"/>
                    </AnyXMLMessage>
                    <StringMessage>
                        <xsl:value-of select="&quot;BuildCMHLog&quot;"/>
                    </StringMessage>
                    <LogLevel>
                        <xsl:value-of select="&quot;TRACE&quot;"/>
                    </LogLevel>
                </param>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogSOAPReplyOK">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>954</pd:x>
            <pd:y>81</pd:y>
            <config>
                <processName>/IKKAdapter/Sub Processes/Sub_LogMessage.process</processName>
            </config>
            <pd:inputBindings>
                <param>
                    <StringMessage>
                        <xsl:value-of select="&quot;SOAPReplyOKLog&quot;"/>
                    </StringMessage>
                    <LogLevel>
                        <xsl:value-of select="&quot;INFO&quot;"/>
                    </LogLevel>
                </param>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="MapSOAPEvent">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>476</pd:x>
            <pd:y>168</pd:y>
            <config>
                <element>
                    <xsd:element name="SOAPEventLog">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="MsgID" type="xsd:string"/>
                                <xsd:element ref="pfx24:AnyXMLMessage"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </element>
            </config>
            <pd:inputBindings>
                <SOAPEventLog>
                    <MsgID>
                        <xsl:value-of select="$BuildCMH/CMH/TRACKING/MESSAGE_ID"/>
                    </MsgID>
                    <AnyXMLMessage>
                        <xsl:copy-of select="$SOAPEvent/inputMessage"/>
                    </AnyXMLMessage>
                </SOAPEventLog>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="LogSoapFault">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>752</pd:x>
        <pd:y>334</pd:y>
        <config>
            <processName>/IKKAdapter/Sub Processes/Sub_LogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <param>
                <StringMessage>
                    <xsl:value-of select="&quot;SendSOAPFaultOK&quot;"/>
                </StringMessage>
                <LogLevel>
                    <xsl:value-of select="&quot;ERROR&quot;"/>
                </LogLevel>
            </param>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="LogSoapFaultException">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>661</pd:x>
        <pd:y>440</pd:y>
        <config>
            <processName>/IKKAdapter/Sub Processes/Sub_LogMessage.process</processName>
        </config>
        <pd:inputBindings>
            <param>
                <AnyXMLMessage>
                    <xsl:copy-of select="$_error/ns:ErrorReport"/>
                </AnyXMLMessage>
                <StringMessage>
                    <xsl:value-of select="&quot;SendSOAPFault&quot;"/>
                </StringMessage>
                <LogLevel>
                    <xsl:value-of select="&quot;ERROR&quot;"/>
                </LogLevel>
            </param>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SOAPSendReplyFault">
        <pd:type>com.tibco.plugin.soap.SOAPSendReplyActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReplyUI</pd:resourceType>
        <pd:x>616</pd:x>
        <pd:y>333</pd:y>
        <config>
            <eventSource>SOAPEvent</eventSource>
        </config>
        <pd:inputBindings>
            <outputMessage>
                <pfx18:GetTicketsResponse>
                    <pfx18:herkomstCode>
                        <xsl:value-of select="if (string-length($_error/ns:ErrorReport/ProcessStack) = 0)&#xA;then &quot;1&quot;&#xA;else if (not(contains(lower-case(tib:right($_error/ns:ErrorReport/ProcessStack, 9)), &quot;soapevent&quot;)))&#xA;then &quot;2&quot;&#xA;else &quot;3&quot;"/>
                    </pfx18:herkomstCode>
                    <xsl:if test="$_error/ns:ErrorReport/ProcessStack">
                        <pfx18:transactieStatus>
                            <xsl:value-of select="$_error/ns:ErrorReport/ProcessStack"/>
                        </pfx18:transactieStatus>
                    </xsl:if>
                    <xsl:if test="$_error/ns:ErrorReport/Msg">
                        <pfx18:errorMessage>
                            <xsl:value-of select="$_error/ns:ErrorReport/Msg"/>
                        </pfx18:errorMessage>
                    </xsl:if>
                    <pfx18:GUID>
                        <xsl:value-of select="&quot;&quot;"/>
                    </pfx18:GUID>
                    <pfx18:TicketList>
                        <xsl:copy-of select="$MapEAIReply/pfx18:GetTicketsResponse/pfx18:TicketList/pfx18:Ticket"/>
                    </pfx18:TicketList>
                </pfx18:GetTicketsResponse>
            </outputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="InitCMH">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>143</pd:x>
        <pd:y>192</pd:y>
        <config>
            <element>
                <xsd:element name="CMH" type="pfx30:CMH"/>
            </element>
        </config>
        <pd:inputBindings>
            <CMH>
                <ID>
                    <xsl:value-of select="&quot;021&quot;"/>
                </ID>
                <NAME>
                    <xsl:value-of select="&quot;GetTickets&quot;"/>
                </NAME>
                <VERSION>
                    <xsl:value-of select="&quot;1.0&quot;"/>
                </VERSION>
                <OBJECT>
                    <xsl:value-of select="&quot;CO_GetTicketst&quot;"/>
                </OBJECT>
                <PARADIGM>
                    <xsl:value-of select="&quot;REQUEST&quot;"/>
                </PARADIGM>
                <FID>
                    <xsl:value-of select="concat($SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:streetName,&quot;-&quot;,$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:cityName,&quot;-&quot;,$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:customerRefNo)"/>
                </FID>
                <MID>
                    <xsl:value-of select="&quot;021.10&quot;"/>
                </MID>
                <FROM>
                    <xsl:attribute name="COMPONENT_ID">
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IKKAdapter/ComponentID"/>
                    </xsl:attribute>
                    <xsl:attribute name="COMPONENT_VERSION">
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IKKAdapter/ComponentVersion"/>
                    </xsl:attribute>
                </FROM>
                <TO>
                    <xsl:attribute name="DESTINATION">
                        <xsl:value-of select="concat($_globalVariables/ns4:GlobalVariables/Env, &quot;.&quot;, $_globalVariables/ns4:GlobalVariables/IKKAdapter/EnginAdapter/MsgSubject,&quot;.GetTickets.1&quot;)"/>
                    </xsl:attribute>
                </TO>
                <TRACKING>
                    <ITEM>
                        <xsl:attribute name="APPINFO">
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IKKAdapter/ComponentID"/>
                        </xsl:attribute>
                        <xsl:attribute name="EVENT">
                            <xsl:value-of select="&quot;GetTickets&quot;"/>
                        </xsl:attribute>
                    </ITEM>
                </TRACKING>
                <ATTRIBUTE>
                    <xsl:attribute name="NAME">
                        <xsl:value-of select="&quot;originatingApplicationID&quot;"/>
                    </xsl:attribute>
                    <xsl:attribute name="VALUE">
                        <xsl:value-of select="&quot;IKK&quot;"/>
                    </xsl:attribute>
                </ATTRIBUTE>
                <ATTRIBUTE>
                    <xsl:attribute name="NAME">
                        <xsl:value-of select="&quot;maxNumberReturned&quot;"/>
                    </xsl:attribute>
                    <xsl:attribute name="VALUE">
                        <xsl:value-of select="&quot;100&quot;"/>
                    </xsl:attribute>
                </ATTRIBUTE>
            </CMH>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Postpone Exception Handling">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>126</pd:x>
        <pd:y>43</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>248</pd:x>
        <pd:y>177</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:group name="TryCatch MM007Light">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>189</pd:x>
        <pd:y>538</pd:y>
        <pd:width>963</pd:width>
        <pd:height>315</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>BuildCMH-MM007Light</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogSOAPReplyOK-MM007Light</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>BuildCMH-MM007Light</pd:from>
            <pd:to>LogBuildCMH-MM007Light</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogBuildCMH-MM007Light</pd:from>
            <pd:to>MapSOAPEvent-MM007Light</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MapSOAPEvent-MM007Light</pd:from>
            <pd:to>LogSoapEvent-MM007Light</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogSoapEvent-MM007Light</pd:from>
            <pd:to>MapEAIRequest-MM007Light</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MapEAIRequest-MM007Light</pd:from>
            <pd:to>LogRvRequest-MM007Light</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogRvRequest-MM007Light</pd:from>
            <pd:to>EAI-Astrid</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>EAI-Astrid</pd:from>
            <pd:to>LogRvResponse-MM007Light</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogRvResponse-MM007Light</pd:from>
            <pd:to>MapEAIReply-MM007Light</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MapEAIReply-MM007Light</pd:from>
            <pd:to>LogSoapReplyMsg-MM007Light</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>LogSoapReplyMsg-MM007Light</pd:from>
            <pd:to>SOAPReply-MM007Light</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SOAPReply-MM007Light</pd:from>
            <pd:to>LogSOAPReplyOK-MM007Light</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="BuildCMH-MM007Light">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>291</pd:x>
            <pd:y>728</pd:y>
            <config>
                <processName>/IKKAdapter/Sub Processes/Sub_FulFillCMH.process</processName>
            </config>
            <pd:inputBindings>
                <InputCMH>
                    <ID>
                        <xsl:value-of select="&quot;473&quot;"/>
                    </ID>
                    <NAME>
                        <xsl:value-of select="&quot;GetTickets&quot;"/>
                    </NAME>
                    <VERSION>
                        <xsl:value-of select="&quot;2.0&quot;"/>
                    </VERSION>
                    <OBJECT>
                        <xsl:value-of select="&quot;CO_GetTicketst&quot;"/>
                    </OBJECT>
                    <PARADIGM>
                        <xsl:value-of select="&quot;REQUEST&quot;"/>
                    </PARADIGM>
                    <FID>
                        <xsl:value-of select="concat($SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:streetName,&quot;-&quot;,$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:cityName,&quot;-&quot;,$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:customerRefNo)"/>
                    </FID>
                    <MID>
                        <xsl:value-of select="&quot;473.10&quot;"/>
                    </MID>
                    <FROM>
                        <xsl:attribute name="COMPONENT_ID">
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IKKAdapter/ComponentID"/>
                        </xsl:attribute>
                        <xsl:attribute name="COMPONENT_VERSION">
                            <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IKKAdapter/ComponentVersion"/>
                        </xsl:attribute>
                    </FROM>
                    <TO>
                        <xsl:attribute name="DESTINATION">
                            <xsl:value-of select="concat($_globalVariables/ns4:GlobalVariables/Env, &quot;.&quot;&#xA;, $_globalVariables/ns4:GlobalVariables/IKKAdapter/AstridAdapter/MsgSubject,&quot;.GetTickets.1&quot;)"/>
                        </xsl:attribute>
                    </TO>
                    <TRACKING>
                        <ITEM>
                            <xsl:attribute name="APPINFO">
                                <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IKKAdapter/ComponentID"/>
                            </xsl:attribute>
                            <xsl:attribute name="EVENT">
                                <xsl:value-of select="&quot;GetTickets&quot;"/>
                            </xsl:attribute>
                        </ITEM>
                    </TRACKING>
                    <ATTRIBUTE>
                        <xsl:attribute name="NAME">
                            <xsl:value-of select="&quot;originatingApplicationID&quot;"/>
                        </xsl:attribute>
                        <xsl:attribute name="VALUE">
                            <xsl:value-of select="&quot;IKK&quot;"/>
                        </xsl:attribute>
                    </ATTRIBUTE>
                    <ATTRIBUTE>
                        <xsl:attribute name="NAME">
                            <xsl:value-of select="&quot;maxNumberReturned&quot;"/>
                        </xsl:attribute>
                        <xsl:attribute name="VALUE">
                            <xsl:value-of select="&quot;100&quot;"/>
                        </xsl:attribute>
                    </ATTRIBUTE>
                </InputCMH>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogBuildCMH-MM007Light">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>297</pd:x>
            <pd:y>602</pd:y>
            <config>
                <processName>/IKKAdapter/Sub Processes/Sub_LogMessage.process</processName>
            </config>
            <pd:inputBindings>
                <param>
                    <AnyXMLMessage>
                        <xsl:copy-of select="$BuildCMH-MM007Light/CMH"/>
                    </AnyXMLMessage>
                    <StringMessage>
                        <xsl:value-of select="&quot;BuildCMHLog&quot;"/>
                    </StringMessage>
                    <LogLevel>
                        <xsl:value-of select="&quot;TRACE&quot;"/>
                    </LogLevel>
                </param>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="MapSOAPEvent-MM007Light">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>412</pd:x>
            <pd:y>715</pd:y>
            <config>
                <element>
                    <xsd:element name="SOAPEventLog">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="MsgID" type="xsd:string"/>
                                <xsd:element ref="pfx24:AnyXMLMessage"/>
                            </xsd:sequence>
                        </xsd:complexType>
                    </xsd:element>
                </element>
            </config>
            <pd:inputBindings>
                <SOAPEventLog>
                    <MsgID>
                        <xsl:value-of select="$BuildCMH-MM007Light/CMH/TRACKING/MESSAGE_ID"/>
                    </MsgID>
                    <AnyXMLMessage>
                        <xsl:copy-of select="$SOAPEvent/inputMessage"/>
                    </AnyXMLMessage>
                </SOAPEventLog>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogSoapEvent-MM007Light">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>493</pd:x>
            <pd:y>623</pd:y>
            <config>
                <processName>/IKKAdapter/Sub Processes/Sub_LogMessage.process</processName>
            </config>
            <pd:inputBindings>
                <param>
                    <AnyXMLMessage>
                        <xsl:copy-of select="$MapSOAPEvent-MM007Light/SOAPEventLog"/>
                    </AnyXMLMessage>
                    <StringMessage>
                        <xsl:value-of select="&quot;SoapEventLog MM007Light&quot;"/>
                    </StringMessage>
                    <LogLevel>
                        <xsl:value-of select="&quot;INFO&quot;"/>
                    </LogLevel>
                </param>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="MapEAIRequest-MM007Light">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>552</pd:x>
            <pd:y>715</pd:y>
            <config>
                <element ref="pfx33:GetTickets"/>
            </config>
            <pd:inputBindings>
                <pfx33:GetTickets>
                    <xsl:for-each select="$BuildCMH-MM007Light/CMH">
                        <ns1:CMH>
                            <ns1:ID>
                                <xsl:value-of select="ID"/>
                            </ns1:ID>
                            <ns1:NAME>
                                <xsl:value-of select="NAME"/>
                            </ns1:NAME>
                            <xsl:if test="FID">
                                <ns1:FID>
                                    <xsl:value-of select="FID"/>
                                </ns1:FID>
                            </xsl:if>
                            <xsl:if test="MID">
                                <ns1:MID>
                                    <xsl:value-of select="MID"/>
                                </ns1:MID>
                            </xsl:if>
                            <ns1:PARADIGM>
                                <xsl:value-of select="PARADIGM"/>
                            </ns1:PARADIGM>
                            <ns1:OBJECT>
                                <xsl:value-of select="OBJECT"/>
                            </ns1:OBJECT>
                            <ns1:VERSION>
                                <xsl:value-of select="VERSION"/>
                            </ns1:VERSION>
                            <xsl:for-each select="FROM">
                                <ns1:FROM>
                                    <xsl:attribute name="ns1:COMPONENT_ID">
                                        <xsl:value-of select="@COMPONENT_ID"/>
                                    </xsl:attribute>
                                    <xsl:if test="@COMPONENT_VERSION">
                                        <xsl:attribute name="ns1:COMPONENT_VERSION">
                                            <xsl:value-of select="@COMPONENT_VERSION"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="@END_USER_INFO">
                                        <xsl:attribute name="ns1:END_USER_INFO">
                                            <xsl:value-of select="@END_USER_INFO"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="@SOURCE_ADDRESS">
                                        <xsl:attribute name="ns1:SOURCE_ADDRESS">
                                            <xsl:value-of select="@SOURCE_ADDRESS"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                </ns1:FROM>
                            </xsl:for-each>
                            <xsl:for-each select="TO">
                                <ns1:TO>
                                    <xsl:attribute name="ns1:DESTINATION">
                                        <xsl:value-of select="@DESTINATION"/>
                                    </xsl:attribute>
                                </ns1:TO>
                            </xsl:for-each>
                            <xsl:for-each select="TRACKING">
                                <ns1:TRACKING>
                                    <ns1:MESSAGE_ID>
                                        <xsl:value-of select="MESSAGE_ID"/>
                                    </ns1:MESSAGE_ID>
                                    <xsl:if test="EXTERNAL_REF">
                                        <ns1:EXTERNAL_REF>
                                            <xsl:value-of select="EXTERNAL_REF"/>
                                        </ns1:EXTERNAL_REF>
                                    </xsl:if>
                                    <xsl:for-each select="ITEM">
                                        <ns1:ITEM>
                                            <xsl:attribute name="ns1:APPINFO">
                                                <xsl:value-of select="@APPINFO"/>
                                            </xsl:attribute>
                                            <xsl:attribute name="ns1:EVENT">
                                                <xsl:value-of select="@EVENT"/>
                                            </xsl:attribute>
                                            <xsl:attribute name="ns1:TIMESTAMP">
                                                <xsl:value-of select="@TIMESTAMP"/>
                                            </xsl:attribute>
                                        </ns1:ITEM>
                                    </xsl:for-each>
                                    <xsl:for-each select="SEQUENCE_NO">
                                        <ns1:SEQUENCE_NO>
                                            <xsl:value-of select="."/>
                                        </ns1:SEQUENCE_NO>
                                    </xsl:for-each>
                                </ns1:TRACKING>
                            </xsl:for-each>
                            <xsl:for-each select="ATTRIBUTE">
                                <ns1:ATTRIBUTE>
                                    <xsl:attribute name="ns1:NAME">
                                        <xsl:value-of select="@NAME"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="ns1:VALUE">
                                        <xsl:value-of select="@VALUE"/>
                                    </xsl:attribute>
                                </ns1:ATTRIBUTE>
                            </xsl:for-each>
                        </ns1:CMH>
                    </xsl:for-each>
                    <pfx33:ENGIN>
                        <pfx33:HDR-SW-0101>
                            <ns33:AFZENDER_APPLICATIE xmlns:ns33="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/HDR-SW-0101.xsd">
                                <xsl:value-of select="&quot;IKK&quot;"/>
                            </ns33:AFZENDER_APPLICATIE>
                        </pfx33:HDR-SW-0101>
                        <pfx33:QRYLIM_S-0101>
                            <ns33:MAXIMUM_AANTAL xmlns:ns33="http://xmlns.kpn.com/fixed/ASTRIDAdapter/common/QRYLIM_S-0101.xsd">
                                <xsl:value-of select="100"/>
                            </ns33:MAXIMUM_AANTAL>
                        </pfx33:QRYLIM_S-0101>
                        <pfx33:KLASEL_S-0100>
                            <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:activeTickets">
                                <ns31:ACTUELE_KLACHTEN>
                                    <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:activeTickets"/>
                                </ns31:ACTUELE_KLACHTEN>
                            </xsl:if>
                            <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:historicalTickets">
                                <ns31:HISTORISCHE_KLACHTEN>
                                    <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:historicalTickets"/>
                                </ns31:HISTORISCHE_KLACHTEN>
                            </xsl:if>
                            <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:customerRefNo">
                                <ns31:KLANTORDER_NUMMER>
                                    <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:customerRefNo"/>
                                </ns31:KLANTORDER_NUMMER>
                            </xsl:if>
                            <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:centralCustomerId">
                                <ns31:CENTRALE_KLANT_REGISTRATIE_NR>
                                    <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:centralCustomerId"/>
                                </ns31:CENTRALE_KLANT_REGISTRATIE_NR>
                            </xsl:if>
                            <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:streetName">
                                <ns31:STRAATNAAM>
                                    <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:streetName"/>
                                </ns31:STRAATNAAM>
                            </xsl:if>
                            <xsl:if test="exists($SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:fromDate)&#xA;and not( empty($SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:fromDate) )&#xA;and not( $SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:fromDate=&quot;&quot; )">
                                <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:fromDate">
                                    <ns31:DATUM_VAN>
                                        <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:fromDate"/>
                                    </ns31:DATUM_VAN>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="exists($SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:untilDate)&#xA;and not( empty($SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:untilDate) )&#xA;and not( $SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:untilDate=&quot;&quot; )">
                                <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:untilDate">
                                    <ns31:DATUM_TOT_EN_MET>
                                        <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:untilDate"/>
                                    </ns31:DATUM_TOT_EN_MET>
                                </xsl:if>
                            </xsl:if>
                            <xsl:if test="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:cityName">
                                <ns31:PLAATSNAAM>
                                    <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:cityName"/>
                                </ns31:PLAATSNAAM>
                            </xsl:if>
                        </pfx33:KLASEL_S-0100>
                    </pfx33:ENGIN>
                </pfx33:GetTickets>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogRvRequest-MM007Light">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>661</pd:x>
            <pd:y>627</pd:y>
            <config>
                <processName>/IKKAdapter/Sub Processes/Sub_LogMessage.process</processName>
            </config>
            <pd:inputBindings>
                <param>
                    <AnyXMLMessage>
                        <xsl:copy-of select="$MapEAIRequest-MM007Light/pfx33:GetTickets"/>
                    </AnyXMLMessage>
                    <StringMessage>
                        <xsl:value-of select="&quot;RvRequestLog MM007Light&quot;"/>
                    </StringMessage>
                    <LogLevel>
                        <xsl:value-of select="&quot;INFO&quot;"/>
                    </LogLevel>
                </param>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="EAI-Astrid">
            <pd:type>com.tibco.plugin.tibrv.RVRequestActivity</pd:type>
            <pd:resourceType>ae.rvpalette.RVRequestActivity</pd:resourceType>
            <pd:x>671</pd:x>
            <pd:y>715</pd:y>
            <config>
                <wantsValidationForOutput>true</wantsValidationForOutput>
                <wantsFiltrationForOutput>false</wantsFiltrationForOutput>
                <wantsXMLCompliantFieldNames>false</wantsXMLCompliantFieldNames>
                <wantsXMLCompliantFieldNamesOutput>false</wantsXMLCompliantFieldNamesOutput>
                <subject/>
                <operationTimeout>%%IKKAdapter/CKRAdapter/Timeout%%</operationTimeout>
                <xmlEncoding>true</xmlEncoding>
                <sharedChannel>/IKKAdapter/Shared Resources/EAI Rendezvous Transport.rvtransport</sharedChannel>
                <inputXsdString ref="pfx33:GetTickets"/>
                <outputXsdString ref="pfx34:GetTickets"/>
            </config>
            <pd:inputBindings>
                <ActivityInput>
                    <subject>
                        <xsl:value-of select="$BuildCMH-MM007Light/CMH/TO/@DESTINATION"/>
                    </subject>
                    <timeout>
                        <xsl:value-of select="$_globalVariables/ns4:GlobalVariables/IKKAdapter/AstridAdapter/Timeout"/>
                    </timeout>
                    <body>
                        <xsl:copy-of select="$MapEAIRequest-MM007Light/pfx33:GetTickets/ancestor-or-self::*/namespace::node()"/>
                        <xsl:copy-of select="$MapEAIRequest-MM007Light/pfx33:GetTickets/@*"/>
                        <xsl:copy-of select="$MapEAIRequest-MM007Light/pfx33:GetTickets/node()"/>
                    </body>
                </ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogRvResponse-MM007Light">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>806</pd:x>
            <pd:y>624</pd:y>
            <config>
                <processName>/IKKAdapter/Sub Processes/Sub_LogMessage.process</processName>
            </config>
            <pd:inputBindings>
                <param>
                    <AnyXMLMessage>
                        <xsl:copy-of select="$EAI-Astrid/ActivityOutput"/>
                    </AnyXMLMessage>
                    <StringMessage>
                        <xsl:value-of select="&quot;RvResposeLog MM007Light&quot;"/>
                    </StringMessage>
                    <LogLevel>
                        <xsl:value-of select="&quot;INFO&quot;"/>
                    </LogLevel>
                </param>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="MapEAIReply-MM007Light">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>828</pd:x>
            <pd:y>714</pd:y>
            <config>
                <element ref="pfx18:GetTicketsResponse"/>
            </config>
            <pd:inputBindings>
                <pfx18:GetTicketsResponse>
                    <pfx18:herkomstCode>
                        <xsl:value-of select="$EAI-Astrid/ActivityOutput/body/ns22:RESULT_STATUS/@ns6:STATUS"/>
                    </pfx18:herkomstCode>
                    <xsl:choose>
                        <xsl:when test="exists($EAI-Astrid/ActivityOutput/body/ns22:RESULT_STATUS/@ns6:ERROR_CODE)&#xA;and&#xA;$EAI-Astrid/ActivityOutput/body/ns22:RESULT_STATUS/@ns6:ERROR_CODE!=&quot;&quot;">
                            <pfx18:transactieStatus>
                                <xsl:value-of select="$EAI-Astrid/ActivityOutput/body/ns22:RESULT_STATUS/@ns6:ERROR_CODE"/>
                            </pfx18:transactieStatus>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx18:transactieStatus>
                                <xsl:value-of select="$EAI-Astrid/ActivityOutput/body/pfx34:ENGIN/pfx34:STATUS_S-0100/ns32:RESULTAAT_CODE"/>
                            </pfx18:transactieStatus>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                        <xsl:when test="exists($EAI-Astrid/ActivityOutput/body/ns22:RESULT_STATUS/@ns6:ERROR_CODE)&#xA;and&#xA;$EAI-Astrid/ActivityOutput/body/ns22:RESULT_STATUS/@ns6:ERROR_CODE!=&quot;&quot;">
                            <pfx18:errorMessage>
                                <xsl:value-of select="$EAI-Astrid/ActivityOutput/body/ns22:RESULT_STATUS/@ns6:ERROR_DESCRIPTION"/>
                            </pfx18:errorMessage>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx18:errorMessage>
                                <xsl:value-of select="$EAI-Astrid/ActivityOutput/body/pfx34:ENGIN/pfx34:STATUS_S-0100/ns32:RESULTAAT_TEKST"/>
                            </pfx18:errorMessage>
                        </xsl:otherwise>
                    </xsl:choose>
                    <pfx18:GUID>
                        <xsl:value-of select="$SOAPEvent/inputMessage/pfx18:GetTicketsRequest/pfx18:GUID"/>
                    </pfx18:GUID>
                    <pfx18:TicketList>
                        <xsl:for-each select="$EAI-Astrid/ActivityOutput/body/pfx34:ENGIN/pfx34:Loop">
                            <pfx18:Ticket>
                                <pfx18:ACCEPT_DATE_TIME>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:AANNAME_DATUM"/>
                                </pfx18:ACCEPT_DATE_TIME>
                                <pfx18:ANALYSIS_INFORMATION>
                                    <xsl:value-of select="current()/pfx34:MEET_S-0100/ns27:MEETGEGEVENS_2"/>
                                </pfx18:ANALYSIS_INFORMATION>
                                <pfx18:ANALYSIS_INFORMATION_SUMMARY>
                                    <xsl:value-of select="current()/pfx34:MEET_S-0100/ns27:MEETGEGEVENS_1"/>
                                </pfx18:ANALYSIS_INFORMATION_SUMMARY>
                                <pfx18:ANALYST_ID>
                                    <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:ANALIST_CODE"/>
                                </pfx18:ANALYST_ID>
                                <pfx18:APPOINTMENT_ENGINEER_AREA>
                                    <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_ONDERZOEKER_WERKGEBIED"/>
                                </pfx18:APPOINTMENT_ENGINEER_AREA>
                                <xsl:if test="exists(current()/pfx34:MELD_S-0100/ns21:DATUM_WAAROP_STATUS_VERKREGEN_IS)&#xA;and not ( empty(current()/pfx34:MELD_S-0100/ns21:DATUM_WAAROP_STATUS_VERKREGEN_IS) )&#xA;and not (current()/pfx34:MELD_S-0100/ns21:DATUM_WAAROP_STATUS_VERKREGEN_IS = &quot;&quot;)">
                                    <pfx18:ASSIGNED_DATE_TIME>
                                        <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:DATUM_WAAROP_STATUS_VERKREGEN_IS"/>
                                    </pfx18:ASSIGNED_DATE_TIME>
                                </xsl:if>
                                <xsl:if test="exists(current()/pfx34:WERK_S-0100/ns25:DATUM_EINDE_WERKZAAMHEDEN)&#xA;and not ( empty(current()/pfx34:WERK_S-0100/ns25:DATUM_EINDE_WERKZAAMHEDEN) )&#xA;and not (current()/pfx34:WERK_S-0100/ns25:DATUM_EINDE_WERKZAAMHEDEN = &quot;&quot;)">
                                    <pfx18:CLOSED_DATE>
                                        <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:DATUM_EINDE_WERKZAAMHEDEN"/>
                                    </pfx18:CLOSED_DATE>
                                </xsl:if>
                                <pfx18:CLOSURE_REPORT_CODE>
                                    <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:RAPPORTAGE_CODE"/>
                                </pfx18:CLOSURE_REPORT_CODE>
                                <xsl:if test="exists(current()/pfx34:VOROND_S-0100/ns30:DATUM_AANVANG_WERKZAAMHEDEN)&#xA;and not ( empty(current()/pfx34:VOROND_S-0100/ns30:DATUM_AANVANG_WERKZAAMHEDEN) )&#xA;and not (current()/pfx34:VOROND_S-0100/ns30:DATUM_AANVANG_WERKZAAMHEDEN = &quot;&quot;)">
                                    <pfx18:CREATED_ON_DATE>
                                        <xsl:value-of select="current()/pfx34:VOROND_S-0100/ns30:DATUM_AANVANG_WERKZAAMHEDEN"/>
                                    </pfx18:CREATED_ON_DATE>
                                </xsl:if>
                                <xsl:if test="exists(current()/pfx34:WERK_S-0100/ns25:DATUM_GEREEDMELDEN_KLACHT)&#xA;and not ( empty(current()/pfx34:WERK_S-0100/ns25:DATUM_GEREEDMELDEN_KLACHT) )&#xA;and not (current()/pfx34:WERK_S-0100/ns25:DATUM_GEREEDMELDEN_KLACHT = &quot;&quot;)">
                                    <pfx18:CUSTOMER_ACK_COMPLETE_DATETIME>
                                        <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:DATUM_GEREEDMELDEN_KLACHT"/>
                                    </pfx18:CUSTOMER_ACK_COMPLETE_DATETIME>
                                </xsl:if>
                                <pfx18:EMPLOYEE_LOGIN_NAME>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:NAAM_VAN_GEBRUIKER_DIE_KLACHT_AANNEEMT"/>
                                </pfx18:EMPLOYEE_LOGIN_NAME>
                                <pfx18:EXTERNAL_CUSTOMER_REF_NO>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:EXTERN_KLANTORDER_NUMMER"/>
                                </pfx18:EXTERNAL_CUSTOMER_REF_NO>
                                <pfx18:FORMULA_ID>
                                    <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:FORMULE"/>
                                </pfx18:FORMULA_ID>
                                <pfx18:ISDN_SUB_NUMBER>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:ONDERNUMMER"/>
                                </pfx18:ISDN_SUB_NUMBER>
                                <pfx18:MM007C_TROUBLE_URGENCY_FLAG>
                                    <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:URGENTIE_DOOR_KLANT_AANGEGEVEN_OMSCHRIJVING"/>
                                </pfx18:MM007C_TROUBLE_URGENCY_FLAG>
                                <pfx18:MM007C_TROUBLE_URGENCY_ID>
                                    <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:URGENTIE_DOOR_KLANT_AANGEGEVEN_CODE"/>
                                </pfx18:MM007C_TROUBLE_URGENCY_ID>
                                <pfx18:MM007R_PRODUCT_TYPE_DESCRIPTION>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:TYPE_PRODUCT_ID_OMSCHRIJVING"/>
                                </pfx18:MM007R_PRODUCT_TYPE_DESCRIPTION>
                                <pfx18:MM007_ANALYST_TEXT>
                                    <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:ANALIST_OMSCHRIJVING"/>
                                </pfx18:MM007_ANALYST_TEXT>
                                <xsl:if test="exists(current()/pfx34:VERPL_S-0100/ns26:KLACHT_1E_AFSPRAAK_DATUM)&#xA;and not ( empty(current()/pfx34:VERPL_S-0100/ns26:KLACHT_1E_AFSPRAAK_DATUM) )&#xA;and not (current()/pfx34:VERPL_S-0100/ns26:KLACHT_1E_AFSPRAAK_DATUM = &quot;&quot;)">
                                    <pfx18:MM007_APPOINTMENT_DT>
                                        <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:KLACHT_1E_AFSPRAAK_DATUM"/>
                                    </pfx18:MM007_APPOINTMENT_DT>
                                </xsl:if>
                                <pfx18:MM007_APPOINTMENT_ORG_TEXT>
                                    <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_ORGANISATIE_OMSCHRIJVING"/>
                                </pfx18:MM007_APPOINTMENT_ORG_TEXT>
                                <pfx18:MM007_BAAN_CONTRACT_ID>
                                    <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:CONTRACT_IDENTIFICATIE_NUMMER_PAKKET"/>
                                </pfx18:MM007_BAAN_CONTRACT_ID>
                                <xsl:if test="exists(current()/pfx34:VERPL_S-0100/ns26:CONTRACT_DATUM_IN_DIENST)&#xA;and not ( empty(current()/pfx34:VERPL_S-0100/ns26:CONTRACT_DATUM_IN_DIENST) )&#xA;and not (current()/pfx34:VERPL_S-0100/ns26:CONTRACT_DATUM_IN_DIENST = &quot;&quot;)">
                                    <pfx18:MM007_CONTRACT_BEGIN_DT>
                                        <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:CONTRACT_DATUM_IN_DIENST"/>
                                    </pfx18:MM007_CONTRACT_BEGIN_DT>
                                </xsl:if>
                                <pfx18:MM007_CONTRACT_CODE>
                                    <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:CONTRACT_SOORT"/>
                                </pfx18:MM007_CONTRACT_CODE>
                                <pfx18:MM007_CONTRACT_HALFHOUR_IND>
                                    <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:CONTRACT_HALFUUR_INDICATOR"/>
                                </pfx18:MM007_CONTRACT_HALFHOUR_IND>
                                <pfx18:MM007_CUSTOMER_ACCEPTS_COSTS>
                                    <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:KOSTEN_AKKOORD_"/>
                                </pfx18:MM007_CUSTOMER_ACCEPTS_COSTS>
                                <pfx18:MM007_CUSTOMER_CONTRACT_COUNT>
                                    <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:AANTAL_CONTRACTEN"/>
                                </pfx18:MM007_CUSTOMER_CONTRACT_COUNT>
                                <pfx18:MM007_DISPATCH_SYSTEM>
                                    <xsl:value-of select="current()/pfx34:TECH_S-0100/ns28:AFHANDELEND_SYSTEEM"/>
                                </pfx18:MM007_DISPATCH_SYSTEM>
                                <pfx18:MM007_ENGINEER_WILL_VISIT_CUSTOMER>
                                    <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:INDICATIE_WEL_GEEN_BEZOEK_BIJ_AFSPRAAK"/>
                                </pfx18:MM007_ENGINEER_WILL_VISIT_CUSTOMER>
                                <pfx18:MM007_ORDER_TYPE_ABBREVIATION>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:ORDER_TYPE_AFKORTING"/>
                                </pfx18:MM007_ORDER_TYPE_ABBREVIATION>
                                <pfx18:MM007_OWNED_TROUBLE_REPORT>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:INDICATIE_OF_HET_EEN_BSD_MELDING_BETREFT"/>
                                </pfx18:MM007_OWNED_TROUBLE_REPORT>
                                <xsl:if test="current()/pfx34:VERPL_S-0100/ns26:KLACHT_1E_DAGDEEL_VAN">
                                    <pfx18:MM007_PART_OF_DAY_BEGIN_TM>
                                        <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:KLACHT_1E_DAGDEEL_VAN"/>
                                    </pfx18:MM007_PART_OF_DAY_BEGIN_TM>
                                </xsl:if>
                                <pfx18:MM007_PART_OF_DAY_CODE>
                                    <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:KLACHT_1E_DAGDEEL_CODE"/>
                                </pfx18:MM007_PART_OF_DAY_CODE>
                                <xsl:if test="current()/pfx34:VERPL_S-0100/ns26:KLACHT_1E_DAGDEEL_TOT">
                                    <pfx18:MM007_PART_OF_DAY_END_TM>
                                        <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:KLACHT_1E_DAGDEEL_TOT"/>
                                    </pfx18:MM007_PART_OF_DAY_END_TM>
                                </xsl:if>
                                <pfx18:MM007_PART_OF_DAY_ORG_CODE>
                                    <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:KLACHT_1E_ORGANISATIE_CODE_TBV_DDE"/>
                                </pfx18:MM007_PART_OF_DAY_ORG_CODE>
                                <pfx18:MM007_PRODUCT_CATEGORY_ID>
                                    <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:PRODUCT_CATEGORIE_OMSCHRIJVING"/>
                                </pfx18:MM007_PRODUCT_CATEGORY_ID>
                                <pfx18:MM007_PRODUCT_ID>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:PRODUCT_ID"/>
                                </pfx18:MM007_PRODUCT_ID>
                                <pfx18:MM007_PRODUCT_TYPE_CODE>
                                    <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:PRODUCTSOORT_CODE"/>
                                </pfx18:MM007_PRODUCT_TYPE_CODE>
                                <pfx18:MM007_PRODUCT_TYPE_CODE_1>
                                    <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:KLACHT_1E_PRODUCTSOORT_CODE"/>
                                </pfx18:MM007_PRODUCT_TYPE_CODE_1>
                                <pfx18:MM007_PRODUCT_TYPE_DESCRIPTION>
                                    <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:PRODUCTSOORT_OMSCHRIJVING"/>
                                </pfx18:MM007_PRODUCT_TYPE_DESCRIPTION>
                                <pfx18:MM007_PRODUCT_TYPE_DESCRIPTION_1>
                                    <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:KLACHT_1E_PRODUCTSOORT_OMSCHRIJVING"/>
                                </pfx18:MM007_PRODUCT_TYPE_DESCRIPTION_1>
                                <pfx18:MM007_PRODUCT_TYPE_ID>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:TYPE_PRODUCT_ID"/>
                                </pfx18:MM007_PRODUCT_TYPE_ID>
                                <pfx18:MM007_REGION_ID_SEQ_NUMBER>
                                    <xsl:value-of select="current()/pfx34:STRBOX_S-0100/ns29:STRATA_IDENTIFICATIE_REGIOVOLGNUMMER"/>
                                </pfx18:MM007_REGION_ID_SEQ_NUMBER>
                                <pfx18:MM007_REPAIR_REMARKS>
                                    <xsl:value-of select="current()/pfx34:STRBOX_S-0100/ns29:STRATA_BIJZONDERHEDEN"/>
                                </pfx18:MM007_REPAIR_REMARKS>
                                <pfx18:MM007_REPORT_KEY>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:IDENTIFICATIE_VAN_DE_MELDING"/>
                                </pfx18:MM007_REPORT_KEY>
                                <pfx18:MM007_RESEARCH_AREA>
                                    <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:ONDERZOEKER_WERKGEBIED"/>
                                </pfx18:MM007_RESEARCH_AREA>
                                <pfx18:MM007_RESEARCH_DEPARTMENT_CODE>
                                    <xsl:value-of select="current()/pfx34:VOROND_S-0100/ns30:VORIGE_ONDERZOEKER_AFDELING"/>
                                </pfx18:MM007_RESEARCH_DEPARTMENT_CODE>
                                <pfx18:MM007_RESEARCH_EMPLOYEE_CODE>
                                    <xsl:value-of select="current()/pfx34:VOROND_S-0100/ns30:VORIGE_ONDERZOEKER_NUMMER"/>
                                </pfx18:MM007_RESEARCH_EMPLOYEE_CODE>
                                <pfx18:MM007_ROUTED_TO>
                                    <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:ROUTEREN_NAAR"/>
                                </pfx18:MM007_ROUTED_TO>
                                <pfx18:MM007_SERVICE_HOURS_CODE>
                                    <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:CONTRACT_WERKTIJD_CODE"/>
                                </pfx18:MM007_SERVICE_HOURS_CODE>
                                <pfx18:MM007_SERVICE_ID>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:LEIDENDE_SERVICE_ID"/>
                                </pfx18:MM007_SERVICE_ID>
                                <pfx18:MM007_SERVICE_PHONE_NUMBER>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:TELEFOONNUMMER"/>
                                </pfx18:MM007_SERVICE_PHONE_NUMBER>
                                <pfx18:MM007_SERVICE_RESPONSE_WINDOW>
                                    <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:CONTRACT_RESPONSE_UREN"/>
                                </pfx18:MM007_SERVICE_RESPONSE_WINDOW>
                                <pfx18:MM007_SOURCE>
                                    <xsl:value-of select="current()/pfx34:TECH_S-0100/ns28:BRONSYSTEEM_ORDER_REFERENTIE"/>
                                </pfx18:MM007_SOURCE>
                                <pfx18:MM007_SPECIFY_DEFAULT_ANALIST>
                                    <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:BEPAAL_DEFAULT_ANALIST"/>
                                </pfx18:MM007_SPECIFY_DEFAULT_ANALIST>
                                <pfx18:MM007_STRATA_NAME>
                                    <xsl:value-of select="current()/pfx34:STRBOX_S-0100/ns29:STRATA_NAAM"/>
                                </pfx18:MM007_STRATA_NAME>
                                <pfx18:MM007_STRATA_SEQ_NUMBER>
                                    <xsl:value-of select="current()/pfx34:STRBOX_S-0100/ns29:STRATA_VOLGNUMMER"/>
                                </pfx18:MM007_STRATA_SEQ_NUMBER>
                                <pfx18:MM007_SUBSCRIBED_TO_NOTIFICATIONS>
                                    <xsl:value-of select="current()/pfx34:TECH_S-0100/ns28:ABONNEMENT_OP_VOORTGANGSINFORMATIE"/>
                                </pfx18:MM007_SUBSCRIBED_TO_NOTIFICATIONS>
                                <pfx18:MM007_TARGET>
                                    <xsl:value-of select="current()/pfx34:TECH_S-0100/ns28:DOELSYSTEEM_ORDER_REFERENTIE"/>
                                </pfx18:MM007_TARGET>
                                <pfx18:MM007_TROUBLE_CAUSE_CODE>
                                    <xsl:value-of select="current()/pfx34:STRBOX_S-0100/ns29:STRATA_OORZAAK_GEVONDEN_INDICATOR"/>
                                </pfx18:MM007_TROUBLE_CAUSE_CODE>
                                <pfx18:MM007_TROUBLE_URGENCY_FLAG>
                                    <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:URGENTIE_MAJOR_MINOR_INDICATIE"/>
                                </pfx18:MM007_TROUBLE_URGENCY_FLAG>
                                <pfx18:MM007_TROUBLE_URGENCY_ID>
                                    <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:URGENTIE_CODE"/>
                                </pfx18:MM007_TROUBLE_URGENCY_ID>
                                <pfx18:MM007_VISIT_IND_1>
                                    <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:KLACHT_INDICATIE_1E_BEZOEK_BIJ_AFSPRAAK"/>
                                </pfx18:MM007_VISIT_IND_1>
                                <pfx18:MM007_WORK_AREA_CODE>
                                    <xsl:value-of select="current()/pfx34:STRBOX_S-0100/ns29:STRATA_WERKVELD_CODE"/>
                                </pfx18:MM007_WORK_AREA_CODE>
                                <xsl:if test="exists(current()/pfx34:WERK_S-0100/ns25:DATUM_TERUGMELDEN_KLACHT)&#xA;and not ( empty(current()/pfx34:WERK_S-0100/ns25:DATUM_TERUGMELDEN_KLACHT) )&#xA;and not (current()/pfx34:WERK_S-0100/ns25:DATUM_TERUGMELDEN_KLACHT = &quot;&quot;)">
                                    <pfx18:NOTIFICATION_COMPLETE_DATETIME>
                                        <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:DATUM_TERUGMELDEN_KLACHT"/>
                                    </pfx18:NOTIFICATION_COMPLETE_DATETIME>
                                </xsl:if>
                                <pfx18:PRV_TROUBLE_STATUS_CODE>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:VORIGE_STATUS"/>
                                </pfx18:PRV_TROUBLE_STATUS_CODE>
                                <pfx18:PRV_TROUBLE_STATUS_DESCRIPTION>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:VORIGE_STATUS_OMSCHRIJVING"/>
                                </pfx18:PRV_TROUBLE_STATUS_DESCRIPTION>
                                <xsl:if test="exists(current()/pfx34:VERPL_S-0100/ns26:BEREKEND_TIJDSTIP)&#xA;and not ( empty(current()/pfx34:VERPL_S-0100/ns26:BEREKEND_TIJDSTIP) )&#xA;and not (current()/pfx34:VERPL_S-0100/ns26:BEREKEND_TIJDSTIP = &quot;&quot;)">
                                    <pfx18:REPAIR_DEADLINE_DATE_TIME>
                                        <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:BEREKEND_TIJDSTIP"/>
                                    </pfx18:REPAIR_DEADLINE_DATE_TIME>
                                </xsl:if>
                                <pfx18:REPAIR_REMARKS>
                                    <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:BIJZONDERHEDEN"/>
                                </pfx18:REPAIR_REMARKS>
                                <pfx18:REPEATED_TROUBLE_FLAG>
                                    <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:HERHAALSTORING"/>
                                </pfx18:REPEATED_TROUBLE_FLAG>
                                <pfx18:REPORT_DESCR>
                                    <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:RAPPORTAGE_OMSCHRIJVING"/>
                                </pfx18:REPORT_DESCR>
                                <pfx18:RESEARCH_DEPARTMENT_CODE>
                                    <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:ONDERZOEKER_AFDELING"/>
                                </pfx18:RESEARCH_DEPARTMENT_CODE>
                                <pfx18:RESEARCH_EMPLOYEE_CODE>
                                    <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:ONDERZOEKER_NUMMER"/>
                                </pfx18:RESEARCH_EMPLOYEE_CODE>
                                <xsl:if test="exists(current()/pfx34:VERPL_S-0100/ns26:HERSTEL_TIJDSTIP)&#xA;and not ( empty(current()/pfx34:VERPL_S-0100/ns26:HERSTEL_TIJDSTIP) )&#xA;and not (current()/pfx34:VERPL_S-0100/ns26:HERSTEL_TIJDSTIP = &quot;&quot;)">
                                    <pfx18:SLA_CLEARING_DATE_TIME>
                                        <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:HERSTEL_TIJDSTIP"/>
                                    </pfx18:SLA_CLEARING_DATE_TIME>
                                </xsl:if>
                                <xsl:if test="exists(current()/pfx34:VERPL_S-0100/ns26:HERSTELTIJDSTIP_1E)&#xA;and not ( empty(current()/pfx34:VERPL_S-0100/ns26:HERSTELTIJDSTIP_1E) )&#xA;and not (current()/pfx34:VERPL_S-0100/ns26:HERSTELTIJDSTIP_1E = &quot;&quot;)">
                                    <pfx18:SLA_CLEARING_DATE_TIME_1>
                                        <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:HERSTELTIJDSTIP_1E"/>
                                    </pfx18:SLA_CLEARING_DATE_TIME_1>
                                </xsl:if>
                                <pfx18:STRATA_TROUBLE_CLOSURE_METHOD>
                                    <xsl:value-of select="current()/pfx34:STRBOX_S-0100/ns29:STRATA_AFGEMELDE_KLANT_INDICATIE"/>
                                </pfx18:STRATA_TROUBLE_CLOSURE_METHOD>
                                <pfx18:TROUBLE_CAUSE_CODE>
                                    <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:AARD_VAN_STORING_CODE"/>
                                </pfx18:TROUBLE_CAUSE_CODE>
                                <pfx18:TROUBLE_CAUSE_DESCRIPTION>
                                    <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:AARD_VAN_STORING_OMSCHRIJVING"/>
                                </pfx18:TROUBLE_CAUSE_DESCRIPTION>
                                <pfx18:TROUBLE_CLOSURE_METHOD>
                                    <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:GEREEDMELDING_WIJZE"/>
                                </pfx18:TROUBLE_CLOSURE_METHOD>
                                <pfx18:TROUBLE_REPORT_ID>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:KLANTORDER_NUMMER"/>
                                </pfx18:TROUBLE_REPORT_ID>
                                <pfx18:TROUBLE_RESOLUTION_CODE>
                                    <xsl:value-of select="current()/pfx34:STRBOX_S-0100/ns29:STRATA_AARD_VAN_STORING_CODE"/>
                                </pfx18:TROUBLE_RESOLUTION_CODE>
                                <pfx18:TROUBLE_STATUS_CODE>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:STATUS"/>
                                </pfx18:TROUBLE_STATUS_CODE>
                                <pfx18:TROUBLE_STATUS_DESCRIPTION>
                                    <xsl:value-of select="current()/pfx34:MELD_S-0100/ns21:STATUS_OMSCHRIJVING"/>
                                </pfx18:TROUBLE_STATUS_DESCRIPTION>
                                <pfx18:CONTACT_PERSON>
                                    <pfx18:FAMILY_NAME>
                                        <xsl:value-of select="current()/pfx34:KLANT_S-0100/ns23:CORRESPONDENTIE_NAAM"/>
                                    </pfx18:FAMILY_NAME>
                                    <pfx18:PHONE_NUMBER>
                                        <xsl:value-of select="current()/pfx34:KLANT_S-0100/ns23:CORRESPONDENTIE_TELEFOONNR"/>
                                    </pfx18:PHONE_NUMBER>
                                </pfx18:CONTACT_PERSON>
                                <pfx18:COMPLAINT_CATEGORY>
                                    <pfx18:COMPLAINT_GROUP_CODE>
                                        <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:KLACHT_GROEP"/>
                                    </pfx18:COMPLAINT_GROUP_CODE>
                                    <pfx18:COMPLAINT_SPECIFIC_DESCRIPTION>
                                        <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:KLACHT_TEKST"/>
                                    </pfx18:COMPLAINT_SPECIFIC_DESCRIPTION>
                                    <pfx18:COMPLAINT_STANDARD_DESCRIPTION>
                                        <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:KLACHT_OMSCHRIJVING"/>
                                    </pfx18:COMPLAINT_STANDARD_DESCRIPTION>
                                    <pfx18:COMPLAINT_SUB_GROUP_CODE>
                                        <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:KLACHT_NUMMER"/>
                                    </pfx18:COMPLAINT_SUB_GROUP_CODE>
                                </pfx18:COMPLAINT_CATEGORY>
                                <pfx18:IDENTIFIED_CUSTOMER>
                                    <pfx18:CENTRAL_CUSTOMER_ID>
                                        <xsl:value-of select="current()/pfx34:KLANT_S-0100/ns23:CENTRALE_KLANT_REGISTRATIE_NR"/>
                                    </pfx18:CENTRAL_CUSTOMER_ID>
                                    <pfx18:PARTY_NAME>
                                        <xsl:value-of select="current()/pfx34:KLANT_S-0100/ns23:KLANTNAAM"/>
                                    </pfx18:PARTY_NAME>
                                    <pfx18:TELECOM_DISTRICT_CODE>
                                        <xsl:value-of select="current()/pfx34:KLANT_S-0100/ns23:TELECOM_DISTRICT_CODE"/>
                                    </pfx18:TELECOM_DISTRICT_CODE>
                                    <pfx18:TELECOM_REGION_CODE>
                                        <xsl:value-of select="current()/pfx34:KLANT_S-0100/ns23:TELECOM_REGIO_CODE"/>
                                    </pfx18:TELECOM_REGION_CODE>
                                    <pfx18:STRATA_TELECOM_DISTRICT_CODE>
                                        <xsl:value-of select="current()/pfx34:STRBOX_S-0100/ns29:STRATA_TELECOM_DISTRICT_CODE"/>
                                    </pfx18:STRATA_TELECOM_DISTRICT_CODE>
                                    <pfx18:PARTY>
                                        <pfx18:LEGAL_FORM_CODE>
                                            <xsl:value-of select="current()/pfx34:KLANT_S-0100/ns23:RECHTSVORM_CODE"/>
                                        </pfx18:LEGAL_FORM_CODE>
                                    </pfx18:PARTY>
                                    <pfx18:PROPERTY_ADDRESS>
                                        <pfx18:CITY_CODE>
                                            <xsl:value-of select="current()/pfx34:KLANT_S-0100/ns23:PLAATSNAAM_CODE"/>
                                        </pfx18:CITY_CODE>
                                        <pfx18:CITY_NAME>
                                            <xsl:value-of select="current()/pfx34:KLANT_S-0100/ns23:PLAATSNAAM"/>
                                        </pfx18:CITY_NAME>
                                        <pfx18:DUTCH_POSTCODE_LETTERS>
                                            <xsl:value-of select="current()/pfx34:KLANT_S-0100/ns23:POSTCODE_ALFANUMERIEK"/>
                                        </pfx18:DUTCH_POSTCODE_LETTERS>
                                        <pfx18:DUTCH_POSTCODE_NUMBERS>
                                            <xsl:value-of select="current()/pfx34:KLANT_S-0100/ns23:POSTCODE_NUMERIEK"/>
                                        </pfx18:DUTCH_POSTCODE_NUMBERS>
                                        <pfx18:HOUSE_NUMBER>
                                            <xsl:value-of select="current()/pfx34:KLANT_S-0100/ns23:HUISNUMMER_NUMERIEK"/>
                                        </pfx18:HOUSE_NUMBER>
                                        <pfx18:HOUSE_NUMBER_EXTENSION>
                                            <xsl:value-of select="current()/pfx34:KLANT_S-0100/ns23:HUISNUMMER_ALFANUMERIEK"/>
                                        </pfx18:HOUSE_NUMBER_EXTENSION>
                                        <pfx18:STREET_NAME>
                                            <xsl:value-of select="current()/pfx34:KLANT_S-0100/ns23:STRAATNAAM"/>
                                        </pfx18:STREET_NAME>
                                    </pfx18:PROPERTY_ADDRESS>
                                </pfx18:IDENTIFIED_CUSTOMER>
                                <pfx18:SERVICE_VISIT>
                                    <xsl:if test="exists(current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_DATUM)&#xA;and not ( empty(current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_DATUM) )&#xA;and not (current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_DATUM = &quot;&quot;)">
                                        <pfx18:START_DATE_TIME>
                                            <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_DATUM"/>
                                        </pfx18:START_DATE_TIME>
                                    </xsl:if>
                                    <xsl:if test="exists(current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_DAGDEEL_VAN)&#xA;and not ( empty(current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_DAGDEEL_VAN) )&#xA;and not (current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_DAGDEEL_VAN = &quot;&quot;)">
                                        <pfx18:VISIT_WINDOW_START_TIME>
                                            <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_DAGDEEL_VAN"/>
                                        </pfx18:VISIT_WINDOW_START_TIME>
                                    </xsl:if>
                                    <xsl:if test="exists(current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_DAGDEEL_TOT)&#xA;and not ( empty(current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_DAGDEEL_TOT) )&#xA;and not (current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_DAGDEEL_TOT = &quot;&quot;)">
                                        <pfx18:VISIT_WINDOW_END_TIME>
                                            <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_DAGDEEL_TOT"/>
                                        </pfx18:VISIT_WINDOW_END_TIME>
                                    </xsl:if>
                                    <pfx18:MM007_APPOINTMENT_OUTSIDE_CUSTOMER_NORM>
                                        <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:BUITEN_NORM_PLAN_KAL"/>
                                    </pfx18:MM007_APPOINTMENT_OUTSIDE_CUSTOMER_NORM>
                                    <pfx18:MM007_APPOINTMENT_OUTSIDE_NORM_CALENDAR>
                                        <xsl:value-of select="current()/pfx34:KLACHT_S-0102/ns24:BUITEN_NORM_VERZOEK_KLANT"/>
                                    </pfx18:MM007_APPOINTMENT_OUTSIDE_NORM_CALENDAR>
                                    <pfx18:MM007_APPOINTMENT_PART_OF_DAY>
                                        <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_DAGDEEL_CODE"/>
                                    </pfx18:MM007_APPOINTMENT_PART_OF_DAY>
                                    <pfx18:MM007_RESEARCH_DEPARTMENT_CODE>
                                        <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_ONDERZOEKER_AFDELING"/>
                                    </pfx18:MM007_RESEARCH_DEPARTMENT_CODE>
                                    <pfx18:MM007_RESEARCH_EMPLOYEE_CODE>
                                        <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_ONDERZOEKER_NUMMER"/>
                                    </pfx18:MM007_RESEARCH_EMPLOYEE_CODE>
                                    <pfx18:RESEARCH_AGENCY_CODE>
                                        <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:AFSPRAAK_ORGANISATIE"/>
                                    </pfx18:RESEARCH_AGENCY_CODE>
                                    <pfx18:APPOINTMENT_WITHIN_NORM>
                                        <xsl:value-of select="current()/pfx34:VERPL_S-0100/ns26:INDICATIE_AFSPRAAK_BUITEN_NORM"/>
                                    </pfx18:APPOINTMENT_WITHIN_NORM>
                                </pfx18:SERVICE_VISIT>
                                <pfx18:WORK_ORDER>
                                    <xsl:if test="exists(current()/pfx34:VOROND_S-0100/ns30:DATUM_EINDE_WERKZAAMHEDEN)&#xA;and not ( empty(current()/pfx34:VOROND_S-0100/ns30:DATUM_EINDE_WERKZAAMHEDEN) )&#xA;and not (current()/pfx34:VOROND_S-0100/ns30:DATUM_EINDE_WERKZAAMHEDEN = &quot;&quot;)">
                                        <pfx18:WORK_ORDER_ACTUAL_END_DATETIME>
                                            <xsl:value-of select="current()/pfx34:VOROND_S-0100/ns30:DATUM_EINDE_WERKZAAMHEDEN"/>
                                        </pfx18:WORK_ORDER_ACTUAL_END_DATETIME>
                                    </xsl:if>
                                    <xsl:if test="exists(current()/pfx34:WERK_S-0100/ns25:DATUM_AANVANG_WERKZAAMHEDEN)&#xA;and not ( empty(current()/pfx34:WERK_S-0100/ns25:DATUM_AANVANG_WERKZAAMHEDEN) )&#xA;and not (current()/pfx34:WERK_S-0100/ns25:DATUM_AANVANG_WERKZAAMHEDEN = &quot;&quot;)">
                                        <pfx18:WORK_ORDER_ACTUAL_START_DATETIME>
                                            <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:DATUM_AANVANG_WERKZAAMHEDEN"/>
                                        </pfx18:WORK_ORDER_ACTUAL_START_DATETIME>
                                    </xsl:if>
                                    <xsl:if test="exists(current()/pfx34:WERK_S-0100/ns25:ANALYSE_EINDDATUM)&#xA;and not ( empty(current()/pfx34:WERK_S-0100/ns25:ANALYSE_EINDDATUM) )&#xA;and not (current()/pfx34:WERK_S-0100/ns25:ANALYSE_EINDDATUM = &quot;&quot;)">
                                        <pfx18:WORK_ORDER_COMPLETION_DATETIME>
                                            <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:ANALYSE_EINDDATUM"/>
                                        </pfx18:WORK_ORDER_COMPLETION_DATETIME>
                                    </xsl:if>
                                    <xsl:if test="exists(current()/pfx34:VOROND_S-0100/ns30:UITGIFTE_DATUM)&#xA;and not ( empty(current()/pfx34:VOROND_S-0100/ns30:UITGIFTE_DATUM) )&#xA;and not (current()/pfx34:VOROND_S-0100/ns30:UITGIFTE_DATUM = &quot;&quot;)">
                                        <pfx18:WORK_ORDER_ISSUE_DATETIME>
                                            <xsl:value-of select="current()/pfx34:VOROND_S-0100/ns30:UITGIFTE_DATUM"/>
                                        </pfx18:WORK_ORDER_ISSUE_DATETIME>
                                    </xsl:if>
                                    <xsl:if test="exists(current()/pfx34:WERK_S-0100/ns25:UITGIFTE_DATUM)&#xA;and not ( empty(current()/pfx34:WERK_S-0100/ns25:UITGIFTE_DATUM) )&#xA;and not (current()/pfx34:WERK_S-0100/ns25:UITGIFTE_DATUM = &quot;&quot;)">
                                        <pfx18:PRV_WORK_ORDER_ISSUE_DATETIME>
                                            <xsl:value-of select="current()/pfx34:WERK_S-0100/ns25:UITGIFTE_DATUM"/>
                                        </pfx18:PRV_WORK_ORDER_ISSUE_DATETIME>
                                    </xsl:if>
                                </pfx18:WORK_ORDER>
                            </pfx18:Ticket>
                        </xsl:for-each>
                    </pfx18:TicketList>
                </pfx18:GetTicketsResponse>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogSoapReplyMsg-MM007Light">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>902</pd:x>
            <pd:y>605</pd:y>
            <config>
                <processName>/IKKAdapter/Sub Processes/Sub_LogMessage.process</processName>
            </config>
            <pd:inputBindings>
                <param>
                    <AnyXMLMessage>
                        <xsl:copy-of select="$MapEAIReply-MM007Light/pfx18:GetTicketsResponse"/>
                    </AnyXMLMessage>
                    <StringMessage>
                        <xsl:value-of select="&quot;SoapReplyMsgLog MM007Light&quot;"/>
                    </StringMessage>
                    <LogLevel>
                        <xsl:value-of select="&quot;INFO&quot;"/>
                    </LogLevel>
                </param>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="SOAPReply-MM007Light">
            <pd:type>com.tibco.plugin.soap.SOAPSendReplyActivity</pd:type>
            <pd:resourceType>ae.activities.SOAPSendReplyUI</pd:resourceType>
            <pd:x>976</pd:x>
            <pd:y>696</pd:y>
            <config>
                <eventSource>SOAPEvent</eventSource>
            </config>
            <pd:inputBindings>
                <outputMessage>
                    <xsl:copy-of select="$MapEAIReply-MM007Light/pfx18:GetTicketsResponse"/>
                </outputMessage>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="LogSOAPReplyOK-MM007Light">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>1048</pd:x>
            <pd:y>612</pd:y>
            <config>
                <processName>/IKKAdapter/Sub Processes/Sub_LogMessage.process</processName>
            </config>
            <pd:inputBindings>
                <param>
                    <StringMessage>
                        <xsl:value-of select="&quot;SOAPReplyOKLog MM007Light&quot;"/>
                    </StringMessage>
                    <LogLevel>
                        <xsl:value-of select="&quot;INFO&quot;"/>
                    </LogLevel>
                </param>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>TryCatch</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>TryCatch</pd:from>
        <pd:to>LogPrecessErrorRv</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65434</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogSoapFault</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogSoapFaultException</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogPrecessErrorRv</pd:from>
        <pd:to>SOAPSendReplyFault</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPSendReplyFault</pd:from>
        <pd:to>LogSoapFault</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPSendReplyFault</pd:from>
        <pd:to>LogSoapFaultException</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPEvent</pd:from>
        <pd:to>InitCMH</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>InitCMH</pd:from>
        <pd:to>Null</pd:to>
        <pd:xpathDescription>OK</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>InitCMH</pd:from>
        <pd:to>LogPrecessErrorRv</pd:to>
        <pd:xpathDescription>SOAPEvent Exception</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($_error)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Postpone Exception Handling</pd:from>
        <pd:to>InitCMH</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPEvent</pd:from>
        <pd:to>Postpone Exception Handling</pd:to>
        <pd:xpathDescription>SOAPEvent Exception</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>TryCatch</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>upper-case($_globalVariables/ns4:GlobalVariables/IKKAdapter/SwitchMM007Light)="FALSE"</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>TryCatch MM007Light</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>TryCatch MM007Light</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>TryCatch MM007Light</pd:from>
        <pd:to>LogPrecessErrorRv</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>