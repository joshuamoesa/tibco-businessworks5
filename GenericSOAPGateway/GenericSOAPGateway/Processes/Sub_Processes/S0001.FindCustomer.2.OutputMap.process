<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/GenericSOAPGateway/Response/0001_FindCustomer_2.2_Response_EAI_BUS_SIDE.xsd" xmlns:ns="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" xmlns:ns1="http://xmlns.kpn.com/fixed/ckradapter/common/CKRResponse.xsd" xmlns:ns2="http://xmlns.kpn.com/common/cdm/Base.xsd" xmlns:ns3="http://xmlns.kpn.com/fixed/ckradapter/common/Customer.xsd" xmlns:ns4="http://xmlns.kpn.com/fixed/ckradapter/common/PropertyAddress.xsd" xmlns:ns5="http://xmlns.kpn.com/fixed/ckradapter/common/CustomerReference.xsd" xmlns:ns6="http://xmlns.kpn.com/fixed/ckradapter/common/ExternalCustomerReference.xsd" xmlns:ns7="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:pfx3="http://xmlns.kpn.com/eai/common/errors" xmlns:pfx4="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:ns8="http://schemas.tibco.com/bw/plugins/xml/5.0/xmlExceptions" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns9="http://www.tibco.com/pe/EngineTypes" xmlns:ns10="http://www.tibco.com/ns/no_namespace_schema_location/XSDSchemas/GenericSOAPGateway/Request/0001_FindCustomer_2.2_Response_EAI_BUS_SIDE.xsd" xmlns:ns11="http://xmlns.kpn.com/fixed/GenericSOAPGateway/XSDSchemas/GenericSOAPGateway/Response/0001_FindCustomer_2.2_Response_EAI_BUS_SIDE.xsd" xmlns:pfx5="http://xmlns.kpn.com/EAI/fixed/0001_FindCustomer/2.2/Response" xmlns:pfx6="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_OutputMap_input.xsd" xmlns:pfx7="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_OutputMap_output.xsd">
    <xsd:import namespace="http://xmlns.kpn.com/eai/common/errors" schemaLocation="/Common/Shared Resources/Errors.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/common/cdm/ResultStatus.xsd" schemaLocation="/XSDSchemas/Common/ResultStatus.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/EAI/fixed/0001_FindCustomer/2.2/Response" schemaLocation="/XSDSchemas/GenericSOAPGateway/Response/0001_FindCustomer_2.2_Response_EAI_BUS_SIDE.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/fixed/ckradapter/response/FindCustomer.xsd" schemaLocation="/XSDSchemas/CKRAdapter/Response/FindCustomer.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_OutputMap_input.xsd" schemaLocation="/XSDSchemas/GenericSOAPGateway/Common/EAI_OutputMap_input.xsd"/>
    <xsd:import namespace="http://xmlns.kpn.com/GenericSOAPGateway/Common/EAI_OutputMap_output.xsd" schemaLocation="/XSDSchemas/GenericSOAPGateway/Common/EAI_OutputMap_output.xsd"/>
    <pd:name>GenericSOAPGateway/Processes/Sub_Processes/S0001.FindCustomer.2.OutputMap.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx6:BodyContainer"/>
    <pd:startX>106</pd:startX>
    <pd:startY>111</pd:startY>
    <pd:returnBindings>
        <pfx7:BodyContainer>
            <xsl:copy-of select="$MapData/Output/pfx5:BODY"/>
        </pfx7:BodyContainer>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx7:BodyContainer"/>
    <pd:endX>425</pd:endX>
    <pd:endY>108</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:activity name="MapData">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>262</pd:x>
        <pd:y>111</pd:y>
        <config>
            <element>
                <xsd:element name="Output">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="pfx5:BODY" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:coercions>
            <pd:coercion xpath="$Start/pfx6:BodyContainer/*" element="pfx:FindCustomer"/>
        </pd:coercions>
        <pd:inputBindings>
            <Output>
                <pfx5:BODY>
                    <xsl:for-each select="$Start/pfx6:BodyContainer/pfx:FindCustomer/pfx:CUSTOMER">
                        <CUSTOMER>
                            <PROPERTY_ADDRESS>
                                <xsl:if test="ns3:PROPERTY_ADDRESS/ns4:STREET_NAME">
                                    <STREET_NAME>
                                        <xsl:value-of select="ns3:PROPERTY_ADDRESS/ns4:STREET_NAME"/>
                                    </STREET_NAME>
                                </xsl:if>
                                <xsl:if test="ns3:PROPERTY_ADDRESS/ns4:HOUSE_NUMBER">
                                    <HOUSE_NUMBER>
                                        <xsl:value-of select="ns3:PROPERTY_ADDRESS/ns4:HOUSE_NUMBER"/>
                                    </HOUSE_NUMBER>
                                </xsl:if>
                                <xsl:if test="ns3:PROPERTY_ADDRESS/ns4:HOUSE_NUMBER_EXTENSION">
                                    <HOUSE_NUMBER_EXTENSION>
                                        <xsl:value-of select="ns3:PROPERTY_ADDRESS/ns4:HOUSE_NUMBER_EXTENSION"/>
                                    </HOUSE_NUMBER_EXTENSION>
                                </xsl:if>
                                <xsl:if test="ns3:PROPERTY_ADDRESS/ns4:DUTCH_POSTCODE_NUMBERS">
                                    <DUTCH_POSTCODE_NUMBERS>
                                        <xsl:value-of select="ns3:PROPERTY_ADDRESS/ns4:DUTCH_POSTCODE_NUMBERS"/>
                                    </DUTCH_POSTCODE_NUMBERS>
                                </xsl:if>
                                <xsl:if test="ns3:PROPERTY_ADDRESS/ns4:DUTCH_POSTCODE_LETTERS">
                                    <DUTCH_POSTCODE_LETTERS>
                                        <xsl:value-of select="ns3:PROPERTY_ADDRESS/ns4:DUTCH_POSTCODE_LETTERS"/>
                                    </DUTCH_POSTCODE_LETTERS>
                                </xsl:if>
                                <xsl:if test="ns3:PROPERTY_ADDRESS/ns4:CITY_NAME">
                                    <CITY_NAME>
                                        <xsl:value-of select="ns3:PROPERTY_ADDRESS/ns4:CITY_NAME"/>
                                    </CITY_NAME>
                                </xsl:if>
                                <xsl:if test="ns3:PROPERTY_ADDRESS/ns4:CITY_CODE">
                                    <CITY_CODE>
                                        <xsl:value-of select="ns3:PROPERTY_ADDRESS/ns4:CITY_CODE"/>
                                    </CITY_CODE>
                                </xsl:if>
                                <xsl:if test="ns3:PROPERTY_ADDRESS/ns4:COUNTRY">
                                    <COUNTRY>
                                        <xsl:value-of select="ns3:PROPERTY_ADDRESS/ns4:COUNTRY"/>
                                    </COUNTRY>
                                </xsl:if>
                            </PROPERTY_ADDRESS>
                            <CUSTOMER_REFERENCE>
                                <EXTERNAL_CUSTOMER_REFERENCE>
                                    <REF_NAME>
                                        <xsl:value-of select="ns3:CUSTOMER_REFERENCE/ns5:EXTERNAL_CUSTOMER_REFERENCE/ns6:REF_NAME"/>
                                    </REF_NAME>
                                </EXTERNAL_CUSTOMER_REFERENCE>
                                <xsl:if test="ns3:CUSTOMER_REFERENCE/ns5:APPLICATION_ID">
                                    <APPLICATION_ID>
                                        <xsl:value-of select="ns3:CUSTOMER_REFERENCE/ns5:APPLICATION_ID"/>
                                    </APPLICATION_ID>
                                </xsl:if>
                                <ROLE>
                                    <xsl:value-of select="ns3:CUSTOMER_REFERENCE/ns5:ROLE"/>
                                </ROLE>
                            </CUSTOMER_REFERENCE>
                            <PARTY>
                                <xsl:if test="ns3:PARTY/PARTY_ID">
                                    <PARTY_ID>
                                        <xsl:value-of select="ns3:PARTY/PARTY_ID"/>
                                    </PARTY_ID>
                                </xsl:if>
                                <xsl:if test="ns3:PARTY/DATE_OF_BIRTH">
                                    <DATE_OF_BIRTH>
                                        <xsl:value-of select="ns3:PARTY/DATE_OF_BIRTH"/>
                                    </DATE_OF_BIRTH>
                                </xsl:if>
                                <xsl:if test="ns3:PARTY/KVK_NUMBER">
                                    <KVK_NUMBER>
                                        <xsl:value-of select="ns3:PARTY/KVK_NUMBER"/>
                                    </KVK_NUMBER>
                                </xsl:if>
                                <xsl:if test="ns3:PARTY/VALID_FROM_DATE">
                                    <VALID_FROM_DATE>
                                        <xsl:value-of select="ns3:PARTY/VALID_FROM_DATE"/>
                                    </VALID_FROM_DATE>
                                </xsl:if>
                                <xsl:if test="ns3:PARTY/VALID_UNTIL_DATE">
                                    <VALID_UNTIL_DATE>
                                        <xsl:value-of select="ns3:PARTY/VALID_UNTIL_DATE"/>
                                    </VALID_UNTIL_DATE>
                                </xsl:if>
                                <xsl:if test="ns3:PARTY/LEGAL_FORM_CODE">
                                    <LEGAL_FORM_CODE>
                                        <xsl:value-of select="ns3:PARTY/LEGAL_FORM_CODE"/>
                                    </LEGAL_FORM_CODE>
                                </xsl:if>
                                <xsl:if test="ns3:PARTY/BRANCH_NAME">
                                    <BRANCH_NAME>
                                        <xsl:value-of select="ns3:PARTY/BRANCH_NAME"/>
                                    </BRANCH_NAME>
                                </xsl:if>
                                <xsl:if test="ns3:PARTY/BRANCH_NAME_DIACRITICS">
                                    <BRANCH_NAME_DIACRITICS>
                                        <xsl:value-of select="ns3:PARTY/BRANCH_NAME_DIACRITICS"/>
                                    </BRANCH_NAME_DIACRITICS>
                                </xsl:if>
                                <xsl:if test="ns3:PARTY/PARTY_NAME">
                                    <PARTY_NAME>
                                        <xsl:value-of select="ns3:PARTY/PARTY_NAME"/>
                                    </PARTY_NAME>
                                </xsl:if>
                                <xsl:if test="ns3:PARTY/PARTY_NAME_DIACRITICS">
                                    <PARTY_NAME_DIACRITICS>
                                        <xsl:value-of select="ns3:PARTY/PARTY_NAME_DIACRITICS"/>
                                    </PARTY_NAME_DIACRITICS>
                                </xsl:if>
                                <xsl:if test="ns3:PARTY/CENTRAL_CUSTOMER_ID">
                                    <CENTRAL_CUSTOMER_ID>
                                        <xsl:value-of select="ns3:PARTY/CENTRAL_CUSTOMER_ID"/>
                                    </CENTRAL_CUSTOMER_ID>
                                </xsl:if>
                            </PARTY>
                            <xsl:if test="ns3:CENTRAL_CUSTOMER_ID">
                                <CENTRAL_CUSTOMER_ID>
                                    <xsl:value-of select="ns3:CENTRAL_CUSTOMER_ID"/>
                                </CENTRAL_CUSTOMER_ID>
                            </xsl:if>
                            <xsl:choose>
                                <xsl:when test="ns3:IS_ACTIVE = &quot;J&quot;">
                                    <IS_ACTIVE>
                                        <xsl:value-of select="true()"/>
                                    </IS_ACTIVE>
                                </xsl:when>
                                <xsl:when test="ns3:IS_ACTIVE=&quot;N&quot;">
                                    <IS_ACTIVE>
                                        <xsl:value-of select="false()"/>
                                    </IS_ACTIVE>
                                </xsl:when>
                            </xsl:choose>
                        </CUSTOMER>
                    </xsl:for-each>
                    <xsl:if test="$Start/pfx6:BodyContainer/pfx:FindCustomer/pfx:NUMBER_OF_RECORDS">
                        <NUMBER_OF_RECORDS>
                            <xsl:value-of select="$Start/pfx6:BodyContainer/pfx:FindCustomer/pfx:NUMBER_OF_RECORDS"/>
                        </NUMBER_OF_RECORDS>
                    </xsl:if>
                </pfx5:BODY>
            </Output>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>MapData</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>One Bend</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>MapData</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>